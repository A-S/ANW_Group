Grammar

    0 $accept: root $end

    1 root: /* empty */
    2     | root class

    3 class: CLASS IDENT '{' member '}'
    4      | CLASS IDENT ':' IDENT '{' member '}'

    5 member: /* empty */
    6       | member field

    7 field: global
    8      | constructor
    9      | function

   10 global: accessmodif type variables ';'
   11       | type variables ';'

   12 constructor: IDENT '(' arg_e ')' '{' statements '}'
   13            | accessmodif IDENT '(' arg_e ')' '{' statements '}'

   14 @1: /* empty */

   15 function: accessmodif type IDENT '(' @1 arg_e ')' '{' statements '}'

   16 @2: /* empty */

   17 function: accessmodif VOID IDENT '(' @2 arg_e ')' '{' statements '}'

   18 @3: /* empty */

   19 function: type IDENT '(' @3 arg_e ')' '{' statements '}'

   20 @4: /* empty */

   21 function: VOID IDENT '(' @4 arg_e ')' '{' statements '}'

   22 args: type IDENT

   23 arg: args
   24    | arg ',' args

   25 arg_e: /* empty */
   26      | arg

   27 variables: variable
   28          | variables ',' variable

   29 variable: IDENT
   30         | IDENT '=' expression

   31 accessmodif: PRIVATE
   32            | STATIC
   33            | PRIVATE STATIC

   34 type: noarraytype
   35     | arr_type

   36 noarraytype: IDENT
   37            | arraytype

   38 arraytype: BOOL
   39          | INT
   40          | DOUBLE

   41 arr_type: IDENT '[' ']'
   42         | IDENT '[' ',' ']'
   43         | IDENT '[' ',' ',' ']'
   44         | arraytype '[' ']'
   45         | arraytype '[' ',' ']'
   46         | arraytype '[' ',' ',' ']'

   47 expression: expr
   48           | qualnameorarray

   49 expr: INCREMENT qualnameorarray
   50     | DECREMENT qualnameorarray
   51     | qualnameorarray INCREMENT
   52     | qualnameorarray DECREMENT
   53     | '!' expression
   54     | '-' expression
   55     | '+' expression
   56     | '(' expr ')'
   57     | '(' IDENT ')'
   58     | '(' qnora_without_id ')'
   59     | qualnameorarray '=' expression
   60     | qualifiedname '(' expr_list_e ')'
   61     | qualifiedname '(' expr_list_e ')' arrayindex
   62     | NEW IDENT '(' expr_list_e ')'
   63     | NEW IDENT arrayindex
   64     | expr EQ expression
   65     | qualnameorarray EQ expression
   66     | expr NE expression
   67     | qualnameorarray NE expression
   68     | expr '<' expression
   69     | qualnameorarray '<' expression
   70     | expr SE expression
   71     | qualnameorarray SE expression
   72     | expr '>' expression
   73     | qualnameorarray '>' expression
   74     | expr LE expression
   75     | qualnameorarray LE expression
   76     | expr '+' expression
   77     | qualnameorarray '+' expression
   78     | expr '-' expression
   79     | qualnameorarray '-' expression
   80     | expr '*' expression
   81     | qualnameorarray '*' expression
   82     | expr '/' expression
   83     | qualnameorarray '/' expression
   84     | expr '%' expression
   85     | qualnameorarray '%' expression
   86     | expr AND expression
   87     | qualnameorarray AND expression
   88     | expr OR expression
   89     | qualnameorarray OR expression
   90     | expr IS type
   91     | qualnameorarray IS type
   92     | '(' arraytype ')' expression
   93     | '(' IDENT ')' expression
   94     | INTEGER
   95     | REAL
   96     | TRUE
   97     | FALSE
   98     | THIS
   99     | NUL

  100 arrayindex: '[' expression ']'
  101           | '[' expression ',' expression ']'
  102           | '[' expression ',' expression ',' expression ']'

  103 qualifiedname: IDENT
  104              | expr '.' IDENT
  105              | qualnameorarray '.' IDENT

  106 qualnameorarray: IDENT
  107                | IDENT arrayindex
  108                | expr '.' IDENT
  109                | qualnameorarray '.' IDENT
  110                | expr '.' IDENT arrayindex
  111                | qualnameorarray '.' IDENT arrayindex

  112 qnora_without_id: IDENT arrayindex
  113                 | expr '.' IDENT
  114                 | qualnameorarray '.' IDENT
  115                 | expr '.' IDENT arrayindex
  116                 | qualnameorarray '.' IDENT arrayindex

  117 expr_list: expression
  118          | expr_list ',' expression

  119 expr_list_e: /* empty */
  120            | expr_list

  121 statement: IF '(' expression ')' statement
  122          | IF '(' expression ')' statement ELSE statement
  123          | WHILE '(' expression ')' statement
  124          | FOR '(' vars_decl_e ';' expr_e ';' expr_e ')' statement
  125          | expression ';'
  126          | type variables ';'

  127 @5: /* empty */

  128 statement: '{' @5 statements '}'
  129          | RETURN expr_e ';'

  130 statements: /* empty */
  131           | statements statement

  132 vars_decl_e: /* empty */
  133            | type variables

  134 expr_e: /* empty */
  135       | expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 53
'%' (37) 84 85
'(' (40) 12 13 15 17 19 21 56 57 58 60 61 62 92 93 121 122 123 124
')' (41) 12 13 15 17 19 21 56 57 58 60 61 62 92 93 121 122 123 124
'*' (42) 80 81
'+' (43) 55 76 77
',' (44) 24 28 42 43 45 46 101 102 118
'-' (45) 54 78 79
'.' (46) 104 105 108 109 110 111 113 114 115 116
'/' (47) 82 83
':' (58) 4
';' (59) 10 11 124 125 126 129
'<' (60) 68 69
'=' (61) 30 59
'>' (62) 72 73
'[' (91) 41 42 43 44 45 46 100 101 102
']' (93) 41 42 43 44 45 46 100 101 102
'{' (123) 3 4 12 13 15 17 19 21 128
'}' (125) 3 4 12 13 15 17 19 21 128
error (256)
IDENT (258) 3 4 12 13 15 17 19 21 22 29 30 36 41 42 43 57 62 63 93
    103 104 105 106 107 108 109 110 111 112 113 114 115 116
INTEGER (259) 94
REAL (260) 95
CLASS (261) 3 4
BOOL (262) 38
DOUBLE (263) 40
INT (264) 39
IS (265) 90 91
IF (266) 121 122
ELSE (267) 122
WHILE (268) 123
FOR (269) 124
FALSE (270) 97
TRUE (271) 96
NEW (272) 62 63
THIS (273) 98
NUL (274) 99
PRIVATE (275) 31 33
STATIC (276) 32 33
VOID (277) 17 21
RETURN (278) 129
EXPRESSION (279)
IF_PREC (280)
OR (281) 88 89
AND (282) 86 87
NE (283) 66 67
EQ (284) 64 65
SE (285) 70 71
LE (286) 74 75
CAST (287)
UNARY_OP (288)
DECREMENT (289) 50 52
INCREMENT (290) 49 51


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
root (56)
    on left: 1 2, on right: 0 2
class (57)
    on left: 3 4, on right: 2
member (58)
    on left: 5 6, on right: 3 4 6
field (59)
    on left: 7 8 9, on right: 6
global (60)
    on left: 10 11, on right: 7
constructor (61)
    on left: 12 13, on right: 8
function (62)
    on left: 15 17 19 21, on right: 9
@1 (63)
    on left: 14, on right: 15
@2 (64)
    on left: 16, on right: 17
@3 (65)
    on left: 18, on right: 19
@4 (66)
    on left: 20, on right: 21
args (67)
    on left: 22, on right: 23 24
arg (68)
    on left: 23 24, on right: 24 26
arg_e (69)
    on left: 25 26, on right: 12 13 15 17 19 21
variables (70)
    on left: 27 28, on right: 10 11 28 126 133
variable (71)
    on left: 29 30, on right: 27 28
accessmodif (72)
    on left: 31 32 33, on right: 10 13 15 17
type (73)
    on left: 34 35, on right: 10 11 15 19 22 90 91 126 133
noarraytype (74)
    on left: 36 37, on right: 34
arraytype (75)
    on left: 38 39 40, on right: 37 44 45 46 92
arr_type (76)
    on left: 41 42 43 44 45 46, on right: 35
expression (77)
    on left: 47 48, on right: 30 53 54 55 59 64 65 66 67 68 69 70 71
    72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 92 93 100
    101 102 117 118 121 122 123 125 135
expr (78)
    on left: 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66
    67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87
    88 89 90 91 92 93 94 95 96 97 98 99, on right: 47 56 64 66 68 70
    72 74 76 78 80 82 84 86 88 90 104 108 110 113 115
arrayindex (79)
    on left: 100 101 102, on right: 61 63 107 110 111 112 115 116
qualifiedname (80)
    on left: 103 104 105, on right: 60 61
qualnameorarray (81)
    on left: 106 107 108 109 110 111, on right: 48 49 50 51 52 59 65
    67 69 71 73 75 77 79 81 83 85 87 89 91 105 109 111 114 116
qnora_without_id (82)
    on left: 112 113 114 115 116, on right: 58
expr_list (83)
    on left: 117 118, on right: 118 120
expr_list_e (84)
    on left: 119 120, on right: 60 61 62
statement (85)
    on left: 121 122 123 124 125 126 128 129, on right: 121 122 123
    124 131
@5 (86)
    on left: 127, on right: 128
statements (87)
    on left: 130 131, on right: 12 13 15 17 19 21 128 131
vars_decl_e (88)
    on left: 132 133, on right: 124
expr_e (89)
    on left: 134 135, on right: 124 129


state 0

    0 $accept: . root $end

    $default  reduce using rule 1 (root)

    root  go to state 1


state 1

    0 $accept: root . $end
    2 root: root . class

    $end   shift, and go to state 2
    CLASS  shift, and go to state 3

    class  go to state 4


state 2

    0 $accept: root $end .

    $default  accept


state 3

    3 class: CLASS . IDENT '{' member '}'
    4      | CLASS . IDENT ':' IDENT '{' member '}'

    IDENT  shift, and go to state 5


state 4

    2 root: root class .

    $default  reduce using rule 2 (root)


state 5

    3 class: CLASS IDENT . '{' member '}'
    4      | CLASS IDENT . ':' IDENT '{' member '}'

    '{'  shift, and go to state 6
    ':'  shift, and go to state 7


state 6

    3 class: CLASS IDENT '{' . member '}'

    $default  reduce using rule 5 (member)

    member  go to state 8


state 7

    4 class: CLASS IDENT ':' . IDENT '{' member '}'

    IDENT  shift, and go to state 9


state 8

    3 class: CLASS IDENT '{' member . '}'
    6 member: member . field

    IDENT    shift, and go to state 10
    BOOL     shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13
    PRIVATE  shift, and go to state 14
    STATIC   shift, and go to state 15
    VOID     shift, and go to state 16
    '}'      shift, and go to state 17

    field        go to state 18
    global       go to state 19
    constructor  go to state 20
    function     go to state 21
    accessmodif  go to state 22
    type         go to state 23
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 9

    4 class: CLASS IDENT ':' IDENT . '{' member '}'

    '{'  shift, and go to state 27


state 10

   12 constructor: IDENT . '(' arg_e ')' '{' statements '}'
   36 noarraytype: IDENT .
   41 arr_type: IDENT . '[' ']'
   42         | IDENT . '[' ',' ']'
   43         | IDENT . '[' ',' ',' ']'

    '('  shift, and go to state 28
    '['  shift, and go to state 29

    $default  reduce using rule 36 (noarraytype)


state 11

   38 arraytype: BOOL .

    $default  reduce using rule 38 (arraytype)


state 12

   40 arraytype: DOUBLE .

    $default  reduce using rule 40 (arraytype)


state 13

   39 arraytype: INT .

    $default  reduce using rule 39 (arraytype)


state 14

   31 accessmodif: PRIVATE .
   33            | PRIVATE . STATIC

    STATIC  shift, and go to state 30

    $default  reduce using rule 31 (accessmodif)


state 15

   32 accessmodif: STATIC .

    $default  reduce using rule 32 (accessmodif)


state 16

   21 function: VOID . IDENT '(' @4 arg_e ')' '{' statements '}'

    IDENT  shift, and go to state 31


state 17

    3 class: CLASS IDENT '{' member '}' .

    $default  reduce using rule 3 (class)


state 18

    6 member: member field .

    $default  reduce using rule 6 (member)


state 19

    7 field: global .

    $default  reduce using rule 7 (field)


state 20

    8 field: constructor .

    $default  reduce using rule 8 (field)


state 21

    9 field: function .

    $default  reduce using rule 9 (field)


state 22

   10 global: accessmodif . type variables ';'
   13 constructor: accessmodif . IDENT '(' arg_e ')' '{' statements '}'
   15 function: accessmodif . type IDENT '(' @1 arg_e ')' '{' statements '}'
   17         | accessmodif . VOID IDENT '(' @2 arg_e ')' '{' statements '}'

    IDENT   shift, and go to state 32
    BOOL    shift, and go to state 11
    DOUBLE  shift, and go to state 12
    INT     shift, and go to state 13
    VOID    shift, and go to state 33

    type         go to state 34
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 23

   11 global: type . variables ';'
   19 function: type . IDENT '(' @3 arg_e ')' '{' statements '}'

    IDENT  shift, and go to state 35

    variables  go to state 36
    variable   go to state 37


state 24

   34 type: noarraytype .

    $default  reduce using rule 34 (type)


state 25

   37 noarraytype: arraytype .
   44 arr_type: arraytype . '[' ']'
   45         | arraytype . '[' ',' ']'
   46         | arraytype . '[' ',' ',' ']'

    '['  shift, and go to state 38

    $default  reduce using rule 37 (noarraytype)


state 26

   35 type: arr_type .

    $default  reduce using rule 35 (type)


state 27

    4 class: CLASS IDENT ':' IDENT '{' . member '}'

    $default  reduce using rule 5 (member)

    member  go to state 39


state 28

   12 constructor: IDENT '(' . arg_e ')' '{' statements '}'

    IDENT   shift, and go to state 40
    BOOL    shift, and go to state 11
    DOUBLE  shift, and go to state 12
    INT     shift, and go to state 13

    $default  reduce using rule 25 (arg_e)

    args         go to state 41
    arg          go to state 42
    arg_e        go to state 43
    type         go to state 44
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 29

   41 arr_type: IDENT '[' . ']'
   42         | IDENT '[' . ',' ']'
   43         | IDENT '[' . ',' ',' ']'

    ','  shift, and go to state 45
    ']'  shift, and go to state 46


state 30

   33 accessmodif: PRIVATE STATIC .

    $default  reduce using rule 33 (accessmodif)


state 31

   21 function: VOID IDENT . '(' @4 arg_e ')' '{' statements '}'

    '('  shift, and go to state 47


state 32

   13 constructor: accessmodif IDENT . '(' arg_e ')' '{' statements '}'
   36 noarraytype: IDENT .
   41 arr_type: IDENT . '[' ']'
   42         | IDENT . '[' ',' ']'
   43         | IDENT . '[' ',' ',' ']'

    '('  shift, and go to state 48
    '['  shift, and go to state 29

    $default  reduce using rule 36 (noarraytype)


state 33

   17 function: accessmodif VOID . IDENT '(' @2 arg_e ')' '{' statements '}'

    IDENT  shift, and go to state 49


state 34

   10 global: accessmodif type . variables ';'
   15 function: accessmodif type . IDENT '(' @1 arg_e ')' '{' statements '}'

    IDENT  shift, and go to state 50

    variables  go to state 51
    variable   go to state 37


state 35

   19 function: type IDENT . '(' @3 arg_e ')' '{' statements '}'
   29 variable: IDENT .
   30         | IDENT . '=' expression

    '='  shift, and go to state 52
    '('  shift, and go to state 53

    $default  reduce using rule 29 (variable)


state 36

   11 global: type variables . ';'
   28 variables: variables . ',' variable

    ';'  shift, and go to state 54
    ','  shift, and go to state 55


state 37

   27 variables: variable .

    $default  reduce using rule 27 (variables)


state 38

   44 arr_type: arraytype '[' . ']'
   45         | arraytype '[' . ',' ']'
   46         | arraytype '[' . ',' ',' ']'

    ','  shift, and go to state 56
    ']'  shift, and go to state 57


state 39

    4 class: CLASS IDENT ':' IDENT '{' member . '}'
    6 member: member . field

    IDENT    shift, and go to state 10
    BOOL     shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13
    PRIVATE  shift, and go to state 14
    STATIC   shift, and go to state 15
    VOID     shift, and go to state 16
    '}'      shift, and go to state 58

    field        go to state 18
    global       go to state 19
    constructor  go to state 20
    function     go to state 21
    accessmodif  go to state 22
    type         go to state 23
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 40

   36 noarraytype: IDENT .
   41 arr_type: IDENT . '[' ']'
   42         | IDENT . '[' ',' ']'
   43         | IDENT . '[' ',' ',' ']'

    '['  shift, and go to state 29

    $default  reduce using rule 36 (noarraytype)


state 41

   23 arg: args .

    $default  reduce using rule 23 (arg)


state 42

   24 arg: arg . ',' args
   26 arg_e: arg .

    ','  shift, and go to state 59

    $default  reduce using rule 26 (arg_e)


state 43

   12 constructor: IDENT '(' arg_e . ')' '{' statements '}'

    ')'  shift, and go to state 60


state 44

   22 args: type . IDENT

    IDENT  shift, and go to state 61


state 45

   42 arr_type: IDENT '[' ',' . ']'
   43         | IDENT '[' ',' . ',' ']'

    ','  shift, and go to state 62
    ']'  shift, and go to state 63


state 46

   41 arr_type: IDENT '[' ']' .

    $default  reduce using rule 41 (arr_type)


state 47

   21 function: VOID IDENT '(' . @4 arg_e ')' '{' statements '}'

    $default  reduce using rule 20 (@4)

    @4  go to state 64


state 48

   13 constructor: accessmodif IDENT '(' . arg_e ')' '{' statements '}'

    IDENT   shift, and go to state 40
    BOOL    shift, and go to state 11
    DOUBLE  shift, and go to state 12
    INT     shift, and go to state 13

    $default  reduce using rule 25 (arg_e)

    args         go to state 41
    arg          go to state 42
    arg_e        go to state 65
    type         go to state 44
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 49

   17 function: accessmodif VOID IDENT . '(' @2 arg_e ')' '{' statements '}'

    '('  shift, and go to state 66


state 50

   15 function: accessmodif type IDENT . '(' @1 arg_e ')' '{' statements '}'
   29 variable: IDENT .
   30         | IDENT . '=' expression

    '='  shift, and go to state 52
    '('  shift, and go to state 67

    $default  reduce using rule 29 (variable)


state 51

   10 global: accessmodif type variables . ';'
   28 variables: variables . ',' variable

    ';'  shift, and go to state 68
    ','  shift, and go to state 55


state 52

   30 variable: IDENT '=' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 83
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 53

   19 function: type IDENT '(' . @3 arg_e ')' '{' statements '}'

    $default  reduce using rule 18 (@3)

    @3  go to state 87


state 54

   11 global: type variables ';' .

    $default  reduce using rule 11 (global)


state 55

   28 variables: variables ',' . variable

    IDENT  shift, and go to state 88

    variable  go to state 89


state 56

   45 arr_type: arraytype '[' ',' . ']'
   46         | arraytype '[' ',' . ',' ']'

    ','  shift, and go to state 90
    ']'  shift, and go to state 91


state 57

   44 arr_type: arraytype '[' ']' .

    $default  reduce using rule 44 (arr_type)


state 58

    4 class: CLASS IDENT ':' IDENT '{' member '}' .

    $default  reduce using rule 4 (class)


state 59

   24 arg: arg ',' . args

    IDENT   shift, and go to state 40
    BOOL    shift, and go to state 11
    DOUBLE  shift, and go to state 12
    INT     shift, and go to state 13

    args         go to state 92
    type         go to state 44
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 60

   12 constructor: IDENT '(' arg_e ')' . '{' statements '}'

    '{'  shift, and go to state 93


state 61

   22 args: type IDENT .

    $default  reduce using rule 22 (args)


state 62

   43 arr_type: IDENT '[' ',' ',' . ']'

    ']'  shift, and go to state 94


state 63

   42 arr_type: IDENT '[' ',' ']' .

    $default  reduce using rule 42 (arr_type)


state 64

   21 function: VOID IDENT '(' @4 . arg_e ')' '{' statements '}'

    IDENT   shift, and go to state 40
    BOOL    shift, and go to state 11
    DOUBLE  shift, and go to state 12
    INT     shift, and go to state 13

    $default  reduce using rule 25 (arg_e)

    args         go to state 41
    arg          go to state 42
    arg_e        go to state 95
    type         go to state 44
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 65

   13 constructor: accessmodif IDENT '(' arg_e . ')' '{' statements '}'

    ')'  shift, and go to state 96


state 66

   17 function: accessmodif VOID IDENT '(' . @2 arg_e ')' '{' statements '}'

    $default  reduce using rule 16 (@2)

    @2  go to state 97


state 67

   15 function: accessmodif type IDENT '(' . @1 arg_e ')' '{' statements '}'

    $default  reduce using rule 14 (@1)

    @1  go to state 98


state 68

   10 global: accessmodif type variables ';' .

    $default  reduce using rule 10 (global)


state 69

  103 qualifiedname: IDENT .
  106 qualnameorarray: IDENT .
  107                | IDENT . arrayindex

    '['  shift, and go to state 99

    '('       reduce using rule 103 (qualifiedname)
    $default  reduce using rule 106 (qualnameorarray)

    arrayindex  go to state 100


state 70

   94 expr: INTEGER .

    $default  reduce using rule 94 (expr)


state 71

   95 expr: REAL .

    $default  reduce using rule 95 (expr)


state 72

   97 expr: FALSE .

    $default  reduce using rule 97 (expr)


state 73

   96 expr: TRUE .

    $default  reduce using rule 96 (expr)


state 74

   62 expr: NEW . IDENT '(' expr_list_e ')'
   63     | NEW . IDENT arrayindex

    IDENT  shift, and go to state 101


state 75

   98 expr: THIS .

    $default  reduce using rule 98 (expr)


state 76

   99 expr: NUL .

    $default  reduce using rule 99 (expr)


state 77

   55 expr: '+' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 102
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 78

   54 expr: '-' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 103
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 79

   53 expr: '!' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 104
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 80

   50 expr: DECREMENT . qualnameorarray

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expr             go to state 105
    qualifiedname    go to state 85
    qualnameorarray  go to state 106


state 81

   49 expr: INCREMENT . qualnameorarray

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expr             go to state 105
    qualifiedname    go to state 85
    qualnameorarray  go to state 107


state 82

   56 expr: '(' . expr ')'
   57     | '(' . IDENT ')'
   58     | '(' . qnora_without_id ')'
   92     | '(' . arraytype ')' expression
   93     | '(' . IDENT ')' expression

    IDENT      shift, and go to state 108
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOL       shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    arraytype         go to state 109
    expr              go to state 110
    qualifiedname     go to state 85
    qualnameorarray   go to state 111
    qnora_without_id  go to state 112


state 83

   30 variable: IDENT '=' expression .

    $default  reduce using rule 30 (variable)


state 84

   47 expression: expr .
   64 expr: expr . EQ expression
   66     | expr . NE expression
   68     | expr . '<' expression
   70     | expr . SE expression
   72     | expr . '>' expression
   74     | expr . LE expression
   76     | expr . '+' expression
   78     | expr . '-' expression
   80     | expr . '*' expression
   82     | expr . '/' expression
   84     | expr . '%' expression
   86     | expr . AND expression
   88     | expr . OR expression
   90     | expr . IS type
  104 qualifiedname: expr . '.' IDENT
  108 qualnameorarray: expr . '.' IDENT
  110                | expr . '.' IDENT arrayindex

    IS   shift, and go to state 113
    OR   shift, and go to state 114
    AND  shift, and go to state 115
    NE   shift, and go to state 116
    EQ   shift, and go to state 117
    '>'  shift, and go to state 118
    '<'  shift, and go to state 119
    SE   shift, and go to state 120
    LE   shift, and go to state 121
    '+'  shift, and go to state 122
    '-'  shift, and go to state 123
    '*'  shift, and go to state 124
    '/'  shift, and go to state 125
    '%'  shift, and go to state 126
    '.'  shift, and go to state 127

    $default  reduce using rule 47 (expression)


state 85

   60 expr: qualifiedname . '(' expr_list_e ')'
   61     | qualifiedname . '(' expr_list_e ')' arrayindex

    '('  shift, and go to state 128


state 86

   48 expression: qualnameorarray .
   51 expr: qualnameorarray . INCREMENT
   52     | qualnameorarray . DECREMENT
   59     | qualnameorarray . '=' expression
   65     | qualnameorarray . EQ expression
   67     | qualnameorarray . NE expression
   69     | qualnameorarray . '<' expression
   71     | qualnameorarray . SE expression
   73     | qualnameorarray . '>' expression
   75     | qualnameorarray . LE expression
   77     | qualnameorarray . '+' expression
   79     | qualnameorarray . '-' expression
   81     | qualnameorarray . '*' expression
   83     | qualnameorarray . '/' expression
   85     | qualnameorarray . '%' expression
   87     | qualnameorarray . AND expression
   89     | qualnameorarray . OR expression
   91     | qualnameorarray . IS type
  105 qualifiedname: qualnameorarray . '.' IDENT
  109 qualnameorarray: qualnameorarray . '.' IDENT
  111                | qualnameorarray . '.' IDENT arrayindex

    IS         shift, and go to state 129
    '='        shift, and go to state 130
    OR         shift, and go to state 131
    AND        shift, and go to state 132
    NE         shift, and go to state 133
    EQ         shift, and go to state 134
    '>'        shift, and go to state 135
    '<'        shift, and go to state 136
    SE         shift, and go to state 137
    LE         shift, and go to state 138
    '+'        shift, and go to state 139
    '-'        shift, and go to state 140
    '*'        shift, and go to state 141
    '/'        shift, and go to state 142
    '%'        shift, and go to state 143
    DECREMENT  shift, and go to state 144
    INCREMENT  shift, and go to state 145
    '.'        shift, and go to state 146

    $default  reduce using rule 48 (expression)


state 87

   19 function: type IDENT '(' @3 . arg_e ')' '{' statements '}'

    IDENT   shift, and go to state 40
    BOOL    shift, and go to state 11
    DOUBLE  shift, and go to state 12
    INT     shift, and go to state 13

    $default  reduce using rule 25 (arg_e)

    args         go to state 41
    arg          go to state 42
    arg_e        go to state 147
    type         go to state 44
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 88

   29 variable: IDENT .
   30         | IDENT . '=' expression

    '='  shift, and go to state 52

    $default  reduce using rule 29 (variable)


state 89

   28 variables: variables ',' variable .

    $default  reduce using rule 28 (variables)


state 90

   46 arr_type: arraytype '[' ',' ',' . ']'

    ']'  shift, and go to state 148


state 91

   45 arr_type: arraytype '[' ',' ']' .

    $default  reduce using rule 45 (arr_type)


state 92

   24 arg: arg ',' args .

    $default  reduce using rule 24 (arg)


state 93

   12 constructor: IDENT '(' arg_e ')' '{' . statements '}'

    $default  reduce using rule 130 (statements)

    statements  go to state 149


state 94

   43 arr_type: IDENT '[' ',' ',' ']' .

    $default  reduce using rule 43 (arr_type)


state 95

   21 function: VOID IDENT '(' @4 arg_e . ')' '{' statements '}'

    ')'  shift, and go to state 150


state 96

   13 constructor: accessmodif IDENT '(' arg_e ')' . '{' statements '}'

    '{'  shift, and go to state 151


state 97

   17 function: accessmodif VOID IDENT '(' @2 . arg_e ')' '{' statements '}'

    IDENT   shift, and go to state 40
    BOOL    shift, and go to state 11
    DOUBLE  shift, and go to state 12
    INT     shift, and go to state 13

    $default  reduce using rule 25 (arg_e)

    args         go to state 41
    arg          go to state 42
    arg_e        go to state 152
    type         go to state 44
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 98

   15 function: accessmodif type IDENT '(' @1 . arg_e ')' '{' statements '}'

    IDENT   shift, and go to state 40
    BOOL    shift, and go to state 11
    DOUBLE  shift, and go to state 12
    INT     shift, and go to state 13

    $default  reduce using rule 25 (arg_e)

    args         go to state 41
    arg          go to state 42
    arg_e        go to state 153
    type         go to state 44
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 99

  100 arrayindex: '[' . expression ']'
  101           | '[' . expression ',' expression ']'
  102           | '[' . expression ',' expression ',' expression ']'

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 154
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 100

  107 qualnameorarray: IDENT arrayindex .

    $default  reduce using rule 107 (qualnameorarray)


state 101

   62 expr: NEW IDENT . '(' expr_list_e ')'
   63     | NEW IDENT . arrayindex

    '('  shift, and go to state 155
    '['  shift, and go to state 99

    arrayindex  go to state 156


state 102

   55 expr: '+' expression .

    $default  reduce using rule 55 (expr)


state 103

   54 expr: '-' expression .

    $default  reduce using rule 54 (expr)


state 104

   53 expr: '!' expression .

    $default  reduce using rule 53 (expr)


state 105

   64 expr: expr . EQ expression
   66     | expr . NE expression
   68     | expr . '<' expression
   70     | expr . SE expression
   72     | expr . '>' expression
   74     | expr . LE expression
   76     | expr . '+' expression
   78     | expr . '-' expression
   80     | expr . '*' expression
   82     | expr . '/' expression
   84     | expr . '%' expression
   86     | expr . AND expression
   88     | expr . OR expression
   90     | expr . IS type
  104 qualifiedname: expr . '.' IDENT
  108 qualnameorarray: expr . '.' IDENT
  110                | expr . '.' IDENT arrayindex

    IS   shift, and go to state 113
    OR   shift, and go to state 114
    AND  shift, and go to state 115
    NE   shift, and go to state 116
    EQ   shift, and go to state 117
    '>'  shift, and go to state 118
    '<'  shift, and go to state 119
    SE   shift, and go to state 120
    LE   shift, and go to state 121
    '+'  shift, and go to state 122
    '-'  shift, and go to state 123
    '*'  shift, and go to state 124
    '/'  shift, and go to state 125
    '%'  shift, and go to state 126
    '.'  shift, and go to state 127


state 106

   50 expr: DECREMENT qualnameorarray .
   51     | qualnameorarray . INCREMENT
   52     | qualnameorarray . DECREMENT
   59     | qualnameorarray . '=' expression
   65     | qualnameorarray . EQ expression
   67     | qualnameorarray . NE expression
   69     | qualnameorarray . '<' expression
   71     | qualnameorarray . SE expression
   73     | qualnameorarray . '>' expression
   75     | qualnameorarray . LE expression
   77     | qualnameorarray . '+' expression
   79     | qualnameorarray . '-' expression
   81     | qualnameorarray . '*' expression
   83     | qualnameorarray . '/' expression
   85     | qualnameorarray . '%' expression
   87     | qualnameorarray . AND expression
   89     | qualnameorarray . OR expression
   91     | qualnameorarray . IS type
  105 qualifiedname: qualnameorarray . '.' IDENT
  109 qualnameorarray: qualnameorarray . '.' IDENT
  111                | qualnameorarray . '.' IDENT arrayindex

    '='        shift, and go to state 130
    DECREMENT  shift, and go to state 144
    INCREMENT  shift, and go to state 145
    '.'        shift, and go to state 146

    $default  reduce using rule 50 (expr)


state 107

   49 expr: INCREMENT qualnameorarray .
   51     | qualnameorarray . INCREMENT
   52     | qualnameorarray . DECREMENT
   59     | qualnameorarray . '=' expression
   65     | qualnameorarray . EQ expression
   67     | qualnameorarray . NE expression
   69     | qualnameorarray . '<' expression
   71     | qualnameorarray . SE expression
   73     | qualnameorarray . '>' expression
   75     | qualnameorarray . LE expression
   77     | qualnameorarray . '+' expression
   79     | qualnameorarray . '-' expression
   81     | qualnameorarray . '*' expression
   83     | qualnameorarray . '/' expression
   85     | qualnameorarray . '%' expression
   87     | qualnameorarray . AND expression
   89     | qualnameorarray . OR expression
   91     | qualnameorarray . IS type
  105 qualifiedname: qualnameorarray . '.' IDENT
  109 qualnameorarray: qualnameorarray . '.' IDENT
  111                | qualnameorarray . '.' IDENT arrayindex

    '='        shift, and go to state 130
    DECREMENT  shift, and go to state 144
    INCREMENT  shift, and go to state 145
    '.'        shift, and go to state 146

    $default  reduce using rule 49 (expr)


state 108

   57 expr: '(' IDENT . ')'
   93     | '(' IDENT . ')' expression
  103 qualifiedname: IDENT .
  106 qualnameorarray: IDENT .
  107                | IDENT . arrayindex
  112 qnora_without_id: IDENT . arrayindex

    ')'  shift, and go to state 157
    '['  shift, and go to state 99

    '('       reduce using rule 103 (qualifiedname)
    $default  reduce using rule 106 (qualnameorarray)

    arrayindex  go to state 158


state 109

   92 expr: '(' arraytype . ')' expression

    ')'  shift, and go to state 159


state 110

   56 expr: '(' expr . ')'
   64     | expr . EQ expression
   66     | expr . NE expression
   68     | expr . '<' expression
   70     | expr . SE expression
   72     | expr . '>' expression
   74     | expr . LE expression
   76     | expr . '+' expression
   78     | expr . '-' expression
   80     | expr . '*' expression
   82     | expr . '/' expression
   84     | expr . '%' expression
   86     | expr . AND expression
   88     | expr . OR expression
   90     | expr . IS type
  104 qualifiedname: expr . '.' IDENT
  108 qualnameorarray: expr . '.' IDENT
  110                | expr . '.' IDENT arrayindex
  113 qnora_without_id: expr . '.' IDENT
  115                 | expr . '.' IDENT arrayindex

    IS   shift, and go to state 113
    OR   shift, and go to state 114
    AND  shift, and go to state 115
    NE   shift, and go to state 116
    EQ   shift, and go to state 117
    '>'  shift, and go to state 118
    '<'  shift, and go to state 119
    SE   shift, and go to state 120
    LE   shift, and go to state 121
    '+'  shift, and go to state 122
    '-'  shift, and go to state 123
    '*'  shift, and go to state 124
    '/'  shift, and go to state 125
    '%'  shift, and go to state 126
    '.'  shift, and go to state 160
    ')'  shift, and go to state 161


state 111

   51 expr: qualnameorarray . INCREMENT
   52     | qualnameorarray . DECREMENT
   59     | qualnameorarray . '=' expression
   65     | qualnameorarray . EQ expression
   67     | qualnameorarray . NE expression
   69     | qualnameorarray . '<' expression
   71     | qualnameorarray . SE expression
   73     | qualnameorarray . '>' expression
   75     | qualnameorarray . LE expression
   77     | qualnameorarray . '+' expression
   79     | qualnameorarray . '-' expression
   81     | qualnameorarray . '*' expression
   83     | qualnameorarray . '/' expression
   85     | qualnameorarray . '%' expression
   87     | qualnameorarray . AND expression
   89     | qualnameorarray . OR expression
   91     | qualnameorarray . IS type
  105 qualifiedname: qualnameorarray . '.' IDENT
  109 qualnameorarray: qualnameorarray . '.' IDENT
  111                | qualnameorarray . '.' IDENT arrayindex
  114 qnora_without_id: qualnameorarray . '.' IDENT
  116                 | qualnameorarray . '.' IDENT arrayindex

    IS         shift, and go to state 129
    '='        shift, and go to state 130
    OR         shift, and go to state 131
    AND        shift, and go to state 132
    NE         shift, and go to state 133
    EQ         shift, and go to state 134
    '>'        shift, and go to state 135
    '<'        shift, and go to state 136
    SE         shift, and go to state 137
    LE         shift, and go to state 138
    '+'        shift, and go to state 139
    '-'        shift, and go to state 140
    '*'        shift, and go to state 141
    '/'        shift, and go to state 142
    '%'        shift, and go to state 143
    DECREMENT  shift, and go to state 144
    INCREMENT  shift, and go to state 145
    '.'        shift, and go to state 162


state 112

   58 expr: '(' qnora_without_id . ')'

    ')'  shift, and go to state 163


state 113

   90 expr: expr IS . type

    IDENT   shift, and go to state 40
    BOOL    shift, and go to state 11
    DOUBLE  shift, and go to state 12
    INT     shift, and go to state 13

    type         go to state 164
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 114

   88 expr: expr OR . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 165
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 115

   86 expr: expr AND . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 166
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 116

   66 expr: expr NE . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 167
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 117

   64 expr: expr EQ . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 168
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 118

   72 expr: expr '>' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 169
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 119

   68 expr: expr '<' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 170
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 120

   70 expr: expr SE . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 171
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 121

   74 expr: expr LE . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 172
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 122

   76 expr: expr '+' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 173
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 123

   78 expr: expr '-' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 174
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 124

   80 expr: expr '*' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 175
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 125

   82 expr: expr '/' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 176
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 126

   84 expr: expr '%' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 177
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 127

  104 qualifiedname: expr '.' . IDENT
  108 qualnameorarray: expr '.' . IDENT
  110                | expr '.' . IDENT arrayindex

    IDENT  shift, and go to state 178


state 128

   60 expr: qualifiedname '(' . expr_list_e ')'
   61     | qualifiedname '(' . expr_list_e ')' arrayindex

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    $default  reduce using rule 119 (expr_list_e)

    expression       go to state 179
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    expr_list        go to state 180
    expr_list_e      go to state 181


state 129

   91 expr: qualnameorarray IS . type

    IDENT   shift, and go to state 40
    BOOL    shift, and go to state 11
    DOUBLE  shift, and go to state 12
    INT     shift, and go to state 13

    type         go to state 182
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 130

   59 expr: qualnameorarray '=' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 183
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 131

   89 expr: qualnameorarray OR . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 184
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 132

   87 expr: qualnameorarray AND . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 185
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 133

   67 expr: qualnameorarray NE . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 186
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 134

   65 expr: qualnameorarray EQ . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 187
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 135

   73 expr: qualnameorarray '>' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 188
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 136

   69 expr: qualnameorarray '<' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 189
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 137

   71 expr: qualnameorarray SE . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 190
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 138

   75 expr: qualnameorarray LE . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 191
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 139

   77 expr: qualnameorarray '+' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 192
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 140

   79 expr: qualnameorarray '-' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 193
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 141

   81 expr: qualnameorarray '*' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 194
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 142

   83 expr: qualnameorarray '/' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 195
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 143

   85 expr: qualnameorarray '%' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 196
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 144

   52 expr: qualnameorarray DECREMENT .

    $default  reduce using rule 52 (expr)


state 145

   51 expr: qualnameorarray INCREMENT .

    $default  reduce using rule 51 (expr)


state 146

  105 qualifiedname: qualnameorarray '.' . IDENT
  109 qualnameorarray: qualnameorarray '.' . IDENT
  111                | qualnameorarray '.' . IDENT arrayindex

    IDENT  shift, and go to state 197


state 147

   19 function: type IDENT '(' @3 arg_e . ')' '{' statements '}'

    ')'  shift, and go to state 198


state 148

   46 arr_type: arraytype '[' ',' ',' ']' .

    $default  reduce using rule 46 (arr_type)


state 149

   12 constructor: IDENT '(' arg_e ')' '{' statements . '}'
  131 statements: statements . statement

    IDENT      shift, and go to state 199
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOL       shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 200
    WHILE      shift, and go to state 201
    FOR        shift, and go to state 202
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 203
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 204
    '}'        shift, and go to state 205

    type             go to state 206
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 207
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    statement        go to state 208


state 150

   21 function: VOID IDENT '(' @4 arg_e ')' . '{' statements '}'

    '{'  shift, and go to state 209


state 151

   13 constructor: accessmodif IDENT '(' arg_e ')' '{' . statements '}'

    $default  reduce using rule 130 (statements)

    statements  go to state 210


state 152

   17 function: accessmodif VOID IDENT '(' @2 arg_e . ')' '{' statements '}'

    ')'  shift, and go to state 211


state 153

   15 function: accessmodif type IDENT '(' @1 arg_e . ')' '{' statements '}'

    ')'  shift, and go to state 212


state 154

  100 arrayindex: '[' expression . ']'
  101           | '[' expression . ',' expression ']'
  102           | '[' expression . ',' expression ',' expression ']'

    ','  shift, and go to state 213
    ']'  shift, and go to state 214


state 155

   62 expr: NEW IDENT '(' . expr_list_e ')'

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    $default  reduce using rule 119 (expr_list_e)

    expression       go to state 179
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    expr_list        go to state 180
    expr_list_e      go to state 215


state 156

   63 expr: NEW IDENT arrayindex .

    $default  reduce using rule 63 (expr)


state 157

   57 expr: '(' IDENT ')' .
   93     | '(' IDENT ')' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    $default  reduce using rule 57 (expr)

    expression       go to state 216
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 158

  107 qualnameorarray: IDENT arrayindex .
  112 qnora_without_id: IDENT arrayindex .

    ')'       reduce using rule 112 (qnora_without_id)
    $default  reduce using rule 107 (qualnameorarray)


state 159

   92 expr: '(' arraytype ')' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 217
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 160

  104 qualifiedname: expr '.' . IDENT
  108 qualnameorarray: expr '.' . IDENT
  110                | expr '.' . IDENT arrayindex
  113 qnora_without_id: expr '.' . IDENT
  115                 | expr '.' . IDENT arrayindex

    IDENT  shift, and go to state 218


state 161

   56 expr: '(' expr ')' .

    $default  reduce using rule 56 (expr)


state 162

  105 qualifiedname: qualnameorarray '.' . IDENT
  109 qualnameorarray: qualnameorarray '.' . IDENT
  111                | qualnameorarray '.' . IDENT arrayindex
  114 qnora_without_id: qualnameorarray '.' . IDENT
  116                 | qualnameorarray '.' . IDENT arrayindex

    IDENT  shift, and go to state 219


state 163

   58 expr: '(' qnora_without_id ')' .

    $default  reduce using rule 58 (expr)


state 164

   90 expr: expr IS type .

    $default  reduce using rule 90 (expr)


state 165

   88 expr: expr OR expression .

    $default  reduce using rule 88 (expr)


state 166

   86 expr: expr AND expression .

    $default  reduce using rule 86 (expr)


state 167

   66 expr: expr NE expression .

    $default  reduce using rule 66 (expr)


state 168

   64 expr: expr EQ expression .

    $default  reduce using rule 64 (expr)


state 169

   72 expr: expr '>' expression .

    $default  reduce using rule 72 (expr)


state 170

   68 expr: expr '<' expression .

    $default  reduce using rule 68 (expr)


state 171

   70 expr: expr SE expression .

    $default  reduce using rule 70 (expr)


state 172

   74 expr: expr LE expression .

    $default  reduce using rule 74 (expr)


state 173

   76 expr: expr '+' expression .

    $default  reduce using rule 76 (expr)


state 174

   78 expr: expr '-' expression .

    $default  reduce using rule 78 (expr)


state 175

   80 expr: expr '*' expression .

    $default  reduce using rule 80 (expr)


state 176

   82 expr: expr '/' expression .

    $default  reduce using rule 82 (expr)


state 177

   84 expr: expr '%' expression .

    $default  reduce using rule 84 (expr)


state 178

  104 qualifiedname: expr '.' IDENT .
  108 qualnameorarray: expr '.' IDENT .
  110                | expr '.' IDENT . arrayindex

    '['  shift, and go to state 99

    '('       reduce using rule 104 (qualifiedname)
    $default  reduce using rule 108 (qualnameorarray)

    arrayindex  go to state 220


state 179

  117 expr_list: expression .

    $default  reduce using rule 117 (expr_list)


state 180

  118 expr_list: expr_list . ',' expression
  120 expr_list_e: expr_list .

    ','  shift, and go to state 221

    $default  reduce using rule 120 (expr_list_e)


state 181

   60 expr: qualifiedname '(' expr_list_e . ')'
   61     | qualifiedname '(' expr_list_e . ')' arrayindex

    ')'  shift, and go to state 222


state 182

   91 expr: qualnameorarray IS type .

    $default  reduce using rule 91 (expr)


state 183

   59 expr: qualnameorarray '=' expression .

    $default  reduce using rule 59 (expr)


state 184

   89 expr: qualnameorarray OR expression .

    $default  reduce using rule 89 (expr)


state 185

   87 expr: qualnameorarray AND expression .

    $default  reduce using rule 87 (expr)


state 186

   67 expr: qualnameorarray NE expression .

    $default  reduce using rule 67 (expr)


state 187

   65 expr: qualnameorarray EQ expression .

    $default  reduce using rule 65 (expr)


state 188

   73 expr: qualnameorarray '>' expression .

    $default  reduce using rule 73 (expr)


state 189

   69 expr: qualnameorarray '<' expression .

    $default  reduce using rule 69 (expr)


state 190

   71 expr: qualnameorarray SE expression .

    $default  reduce using rule 71 (expr)


state 191

   75 expr: qualnameorarray LE expression .

    $default  reduce using rule 75 (expr)


state 192

   77 expr: qualnameorarray '+' expression .

    $default  reduce using rule 77 (expr)


state 193

   79 expr: qualnameorarray '-' expression .

    $default  reduce using rule 79 (expr)


state 194

   81 expr: qualnameorarray '*' expression .

    $default  reduce using rule 81 (expr)


state 195

   83 expr: qualnameorarray '/' expression .

    $default  reduce using rule 83 (expr)


state 196

   85 expr: qualnameorarray '%' expression .

    $default  reduce using rule 85 (expr)


state 197

  105 qualifiedname: qualnameorarray '.' IDENT .
  109 qualnameorarray: qualnameorarray '.' IDENT .
  111                | qualnameorarray '.' IDENT . arrayindex

    '['  shift, and go to state 99

    '('       reduce using rule 105 (qualifiedname)
    $default  reduce using rule 109 (qualnameorarray)

    arrayindex  go to state 223


state 198

   19 function: type IDENT '(' @3 arg_e ')' . '{' statements '}'

    '{'  shift, and go to state 224


state 199

   36 noarraytype: IDENT .
   41 arr_type: IDENT . '[' ']'
   42         | IDENT . '[' ',' ']'
   43         | IDENT . '[' ',' ',' ']'
  103 qualifiedname: IDENT .
  106 qualnameorarray: IDENT .
  107                | IDENT . arrayindex

    '['  shift, and go to state 225

    IDENT     reduce using rule 36 (noarraytype)
    '('       reduce using rule 103 (qualifiedname)
    $default  reduce using rule 106 (qualnameorarray)

    arrayindex  go to state 100


state 200

  121 statement: IF . '(' expression ')' statement
  122          | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 226


state 201

  123 statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 227


state 202

  124 statement: FOR . '(' vars_decl_e ';' expr_e ';' expr_e ')' statement

    '('  shift, and go to state 228


state 203

  129 statement: RETURN . expr_e ';'

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    $default  reduce using rule 134 (expr_e)

    expression       go to state 229
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    expr_e           go to state 230


state 204

  128 statement: '{' . @5 statements '}'

    $default  reduce using rule 127 (@5)

    @5  go to state 231


state 205

   12 constructor: IDENT '(' arg_e ')' '{' statements '}' .

    $default  reduce using rule 12 (constructor)


state 206

  126 statement: type . variables ';'

    IDENT  shift, and go to state 88

    variables  go to state 232
    variable   go to state 37


state 207

  125 statement: expression . ';'

    ';'  shift, and go to state 233


state 208

  131 statements: statements statement .

    $default  reduce using rule 131 (statements)


state 209

   21 function: VOID IDENT '(' @4 arg_e ')' '{' . statements '}'

    $default  reduce using rule 130 (statements)

    statements  go to state 234


state 210

   13 constructor: accessmodif IDENT '(' arg_e ')' '{' statements . '}'
  131 statements: statements . statement

    IDENT      shift, and go to state 199
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOL       shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 200
    WHILE      shift, and go to state 201
    FOR        shift, and go to state 202
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 203
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 204
    '}'        shift, and go to state 235

    type             go to state 206
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 207
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    statement        go to state 208


state 211

   17 function: accessmodif VOID IDENT '(' @2 arg_e ')' . '{' statements '}'

    '{'  shift, and go to state 236


state 212

   15 function: accessmodif type IDENT '(' @1 arg_e ')' . '{' statements '}'

    '{'  shift, and go to state 237


state 213

  101 arrayindex: '[' expression ',' . expression ']'
  102           | '[' expression ',' . expression ',' expression ']'

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 238
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 214

  100 arrayindex: '[' expression ']' .

    $default  reduce using rule 100 (arrayindex)


state 215

   62 expr: NEW IDENT '(' expr_list_e . ')'

    ')'  shift, and go to state 239


state 216

   93 expr: '(' IDENT ')' expression .

    $default  reduce using rule 93 (expr)


state 217

   92 expr: '(' arraytype ')' expression .

    $default  reduce using rule 92 (expr)


state 218

  104 qualifiedname: expr '.' IDENT .
  108 qualnameorarray: expr '.' IDENT .
  110                | expr '.' IDENT . arrayindex
  113 qnora_without_id: expr '.' IDENT .
  115                 | expr '.' IDENT . arrayindex

    '['  shift, and go to state 99

    '('       reduce using rule 104 (qualifiedname)
    ')'       reduce using rule 113 (qnora_without_id)
    $default  reduce using rule 108 (qualnameorarray)

    arrayindex  go to state 240


state 219

  105 qualifiedname: qualnameorarray '.' IDENT .
  109 qualnameorarray: qualnameorarray '.' IDENT .
  111                | qualnameorarray '.' IDENT . arrayindex
  114 qnora_without_id: qualnameorarray '.' IDENT .
  116                 | qualnameorarray '.' IDENT . arrayindex

    '['  shift, and go to state 99

    '('       reduce using rule 105 (qualifiedname)
    ')'       reduce using rule 114 (qnora_without_id)
    $default  reduce using rule 109 (qualnameorarray)

    arrayindex  go to state 241


state 220

  110 qualnameorarray: expr '.' IDENT arrayindex .

    $default  reduce using rule 110 (qualnameorarray)


state 221

  118 expr_list: expr_list ',' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 242
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 222

   60 expr: qualifiedname '(' expr_list_e ')' .
   61     | qualifiedname '(' expr_list_e ')' . arrayindex

    '['  shift, and go to state 99

    $default  reduce using rule 60 (expr)

    arrayindex  go to state 243


state 223

  111 qualnameorarray: qualnameorarray '.' IDENT arrayindex .

    $default  reduce using rule 111 (qualnameorarray)


state 224

   19 function: type IDENT '(' @3 arg_e ')' '{' . statements '}'

    $default  reduce using rule 130 (statements)

    statements  go to state 244


state 225

   41 arr_type: IDENT '[' . ']'
   42         | IDENT '[' . ',' ']'
   43         | IDENT '[' . ',' ',' ']'
  100 arrayindex: '[' . expression ']'
  101           | '[' . expression ',' expression ']'
  102           | '[' . expression ',' expression ',' expression ']'

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    ','        shift, and go to state 45
    ']'        shift, and go to state 46

    expression       go to state 154
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 226

  121 statement: IF '(' . expression ')' statement
  122          | IF '(' . expression ')' statement ELSE statement

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 245
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 227

  123 statement: WHILE '(' . expression ')' statement

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 246
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 228

  124 statement: FOR '(' . vars_decl_e ';' expr_e ';' expr_e ')' statement

    IDENT   shift, and go to state 40
    BOOL    shift, and go to state 11
    DOUBLE  shift, and go to state 12
    INT     shift, and go to state 13

    $default  reduce using rule 132 (vars_decl_e)

    type         go to state 247
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26
    vars_decl_e  go to state 248


state 229

  135 expr_e: expression .

    $default  reduce using rule 135 (expr_e)


state 230

  129 statement: RETURN expr_e . ';'

    ';'  shift, and go to state 249


state 231

  128 statement: '{' @5 . statements '}'

    $default  reduce using rule 130 (statements)

    statements  go to state 250


state 232

   28 variables: variables . ',' variable
  126 statement: type variables . ';'

    ';'  shift, and go to state 251
    ','  shift, and go to state 55


state 233

  125 statement: expression ';' .

    $default  reduce using rule 125 (statement)


state 234

   21 function: VOID IDENT '(' @4 arg_e ')' '{' statements . '}'
  131 statements: statements . statement

    IDENT      shift, and go to state 199
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOL       shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 200
    WHILE      shift, and go to state 201
    FOR        shift, and go to state 202
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 203
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 204
    '}'        shift, and go to state 252

    type             go to state 206
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 207
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    statement        go to state 208


state 235

   13 constructor: accessmodif IDENT '(' arg_e ')' '{' statements '}' .

    $default  reduce using rule 13 (constructor)


state 236

   17 function: accessmodif VOID IDENT '(' @2 arg_e ')' '{' . statements '}'

    $default  reduce using rule 130 (statements)

    statements  go to state 253


state 237

   15 function: accessmodif type IDENT '(' @1 arg_e ')' '{' . statements '}'

    $default  reduce using rule 130 (statements)

    statements  go to state 254


state 238

  101 arrayindex: '[' expression ',' expression . ']'
  102           | '[' expression ',' expression . ',' expression ']'

    ','  shift, and go to state 255
    ']'  shift, and go to state 256


state 239

   62 expr: NEW IDENT '(' expr_list_e ')' .

    $default  reduce using rule 62 (expr)


state 240

  110 qualnameorarray: expr '.' IDENT arrayindex .
  115 qnora_without_id: expr '.' IDENT arrayindex .

    ')'       reduce using rule 115 (qnora_without_id)
    $default  reduce using rule 110 (qualnameorarray)


state 241

  111 qualnameorarray: qualnameorarray '.' IDENT arrayindex .
  116 qnora_without_id: qualnameorarray '.' IDENT arrayindex .

    ')'       reduce using rule 116 (qnora_without_id)
    $default  reduce using rule 111 (qualnameorarray)


state 242

  118 expr_list: expr_list ',' expression .

    $default  reduce using rule 118 (expr_list)


state 243

   61 expr: qualifiedname '(' expr_list_e ')' arrayindex .

    $default  reduce using rule 61 (expr)


state 244

   19 function: type IDENT '(' @3 arg_e ')' '{' statements . '}'
  131 statements: statements . statement

    IDENT      shift, and go to state 199
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOL       shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 200
    WHILE      shift, and go to state 201
    FOR        shift, and go to state 202
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 203
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 204
    '}'        shift, and go to state 257

    type             go to state 206
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 207
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    statement        go to state 208


state 245

  121 statement: IF '(' expression . ')' statement
  122          | IF '(' expression . ')' statement ELSE statement

    ')'  shift, and go to state 258


state 246

  123 statement: WHILE '(' expression . ')' statement

    ')'  shift, and go to state 259


state 247

  133 vars_decl_e: type . variables

    IDENT  shift, and go to state 88

    variables  go to state 260
    variable   go to state 37


state 248

  124 statement: FOR '(' vars_decl_e . ';' expr_e ';' expr_e ')' statement

    ';'  shift, and go to state 261


state 249

  129 statement: RETURN expr_e ';' .

    $default  reduce using rule 129 (statement)


state 250

  128 statement: '{' @5 statements . '}'
  131 statements: statements . statement

    IDENT      shift, and go to state 199
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOL       shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 200
    WHILE      shift, and go to state 201
    FOR        shift, and go to state 202
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 203
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 204
    '}'        shift, and go to state 262

    type             go to state 206
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 207
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    statement        go to state 208


state 251

  126 statement: type variables ';' .

    $default  reduce using rule 126 (statement)


state 252

   21 function: VOID IDENT '(' @4 arg_e ')' '{' statements '}' .

    $default  reduce using rule 21 (function)


state 253

   17 function: accessmodif VOID IDENT '(' @2 arg_e ')' '{' statements . '}'
  131 statements: statements . statement

    IDENT      shift, and go to state 199
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOL       shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 200
    WHILE      shift, and go to state 201
    FOR        shift, and go to state 202
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 203
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 204
    '}'        shift, and go to state 263

    type             go to state 206
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 207
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    statement        go to state 208


state 254

   15 function: accessmodif type IDENT '(' @1 arg_e ')' '{' statements . '}'
  131 statements: statements . statement

    IDENT      shift, and go to state 199
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOL       shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 200
    WHILE      shift, and go to state 201
    FOR        shift, and go to state 202
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 203
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 204
    '}'        shift, and go to state 264

    type             go to state 206
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 207
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    statement        go to state 208


state 255

  102 arrayindex: '[' expression ',' expression ',' . expression ']'

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 265
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 256

  101 arrayindex: '[' expression ',' expression ']' .

    $default  reduce using rule 101 (arrayindex)


state 257

   19 function: type IDENT '(' @3 arg_e ')' '{' statements '}' .

    $default  reduce using rule 19 (function)


state 258

  121 statement: IF '(' expression ')' . statement
  122          | IF '(' expression ')' . statement ELSE statement

    IDENT      shift, and go to state 199
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOL       shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 200
    WHILE      shift, and go to state 201
    FOR        shift, and go to state 202
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 203
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 204

    type             go to state 206
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 207
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    statement        go to state 266


state 259

  123 statement: WHILE '(' expression ')' . statement

    IDENT      shift, and go to state 199
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOL       shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 200
    WHILE      shift, and go to state 201
    FOR        shift, and go to state 202
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 203
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 204

    type             go to state 206
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 207
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    statement        go to state 267


state 260

   28 variables: variables . ',' variable
  133 vars_decl_e: type variables .

    ','  shift, and go to state 55

    $default  reduce using rule 133 (vars_decl_e)


state 261

  124 statement: FOR '(' vars_decl_e ';' . expr_e ';' expr_e ')' statement

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    $default  reduce using rule 134 (expr_e)

    expression       go to state 229
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    expr_e           go to state 268


state 262

  128 statement: '{' @5 statements '}' .

    $default  reduce using rule 128 (statement)


state 263

   17 function: accessmodif VOID IDENT '(' @2 arg_e ')' '{' statements '}' .

    $default  reduce using rule 17 (function)


state 264

   15 function: accessmodif type IDENT '(' @1 arg_e ')' '{' statements '}' .

    $default  reduce using rule 15 (function)


state 265

  102 arrayindex: '[' expression ',' expression ',' expression . ']'

    ']'  shift, and go to state 269


state 266

  121 statement: IF '(' expression ')' statement .
  122          | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 270

    $default  reduce using rule 121 (statement)


state 267

  123 statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 123 (statement)


state 268

  124 statement: FOR '(' vars_decl_e ';' expr_e . ';' expr_e ')' statement

    ';'  shift, and go to state 271


state 269

  102 arrayindex: '[' expression ',' expression ',' expression ']' .

    $default  reduce using rule 102 (arrayindex)


state 270

  122 statement: IF '(' expression ')' statement ELSE . statement

    IDENT      shift, and go to state 199
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOL       shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 200
    WHILE      shift, and go to state 201
    FOR        shift, and go to state 202
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 203
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 204

    type             go to state 206
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 207
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    statement        go to state 272


state 271

  124 statement: FOR '(' vars_decl_e ';' expr_e ';' . expr_e ')' statement

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    $default  reduce using rule 134 (expr_e)

    expression       go to state 229
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    expr_e           go to state 273


state 272

  122 statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 122 (statement)


state 273

  124 statement: FOR '(' vars_decl_e ';' expr_e ';' expr_e . ')' statement

    ')'  shift, and go to state 274


state 274

  124 statement: FOR '(' vars_decl_e ';' expr_e ';' expr_e ')' . statement

    IDENT      shift, and go to state 199
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOL       shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 200
    WHILE      shift, and go to state 201
    FOR        shift, and go to state 202
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 203
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 204

    type             go to state 206
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 207
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    statement        go to state 275


state 275

  124 statement: FOR '(' vars_decl_e ';' expr_e ';' expr_e ')' statement .

    $default  reduce using rule 124 (statement)
