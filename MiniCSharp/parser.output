Grammar

    0 $accept: root $end

    1 root: /* empty */
    2     | root class

    3 class: CLASS IDENT '{' members '}'
    4      | CLASS IDENT ':' IDENT '{' members '}'

    5 members: /* empty */
    6        | members member

    7 member: global
    8       | constructor
    9       | function

   10 global: accessmodif type variables ';'

   11 constructor: accessmodif IDENT '(' args_e ')' '{' statements '}'

   12 @1: /* empty */

   13 function: accessmodif type IDENT '(' @1 args_e ')' '{' statements '}'

   14 @2: /* empty */

   15 function: accessmodif VOID IDENT '(' @2 args_e ')' '{' statements '}'

   16 arg: type IDENT

   17 args: arg
   18     | args ',' arg

   19 args_e: /* empty */
   20       | args

   21 variables: variable
   22          | variables ',' variable

   23 variable: IDENT
   24         | IDENT '=' expression

   25 accessmodif: /* empty */
   26            | PRIVATE
   27            | STATIC
   28            | PRIVATE STATIC

   29 type: noarraytype
   30     | arraytype

   31 noarraytype: IDENT
   32            | basictype

   33 basictype: OBJECT
   34          | BOOL
   35          | INT
   36          | DOUBLE

   37 arraytype: IDENT '[' ']'
   38          | IDENT '[' ',' ']'
   39          | IDENT '[' ',' ',' ']'
   40          | basictype '[' ']'
   41          | basictype '[' ',' ']'
   42          | basictype '[' ',' ',' ']'

   43 expression: expr
   44           | qualnameorarray

   45 expr: INCREMENT qualnameorarray
   46     | DECREMENT qualnameorarray
   47     | qualnameorarray INCREMENT
   48     | qualnameorarray DECREMENT
   49     | '!' expression
   50     | '-' expression
   51     | '+' expression
   52     | '(' expr ')'
   53     | '(' IDENT ')'
   54     | '(' qnora_without_id ')'
   55     | qualnameorarray '=' expression
   56     | qualifiedname '(' expr_list_e ')'
   57     | qualifiedname '(' expr_list_e ')' arrayindex
   58     | NEW IDENT '(' expr_list_e ')'
   59     | NEW IDENT arrayindex
   60     | expr EQ expression
   61     | qualnameorarray EQ expression
   62     | expr NE expression
   63     | qualnameorarray NE expression
   64     | expr '<' expression
   65     | qualnameorarray '<' expression
   66     | expr SE expression
   67     | qualnameorarray SE expression
   68     | expr '>' expression
   69     | qualnameorarray '>' expression
   70     | expr LE expression
   71     | qualnameorarray LE expression
   72     | expr '+' expression
   73     | qualnameorarray '+' expression
   74     | expr '-' expression
   75     | qualnameorarray '-' expression
   76     | expr '*' expression
   77     | qualnameorarray '*' expression
   78     | expr '/' expression
   79     | qualnameorarray '/' expression
   80     | expr '%' expression
   81     | qualnameorarray '%' expression
   82     | expr AND expression
   83     | qualnameorarray AND expression
   84     | expr OR expression
   85     | qualnameorarray OR expression
   86     | expr IS type
   87     | qualnameorarray IS type
   88     | '(' basictype ')' expression
   89     | '(' IDENT ')' expression
   90     | INTEGER
   91     | REAL
   92     | TRUE
   93     | FALSE
   94     | THIS
   95     | NUL

   96 arrayindex: '[' expression ']'
   97           | '[' expression ',' expression ']'
   98           | '[' expression ',' expression ',' expression ']'

   99 qualifiedname: IDENT
  100              | expr '.' IDENT
  101              | qualnameorarray '.' IDENT

  102 qualnameorarray: IDENT
  103                | IDENT arrayindex
  104                | expr '.' IDENT
  105                | qualnameorarray '.' IDENT
  106                | expr '.' IDENT arrayindex
  107                | qualnameorarray '.' IDENT arrayindex

  108 qnora_without_id: IDENT arrayindex
  109                 | expr '.' IDENT
  110                 | qualnameorarray '.' IDENT
  111                 | expr '.' IDENT arrayindex
  112                 | qualnameorarray '.' IDENT arrayindex

  113 expr_list: expression
  114          | expr_list ',' expression

  115 expr_list_e: /* empty */
  116            | expr_list

  117 statement: IF '(' expression ')' statement
  118          | IF '(' expression ')' statement ELSE statement
  119          | WHILE '(' expression ')' statement
  120          | FOR '(' variables_e ';' expr_e ';' expr_e ')' statement
  121          | expression ';'
  122          | type variables ';'

  123 @3: /* empty */

  124 statement: '{' @3 statements '}'
  125          | RETURN expr_e ';'

  126 statements: /* empty */
  127           | statements statement

  128 variables_e: /* empty */
  129            | type variables

  130 expr_e: /* empty */
  131       | expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 49
'%' (37) 80 81
'(' (40) 11 13 15 52 53 54 56 57 58 88 89 117 118 119 120
')' (41) 11 13 15 52 53 54 56 57 58 88 89 117 118 119 120
'*' (42) 76 77
'+' (43) 51 72 73
',' (44) 18 22 38 39 41 42 97 98 114
'-' (45) 50 74 75
'.' (46) 100 101 104 105 106 107 109 110 111 112
'/' (47) 78 79
':' (58) 4
';' (59) 10 120 121 122 125
'<' (60) 64 65
'=' (61) 24 55
'>' (62) 68 69
'[' (91) 37 38 39 40 41 42 96 97 98
']' (93) 37 38 39 40 41 42 96 97 98
'{' (123) 3 4 11 13 15 124
'}' (125) 3 4 11 13 15 124
error (256)
IDENT (258) 3 4 11 13 15 16 23 24 31 37 38 39 53 58 59 89 99 100 101
    102 103 104 105 106 107 108 109 110 111 112
INTEGER (259) 90
REAL (260) 91
CLASS (261) 3 4
BOOL (262) 34
DOUBLE (263) 36
INT (264) 35
IS (265) 86 87
OBJECT (266) 33
IF (267) 117 118
ELSE (268) 118
WHILE (269) 119
FOR (270) 120
FALSE (271) 93
TRUE (272) 92
NEW (273) 58 59
THIS (274) 94
NUL (275) 95
PRIVATE (276) 26 28
STATIC (277) 27 28
VOID (278) 15
RETURN (279) 125
EXPRESSION (280)
IF_PREC (281)
OR (282) 84 85
AND (283) 82 83
NE (284) 62 63
EQ (285) 60 61
SE (286) 66 67
LE (287) 70 71
CAST (288)
UNARY_OP (289)
DECREMENT (290) 46 48
INCREMENT (291) 45 47


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
root (57)
    on left: 1 2, on right: 0 2
class (58)
    on left: 3 4, on right: 2
members (59)
    on left: 5 6, on right: 3 4 6
member (60)
    on left: 7 8 9, on right: 6
global (61)
    on left: 10, on right: 7
constructor (62)
    on left: 11, on right: 8
function (63)
    on left: 13 15, on right: 9
@1 (64)
    on left: 12, on right: 13
@2 (65)
    on left: 14, on right: 15
arg (66)
    on left: 16, on right: 17 18
args (67)
    on left: 17 18, on right: 18 20
args_e (68)
    on left: 19 20, on right: 11 13 15
variables (69)
    on left: 21 22, on right: 10 22 122 129
variable (70)
    on left: 23 24, on right: 21 22
accessmodif (71)
    on left: 25 26 27 28, on right: 10 11 13 15
type (72)
    on left: 29 30, on right: 10 13 16 86 87 122 129
noarraytype (73)
    on left: 31 32, on right: 29
basictype (74)
    on left: 33 34 35 36, on right: 32 40 41 42 88
arraytype (75)
    on left: 37 38 39 40 41 42, on right: 30
expression (76)
    on left: 43 44, on right: 24 49 50 51 55 60 61 62 63 64 65 66 67
    68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 88 89 96
    97 98 113 114 117 118 119 121 131
expr (77)
    on left: 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62
    63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83
    84 85 86 87 88 89 90 91 92 93 94 95, on right: 43 52 60 62 64 66
    68 70 72 74 76 78 80 82 84 86 100 104 106 109 111
arrayindex (78)
    on left: 96 97 98, on right: 57 59 103 106 107 108 111 112
qualifiedname (79)
    on left: 99 100 101, on right: 56 57
qualnameorarray (80)
    on left: 102 103 104 105 106 107, on right: 44 45 46 47 48 55 61
    63 65 67 69 71 73 75 77 79 81 83 85 87 101 105 107 110 112
qnora_without_id (81)
    on left: 108 109 110 111 112, on right: 54
expr_list (82)
    on left: 113 114, on right: 114 116
expr_list_e (83)
    on left: 115 116, on right: 56 57 58
statement (84)
    on left: 117 118 119 120 121 122 124 125, on right: 117 118 119
    120 127
@3 (85)
    on left: 123, on right: 124
statements (86)
    on left: 126 127, on right: 11 13 15 124 127
variables_e (87)
    on left: 128 129, on right: 120
expr_e (88)
    on left: 130 131, on right: 120 125


state 0

    0 $accept: . root $end

    $default  reduce using rule 1 (root)

    root  go to state 1


state 1

    0 $accept: root . $end
    2 root: root . class

    $end   shift, and go to state 2
    CLASS  shift, and go to state 3

    class  go to state 4


state 2

    0 $accept: root $end .

    $default  accept


state 3

    3 class: CLASS . IDENT '{' members '}'
    4      | CLASS . IDENT ':' IDENT '{' members '}'

    IDENT  shift, and go to state 5


state 4

    2 root: root class .

    $default  reduce using rule 2 (root)


state 5

    3 class: CLASS IDENT . '{' members '}'
    4      | CLASS IDENT . ':' IDENT '{' members '}'

    '{'  shift, and go to state 6
    ':'  shift, and go to state 7


state 6

    3 class: CLASS IDENT '{' . members '}'

    $default  reduce using rule 5 (members)

    members  go to state 8


state 7

    4 class: CLASS IDENT ':' . IDENT '{' members '}'

    IDENT  shift, and go to state 9


state 8

    3 class: CLASS IDENT '{' members . '}'
    6 members: members . member

    PRIVATE  shift, and go to state 10
    STATIC   shift, and go to state 11
    '}'      shift, and go to state 12

    $default  reduce using rule 25 (accessmodif)

    member       go to state 13
    global       go to state 14
    constructor  go to state 15
    function     go to state 16
    accessmodif  go to state 17


state 9

    4 class: CLASS IDENT ':' IDENT . '{' members '}'

    '{'  shift, and go to state 18


state 10

   26 accessmodif: PRIVATE .
   28            | PRIVATE . STATIC

    STATIC  shift, and go to state 19

    $default  reduce using rule 26 (accessmodif)


state 11

   27 accessmodif: STATIC .

    $default  reduce using rule 27 (accessmodif)


state 12

    3 class: CLASS IDENT '{' members '}' .

    $default  reduce using rule 3 (class)


state 13

    6 members: members member .

    $default  reduce using rule 6 (members)


state 14

    7 member: global .

    $default  reduce using rule 7 (member)


state 15

    8 member: constructor .

    $default  reduce using rule 8 (member)


state 16

    9 member: function .

    $default  reduce using rule 9 (member)


state 17

   10 global: accessmodif . type variables ';'
   11 constructor: accessmodif . IDENT '(' args_e ')' '{' statements '}'
   13 function: accessmodif . type IDENT '(' @1 args_e ')' '{' statements '}'
   15         | accessmodif . VOID IDENT '(' @2 args_e ')' '{' statements '}'

    IDENT   shift, and go to state 20
    BOOL    shift, and go to state 21
    DOUBLE  shift, and go to state 22
    INT     shift, and go to state 23
    OBJECT  shift, and go to state 24
    VOID    shift, and go to state 25

    type         go to state 26
    noarraytype  go to state 27
    basictype    go to state 28
    arraytype    go to state 29


state 18

    4 class: CLASS IDENT ':' IDENT '{' . members '}'

    $default  reduce using rule 5 (members)

    members  go to state 30


state 19

   28 accessmodif: PRIVATE STATIC .

    $default  reduce using rule 28 (accessmodif)


state 20

   11 constructor: accessmodif IDENT . '(' args_e ')' '{' statements '}'
   31 noarraytype: IDENT .
   37 arraytype: IDENT . '[' ']'
   38          | IDENT . '[' ',' ']'
   39          | IDENT . '[' ',' ',' ']'

    '('  shift, and go to state 31
    '['  shift, and go to state 32

    $default  reduce using rule 31 (noarraytype)


state 21

   34 basictype: BOOL .

    $default  reduce using rule 34 (basictype)


state 22

   36 basictype: DOUBLE .

    $default  reduce using rule 36 (basictype)


state 23

   35 basictype: INT .

    $default  reduce using rule 35 (basictype)


state 24

   33 basictype: OBJECT .

    $default  reduce using rule 33 (basictype)


state 25

   15 function: accessmodif VOID . IDENT '(' @2 args_e ')' '{' statements '}'

    IDENT  shift, and go to state 33


state 26

   10 global: accessmodif type . variables ';'
   13 function: accessmodif type . IDENT '(' @1 args_e ')' '{' statements '}'

    IDENT  shift, and go to state 34

    variables  go to state 35
    variable   go to state 36


state 27

   29 type: noarraytype .

    $default  reduce using rule 29 (type)


state 28

   32 noarraytype: basictype .
   40 arraytype: basictype . '[' ']'
   41          | basictype . '[' ',' ']'
   42          | basictype . '[' ',' ',' ']'

    '['  shift, and go to state 37

    $default  reduce using rule 32 (noarraytype)


state 29

   30 type: arraytype .

    $default  reduce using rule 30 (type)


state 30

    4 class: CLASS IDENT ':' IDENT '{' members . '}'
    6 members: members . member

    PRIVATE  shift, and go to state 10
    STATIC   shift, and go to state 11
    '}'      shift, and go to state 38

    $default  reduce using rule 25 (accessmodif)

    member       go to state 13
    global       go to state 14
    constructor  go to state 15
    function     go to state 16
    accessmodif  go to state 17


state 31

   11 constructor: accessmodif IDENT '(' . args_e ')' '{' statements '}'

    IDENT   shift, and go to state 39
    BOOL    shift, and go to state 21
    DOUBLE  shift, and go to state 22
    INT     shift, and go to state 23
    OBJECT  shift, and go to state 24

    $default  reduce using rule 19 (args_e)

    arg          go to state 40
    args         go to state 41
    args_e       go to state 42
    type         go to state 43
    noarraytype  go to state 27
    basictype    go to state 28
    arraytype    go to state 29


state 32

   37 arraytype: IDENT '[' . ']'
   38          | IDENT '[' . ',' ']'
   39          | IDENT '[' . ',' ',' ']'

    ','  shift, and go to state 44
    ']'  shift, and go to state 45


state 33

   15 function: accessmodif VOID IDENT . '(' @2 args_e ')' '{' statements '}'

    '('  shift, and go to state 46


state 34

   13 function: accessmodif type IDENT . '(' @1 args_e ')' '{' statements '}'
   23 variable: IDENT .
   24         | IDENT . '=' expression

    '='  shift, and go to state 47
    '('  shift, and go to state 48

    $default  reduce using rule 23 (variable)


state 35

   10 global: accessmodif type variables . ';'
   22 variables: variables . ',' variable

    ';'  shift, and go to state 49
    ','  shift, and go to state 50


state 36

   21 variables: variable .

    $default  reduce using rule 21 (variables)


state 37

   40 arraytype: basictype '[' . ']'
   41          | basictype '[' . ',' ']'
   42          | basictype '[' . ',' ',' ']'

    ','  shift, and go to state 51
    ']'  shift, and go to state 52


state 38

    4 class: CLASS IDENT ':' IDENT '{' members '}' .

    $default  reduce using rule 4 (class)


state 39

   31 noarraytype: IDENT .
   37 arraytype: IDENT . '[' ']'
   38          | IDENT . '[' ',' ']'
   39          | IDENT . '[' ',' ',' ']'

    '['  shift, and go to state 32

    $default  reduce using rule 31 (noarraytype)


state 40

   17 args: arg .

    $default  reduce using rule 17 (args)


state 41

   18 args: args . ',' arg
   20 args_e: args .

    ','  shift, and go to state 53

    $default  reduce using rule 20 (args_e)


state 42

   11 constructor: accessmodif IDENT '(' args_e . ')' '{' statements '}'

    ')'  shift, and go to state 54


state 43

   16 arg: type . IDENT

    IDENT  shift, and go to state 55


state 44

   38 arraytype: IDENT '[' ',' . ']'
   39          | IDENT '[' ',' . ',' ']'

    ','  shift, and go to state 56
    ']'  shift, and go to state 57


state 45

   37 arraytype: IDENT '[' ']' .

    $default  reduce using rule 37 (arraytype)


state 46

   15 function: accessmodif VOID IDENT '(' . @2 args_e ')' '{' statements '}'

    $default  reduce using rule 14 (@2)

    @2  go to state 58


state 47

   24 variable: IDENT '=' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 73
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 48

   13 function: accessmodif type IDENT '(' . @1 args_e ')' '{' statements '}'

    $default  reduce using rule 12 (@1)

    @1  go to state 77


state 49

   10 global: accessmodif type variables ';' .

    $default  reduce using rule 10 (global)


state 50

   22 variables: variables ',' . variable

    IDENT  shift, and go to state 78

    variable  go to state 79


state 51

   41 arraytype: basictype '[' ',' . ']'
   42          | basictype '[' ',' . ',' ']'

    ','  shift, and go to state 80
    ']'  shift, and go to state 81


state 52

   40 arraytype: basictype '[' ']' .

    $default  reduce using rule 40 (arraytype)


state 53

   18 args: args ',' . arg

    IDENT   shift, and go to state 39
    BOOL    shift, and go to state 21
    DOUBLE  shift, and go to state 22
    INT     shift, and go to state 23
    OBJECT  shift, and go to state 24

    arg          go to state 82
    type         go to state 43
    noarraytype  go to state 27
    basictype    go to state 28
    arraytype    go to state 29


state 54

   11 constructor: accessmodif IDENT '(' args_e ')' . '{' statements '}'

    '{'  shift, and go to state 83


state 55

   16 arg: type IDENT .

    $default  reduce using rule 16 (arg)


state 56

   39 arraytype: IDENT '[' ',' ',' . ']'

    ']'  shift, and go to state 84


state 57

   38 arraytype: IDENT '[' ',' ']' .

    $default  reduce using rule 38 (arraytype)


state 58

   15 function: accessmodif VOID IDENT '(' @2 . args_e ')' '{' statements '}'

    IDENT   shift, and go to state 39
    BOOL    shift, and go to state 21
    DOUBLE  shift, and go to state 22
    INT     shift, and go to state 23
    OBJECT  shift, and go to state 24

    $default  reduce using rule 19 (args_e)

    arg          go to state 40
    args         go to state 41
    args_e       go to state 85
    type         go to state 43
    noarraytype  go to state 27
    basictype    go to state 28
    arraytype    go to state 29


state 59

   99 qualifiedname: IDENT .
  102 qualnameorarray: IDENT .
  103                | IDENT . arrayindex

    '['  shift, and go to state 86

    '('       reduce using rule 99 (qualifiedname)
    $default  reduce using rule 102 (qualnameorarray)

    arrayindex  go to state 87


state 60

   90 expr: INTEGER .

    $default  reduce using rule 90 (expr)


state 61

   91 expr: REAL .

    $default  reduce using rule 91 (expr)


state 62

   93 expr: FALSE .

    $default  reduce using rule 93 (expr)


state 63

   92 expr: TRUE .

    $default  reduce using rule 92 (expr)


state 64

   58 expr: NEW . IDENT '(' expr_list_e ')'
   59     | NEW . IDENT arrayindex

    IDENT  shift, and go to state 88


state 65

   94 expr: THIS .

    $default  reduce using rule 94 (expr)


state 66

   95 expr: NUL .

    $default  reduce using rule 95 (expr)


state 67

   51 expr: '+' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 89
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 68

   50 expr: '-' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 90
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 69

   49 expr: '!' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 91
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 70

   46 expr: DECREMENT . qualnameorarray

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expr             go to state 92
    qualifiedname    go to state 75
    qualnameorarray  go to state 93


state 71

   45 expr: INCREMENT . qualnameorarray

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expr             go to state 92
    qualifiedname    go to state 75
    qualnameorarray  go to state 94


state 72

   52 expr: '(' . expr ')'
   53     | '(' . IDENT ')'
   54     | '(' . qnora_without_id ')'
   88     | '(' . basictype ')' expression
   89     | '(' . IDENT ')' expression

    IDENT      shift, and go to state 95
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 21
    DOUBLE     shift, and go to state 22
    INT        shift, and go to state 23
    OBJECT     shift, and go to state 24
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    basictype         go to state 96
    expr              go to state 97
    qualifiedname     go to state 75
    qualnameorarray   go to state 98
    qnora_without_id  go to state 99


state 73

   24 variable: IDENT '=' expression .

    $default  reduce using rule 24 (variable)


state 74

   43 expression: expr .
   60 expr: expr . EQ expression
   62     | expr . NE expression
   64     | expr . '<' expression
   66     | expr . SE expression
   68     | expr . '>' expression
   70     | expr . LE expression
   72     | expr . '+' expression
   74     | expr . '-' expression
   76     | expr . '*' expression
   78     | expr . '/' expression
   80     | expr . '%' expression
   82     | expr . AND expression
   84     | expr . OR expression
   86     | expr . IS type
  100 qualifiedname: expr . '.' IDENT
  104 qualnameorarray: expr . '.' IDENT
  106                | expr . '.' IDENT arrayindex

    IS   shift, and go to state 100
    OR   shift, and go to state 101
    AND  shift, and go to state 102
    NE   shift, and go to state 103
    EQ   shift, and go to state 104
    '>'  shift, and go to state 105
    '<'  shift, and go to state 106
    SE   shift, and go to state 107
    LE   shift, and go to state 108
    '+'  shift, and go to state 109
    '-'  shift, and go to state 110
    '*'  shift, and go to state 111
    '/'  shift, and go to state 112
    '%'  shift, and go to state 113
    '.'  shift, and go to state 114

    $default  reduce using rule 43 (expression)


state 75

   56 expr: qualifiedname . '(' expr_list_e ')'
   57     | qualifiedname . '(' expr_list_e ')' arrayindex

    '('  shift, and go to state 115


state 76

   44 expression: qualnameorarray .
   47 expr: qualnameorarray . INCREMENT
   48     | qualnameorarray . DECREMENT
   55     | qualnameorarray . '=' expression
   61     | qualnameorarray . EQ expression
   63     | qualnameorarray . NE expression
   65     | qualnameorarray . '<' expression
   67     | qualnameorarray . SE expression
   69     | qualnameorarray . '>' expression
   71     | qualnameorarray . LE expression
   73     | qualnameorarray . '+' expression
   75     | qualnameorarray . '-' expression
   77     | qualnameorarray . '*' expression
   79     | qualnameorarray . '/' expression
   81     | qualnameorarray . '%' expression
   83     | qualnameorarray . AND expression
   85     | qualnameorarray . OR expression
   87     | qualnameorarray . IS type
  101 qualifiedname: qualnameorarray . '.' IDENT
  105 qualnameorarray: qualnameorarray . '.' IDENT
  107                | qualnameorarray . '.' IDENT arrayindex

    IS         shift, and go to state 116
    '='        shift, and go to state 117
    OR         shift, and go to state 118
    AND        shift, and go to state 119
    NE         shift, and go to state 120
    EQ         shift, and go to state 121
    '>'        shift, and go to state 122
    '<'        shift, and go to state 123
    SE         shift, and go to state 124
    LE         shift, and go to state 125
    '+'        shift, and go to state 126
    '-'        shift, and go to state 127
    '*'        shift, and go to state 128
    '/'        shift, and go to state 129
    '%'        shift, and go to state 130
    DECREMENT  shift, and go to state 131
    INCREMENT  shift, and go to state 132
    '.'        shift, and go to state 133

    $default  reduce using rule 44 (expression)


state 77

   13 function: accessmodif type IDENT '(' @1 . args_e ')' '{' statements '}'

    IDENT   shift, and go to state 39
    BOOL    shift, and go to state 21
    DOUBLE  shift, and go to state 22
    INT     shift, and go to state 23
    OBJECT  shift, and go to state 24

    $default  reduce using rule 19 (args_e)

    arg          go to state 40
    args         go to state 41
    args_e       go to state 134
    type         go to state 43
    noarraytype  go to state 27
    basictype    go to state 28
    arraytype    go to state 29


state 78

   23 variable: IDENT .
   24         | IDENT . '=' expression

    '='  shift, and go to state 47

    $default  reduce using rule 23 (variable)


state 79

   22 variables: variables ',' variable .

    $default  reduce using rule 22 (variables)


state 80

   42 arraytype: basictype '[' ',' ',' . ']'

    ']'  shift, and go to state 135


state 81

   41 arraytype: basictype '[' ',' ']' .

    $default  reduce using rule 41 (arraytype)


state 82

   18 args: args ',' arg .

    $default  reduce using rule 18 (args)


state 83

   11 constructor: accessmodif IDENT '(' args_e ')' '{' . statements '}'

    $default  reduce using rule 126 (statements)

    statements  go to state 136


state 84

   39 arraytype: IDENT '[' ',' ',' ']' .

    $default  reduce using rule 39 (arraytype)


state 85

   15 function: accessmodif VOID IDENT '(' @2 args_e . ')' '{' statements '}'

    ')'  shift, and go to state 137


state 86

   96 arrayindex: '[' . expression ']'
   97           | '[' . expression ',' expression ']'
   98           | '[' . expression ',' expression ',' expression ']'

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 138
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 87

  103 qualnameorarray: IDENT arrayindex .

    $default  reduce using rule 103 (qualnameorarray)


state 88

   58 expr: NEW IDENT . '(' expr_list_e ')'
   59     | NEW IDENT . arrayindex

    '('  shift, and go to state 139
    '['  shift, and go to state 86

    arrayindex  go to state 140


state 89

   51 expr: '+' expression .

    $default  reduce using rule 51 (expr)


state 90

   50 expr: '-' expression .

    $default  reduce using rule 50 (expr)


state 91

   49 expr: '!' expression .

    $default  reduce using rule 49 (expr)


state 92

   60 expr: expr . EQ expression
   62     | expr . NE expression
   64     | expr . '<' expression
   66     | expr . SE expression
   68     | expr . '>' expression
   70     | expr . LE expression
   72     | expr . '+' expression
   74     | expr . '-' expression
   76     | expr . '*' expression
   78     | expr . '/' expression
   80     | expr . '%' expression
   82     | expr . AND expression
   84     | expr . OR expression
   86     | expr . IS type
  100 qualifiedname: expr . '.' IDENT
  104 qualnameorarray: expr . '.' IDENT
  106                | expr . '.' IDENT arrayindex

    IS   shift, and go to state 100
    OR   shift, and go to state 101
    AND  shift, and go to state 102
    NE   shift, and go to state 103
    EQ   shift, and go to state 104
    '>'  shift, and go to state 105
    '<'  shift, and go to state 106
    SE   shift, and go to state 107
    LE   shift, and go to state 108
    '+'  shift, and go to state 109
    '-'  shift, and go to state 110
    '*'  shift, and go to state 111
    '/'  shift, and go to state 112
    '%'  shift, and go to state 113
    '.'  shift, and go to state 114


state 93

   46 expr: DECREMENT qualnameorarray .
   47     | qualnameorarray . INCREMENT
   48     | qualnameorarray . DECREMENT
   55     | qualnameorarray . '=' expression
   61     | qualnameorarray . EQ expression
   63     | qualnameorarray . NE expression
   65     | qualnameorarray . '<' expression
   67     | qualnameorarray . SE expression
   69     | qualnameorarray . '>' expression
   71     | qualnameorarray . LE expression
   73     | qualnameorarray . '+' expression
   75     | qualnameorarray . '-' expression
   77     | qualnameorarray . '*' expression
   79     | qualnameorarray . '/' expression
   81     | qualnameorarray . '%' expression
   83     | qualnameorarray . AND expression
   85     | qualnameorarray . OR expression
   87     | qualnameorarray . IS type
  101 qualifiedname: qualnameorarray . '.' IDENT
  105 qualnameorarray: qualnameorarray . '.' IDENT
  107                | qualnameorarray . '.' IDENT arrayindex

    '='        shift, and go to state 117
    DECREMENT  shift, and go to state 131
    INCREMENT  shift, and go to state 132
    '.'        shift, and go to state 133

    $default  reduce using rule 46 (expr)


state 94

   45 expr: INCREMENT qualnameorarray .
   47     | qualnameorarray . INCREMENT
   48     | qualnameorarray . DECREMENT
   55     | qualnameorarray . '=' expression
   61     | qualnameorarray . EQ expression
   63     | qualnameorarray . NE expression
   65     | qualnameorarray . '<' expression
   67     | qualnameorarray . SE expression
   69     | qualnameorarray . '>' expression
   71     | qualnameorarray . LE expression
   73     | qualnameorarray . '+' expression
   75     | qualnameorarray . '-' expression
   77     | qualnameorarray . '*' expression
   79     | qualnameorarray . '/' expression
   81     | qualnameorarray . '%' expression
   83     | qualnameorarray . AND expression
   85     | qualnameorarray . OR expression
   87     | qualnameorarray . IS type
  101 qualifiedname: qualnameorarray . '.' IDENT
  105 qualnameorarray: qualnameorarray . '.' IDENT
  107                | qualnameorarray . '.' IDENT arrayindex

    '='        shift, and go to state 117
    DECREMENT  shift, and go to state 131
    INCREMENT  shift, and go to state 132
    '.'        shift, and go to state 133

    $default  reduce using rule 45 (expr)


state 95

   53 expr: '(' IDENT . ')'
   89     | '(' IDENT . ')' expression
   99 qualifiedname: IDENT .
  102 qualnameorarray: IDENT .
  103                | IDENT . arrayindex
  108 qnora_without_id: IDENT . arrayindex

    ')'  shift, and go to state 141
    '['  shift, and go to state 86

    '('       reduce using rule 99 (qualifiedname)
    $default  reduce using rule 102 (qualnameorarray)

    arrayindex  go to state 142


state 96

   88 expr: '(' basictype . ')' expression

    ')'  shift, and go to state 143


state 97

   52 expr: '(' expr . ')'
   60     | expr . EQ expression
   62     | expr . NE expression
   64     | expr . '<' expression
   66     | expr . SE expression
   68     | expr . '>' expression
   70     | expr . LE expression
   72     | expr . '+' expression
   74     | expr . '-' expression
   76     | expr . '*' expression
   78     | expr . '/' expression
   80     | expr . '%' expression
   82     | expr . AND expression
   84     | expr . OR expression
   86     | expr . IS type
  100 qualifiedname: expr . '.' IDENT
  104 qualnameorarray: expr . '.' IDENT
  106                | expr . '.' IDENT arrayindex
  109 qnora_without_id: expr . '.' IDENT
  111                 | expr . '.' IDENT arrayindex

    IS   shift, and go to state 100
    OR   shift, and go to state 101
    AND  shift, and go to state 102
    NE   shift, and go to state 103
    EQ   shift, and go to state 104
    '>'  shift, and go to state 105
    '<'  shift, and go to state 106
    SE   shift, and go to state 107
    LE   shift, and go to state 108
    '+'  shift, and go to state 109
    '-'  shift, and go to state 110
    '*'  shift, and go to state 111
    '/'  shift, and go to state 112
    '%'  shift, and go to state 113
    '.'  shift, and go to state 144
    ')'  shift, and go to state 145


state 98

   47 expr: qualnameorarray . INCREMENT
   48     | qualnameorarray . DECREMENT
   55     | qualnameorarray . '=' expression
   61     | qualnameorarray . EQ expression
   63     | qualnameorarray . NE expression
   65     | qualnameorarray . '<' expression
   67     | qualnameorarray . SE expression
   69     | qualnameorarray . '>' expression
   71     | qualnameorarray . LE expression
   73     | qualnameorarray . '+' expression
   75     | qualnameorarray . '-' expression
   77     | qualnameorarray . '*' expression
   79     | qualnameorarray . '/' expression
   81     | qualnameorarray . '%' expression
   83     | qualnameorarray . AND expression
   85     | qualnameorarray . OR expression
   87     | qualnameorarray . IS type
  101 qualifiedname: qualnameorarray . '.' IDENT
  105 qualnameorarray: qualnameorarray . '.' IDENT
  107                | qualnameorarray . '.' IDENT arrayindex
  110 qnora_without_id: qualnameorarray . '.' IDENT
  112                 | qualnameorarray . '.' IDENT arrayindex

    IS         shift, and go to state 116
    '='        shift, and go to state 117
    OR         shift, and go to state 118
    AND        shift, and go to state 119
    NE         shift, and go to state 120
    EQ         shift, and go to state 121
    '>'        shift, and go to state 122
    '<'        shift, and go to state 123
    SE         shift, and go to state 124
    LE         shift, and go to state 125
    '+'        shift, and go to state 126
    '-'        shift, and go to state 127
    '*'        shift, and go to state 128
    '/'        shift, and go to state 129
    '%'        shift, and go to state 130
    DECREMENT  shift, and go to state 131
    INCREMENT  shift, and go to state 132
    '.'        shift, and go to state 146


state 99

   54 expr: '(' qnora_without_id . ')'

    ')'  shift, and go to state 147


state 100

   86 expr: expr IS . type

    IDENT   shift, and go to state 39
    BOOL    shift, and go to state 21
    DOUBLE  shift, and go to state 22
    INT     shift, and go to state 23
    OBJECT  shift, and go to state 24

    type         go to state 148
    noarraytype  go to state 27
    basictype    go to state 28
    arraytype    go to state 29


state 101

   84 expr: expr OR . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 149
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 102

   82 expr: expr AND . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 150
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 103

   62 expr: expr NE . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 151
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 104

   60 expr: expr EQ . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 152
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 105

   68 expr: expr '>' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 153
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 106

   64 expr: expr '<' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 154
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 107

   66 expr: expr SE . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 155
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 108

   70 expr: expr LE . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 156
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 109

   72 expr: expr '+' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 157
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 110

   74 expr: expr '-' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 158
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 111

   76 expr: expr '*' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 159
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 112

   78 expr: expr '/' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 160
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 113

   80 expr: expr '%' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 161
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 114

  100 qualifiedname: expr '.' . IDENT
  104 qualnameorarray: expr '.' . IDENT
  106                | expr '.' . IDENT arrayindex

    IDENT  shift, and go to state 162


state 115

   56 expr: qualifiedname '(' . expr_list_e ')'
   57     | qualifiedname '(' . expr_list_e ')' arrayindex

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    $default  reduce using rule 115 (expr_list_e)

    expression       go to state 163
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    expr_list        go to state 164
    expr_list_e      go to state 165


state 116

   87 expr: qualnameorarray IS . type

    IDENT   shift, and go to state 39
    BOOL    shift, and go to state 21
    DOUBLE  shift, and go to state 22
    INT     shift, and go to state 23
    OBJECT  shift, and go to state 24

    type         go to state 166
    noarraytype  go to state 27
    basictype    go to state 28
    arraytype    go to state 29


state 117

   55 expr: qualnameorarray '=' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 167
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 118

   85 expr: qualnameorarray OR . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 168
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 119

   83 expr: qualnameorarray AND . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 169
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 120

   63 expr: qualnameorarray NE . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 170
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 121

   61 expr: qualnameorarray EQ . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 171
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 122

   69 expr: qualnameorarray '>' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 172
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 123

   65 expr: qualnameorarray '<' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 173
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 124

   67 expr: qualnameorarray SE . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 174
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 125

   71 expr: qualnameorarray LE . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 175
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 126

   73 expr: qualnameorarray '+' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 176
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 127

   75 expr: qualnameorarray '-' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 177
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 128

   77 expr: qualnameorarray '*' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 178
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 129

   79 expr: qualnameorarray '/' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 179
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 130

   81 expr: qualnameorarray '%' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 180
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 131

   48 expr: qualnameorarray DECREMENT .

    $default  reduce using rule 48 (expr)


state 132

   47 expr: qualnameorarray INCREMENT .

    $default  reduce using rule 47 (expr)


state 133

  101 qualifiedname: qualnameorarray '.' . IDENT
  105 qualnameorarray: qualnameorarray '.' . IDENT
  107                | qualnameorarray '.' . IDENT arrayindex

    IDENT  shift, and go to state 181


state 134

   13 function: accessmodif type IDENT '(' @1 args_e . ')' '{' statements '}'

    ')'  shift, and go to state 182


state 135

   42 arraytype: basictype '[' ',' ',' ']' .

    $default  reduce using rule 42 (arraytype)


state 136

   11 constructor: accessmodif IDENT '(' args_e ')' '{' statements . '}'
  127 statements: statements . statement

    IDENT      shift, and go to state 183
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 21
    DOUBLE     shift, and go to state 22
    INT        shift, and go to state 23
    OBJECT     shift, and go to state 24
    IF         shift, and go to state 184
    WHILE      shift, and go to state 185
    FOR        shift, and go to state 186
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 187
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 188
    '}'        shift, and go to state 189

    type             go to state 190
    noarraytype      go to state 27
    basictype        go to state 28
    arraytype        go to state 29
    expression       go to state 191
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    statement        go to state 192


state 137

   15 function: accessmodif VOID IDENT '(' @2 args_e ')' . '{' statements '}'

    '{'  shift, and go to state 193


state 138

   96 arrayindex: '[' expression . ']'
   97           | '[' expression . ',' expression ']'
   98           | '[' expression . ',' expression ',' expression ']'

    ','  shift, and go to state 194
    ']'  shift, and go to state 195


state 139

   58 expr: NEW IDENT '(' . expr_list_e ')'

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    $default  reduce using rule 115 (expr_list_e)

    expression       go to state 163
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    expr_list        go to state 164
    expr_list_e      go to state 196


state 140

   59 expr: NEW IDENT arrayindex .

    $default  reduce using rule 59 (expr)


state 141

   53 expr: '(' IDENT ')' .
   89     | '(' IDENT ')' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    $default  reduce using rule 53 (expr)

    expression       go to state 197
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 142

  103 qualnameorarray: IDENT arrayindex .
  108 qnora_without_id: IDENT arrayindex .

    ')'       reduce using rule 108 (qnora_without_id)
    $default  reduce using rule 103 (qualnameorarray)


state 143

   88 expr: '(' basictype ')' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 198
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 144

  100 qualifiedname: expr '.' . IDENT
  104 qualnameorarray: expr '.' . IDENT
  106                | expr '.' . IDENT arrayindex
  109 qnora_without_id: expr '.' . IDENT
  111                 | expr '.' . IDENT arrayindex

    IDENT  shift, and go to state 199


state 145

   52 expr: '(' expr ')' .

    $default  reduce using rule 52 (expr)


state 146

  101 qualifiedname: qualnameorarray '.' . IDENT
  105 qualnameorarray: qualnameorarray '.' . IDENT
  107                | qualnameorarray '.' . IDENT arrayindex
  110 qnora_without_id: qualnameorarray '.' . IDENT
  112                 | qualnameorarray '.' . IDENT arrayindex

    IDENT  shift, and go to state 200


state 147

   54 expr: '(' qnora_without_id ')' .

    $default  reduce using rule 54 (expr)


state 148

   86 expr: expr IS type .

    $default  reduce using rule 86 (expr)


state 149

   84 expr: expr OR expression .

    $default  reduce using rule 84 (expr)


state 150

   82 expr: expr AND expression .

    $default  reduce using rule 82 (expr)


state 151

   62 expr: expr NE expression .

    $default  reduce using rule 62 (expr)


state 152

   60 expr: expr EQ expression .

    $default  reduce using rule 60 (expr)


state 153

   68 expr: expr '>' expression .

    $default  reduce using rule 68 (expr)


state 154

   64 expr: expr '<' expression .

    $default  reduce using rule 64 (expr)


state 155

   66 expr: expr SE expression .

    $default  reduce using rule 66 (expr)


state 156

   70 expr: expr LE expression .

    $default  reduce using rule 70 (expr)


state 157

   72 expr: expr '+' expression .

    $default  reduce using rule 72 (expr)


state 158

   74 expr: expr '-' expression .

    $default  reduce using rule 74 (expr)


state 159

   76 expr: expr '*' expression .

    $default  reduce using rule 76 (expr)


state 160

   78 expr: expr '/' expression .

    $default  reduce using rule 78 (expr)


state 161

   80 expr: expr '%' expression .

    $default  reduce using rule 80 (expr)


state 162

  100 qualifiedname: expr '.' IDENT .
  104 qualnameorarray: expr '.' IDENT .
  106                | expr '.' IDENT . arrayindex

    '['  shift, and go to state 86

    '('       reduce using rule 100 (qualifiedname)
    $default  reduce using rule 104 (qualnameorarray)

    arrayindex  go to state 201


state 163

  113 expr_list: expression .

    $default  reduce using rule 113 (expr_list)


state 164

  114 expr_list: expr_list . ',' expression
  116 expr_list_e: expr_list .

    ','  shift, and go to state 202

    $default  reduce using rule 116 (expr_list_e)


state 165

   56 expr: qualifiedname '(' expr_list_e . ')'
   57     | qualifiedname '(' expr_list_e . ')' arrayindex

    ')'  shift, and go to state 203


state 166

   87 expr: qualnameorarray IS type .

    $default  reduce using rule 87 (expr)


state 167

   55 expr: qualnameorarray '=' expression .

    $default  reduce using rule 55 (expr)


state 168

   85 expr: qualnameorarray OR expression .

    $default  reduce using rule 85 (expr)


state 169

   83 expr: qualnameorarray AND expression .

    $default  reduce using rule 83 (expr)


state 170

   63 expr: qualnameorarray NE expression .

    $default  reduce using rule 63 (expr)


state 171

   61 expr: qualnameorarray EQ expression .

    $default  reduce using rule 61 (expr)


state 172

   69 expr: qualnameorarray '>' expression .

    $default  reduce using rule 69 (expr)


state 173

   65 expr: qualnameorarray '<' expression .

    $default  reduce using rule 65 (expr)


state 174

   67 expr: qualnameorarray SE expression .

    $default  reduce using rule 67 (expr)


state 175

   71 expr: qualnameorarray LE expression .

    $default  reduce using rule 71 (expr)


state 176

   73 expr: qualnameorarray '+' expression .

    $default  reduce using rule 73 (expr)


state 177

   75 expr: qualnameorarray '-' expression .

    $default  reduce using rule 75 (expr)


state 178

   77 expr: qualnameorarray '*' expression .

    $default  reduce using rule 77 (expr)


state 179

   79 expr: qualnameorarray '/' expression .

    $default  reduce using rule 79 (expr)


state 180

   81 expr: qualnameorarray '%' expression .

    $default  reduce using rule 81 (expr)


state 181

  101 qualifiedname: qualnameorarray '.' IDENT .
  105 qualnameorarray: qualnameorarray '.' IDENT .
  107                | qualnameorarray '.' IDENT . arrayindex

    '['  shift, and go to state 86

    '('       reduce using rule 101 (qualifiedname)
    $default  reduce using rule 105 (qualnameorarray)

    arrayindex  go to state 204


state 182

   13 function: accessmodif type IDENT '(' @1 args_e ')' . '{' statements '}'

    '{'  shift, and go to state 205


state 183

   31 noarraytype: IDENT .
   37 arraytype: IDENT . '[' ']'
   38          | IDENT . '[' ',' ']'
   39          | IDENT . '[' ',' ',' ']'
   99 qualifiedname: IDENT .
  102 qualnameorarray: IDENT .
  103                | IDENT . arrayindex

    '['  shift, and go to state 206

    IDENT     reduce using rule 31 (noarraytype)
    '('       reduce using rule 99 (qualifiedname)
    $default  reduce using rule 102 (qualnameorarray)

    arrayindex  go to state 87


state 184

  117 statement: IF . '(' expression ')' statement
  118          | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 207


state 185

  119 statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 208


state 186

  120 statement: FOR . '(' variables_e ';' expr_e ';' expr_e ')' statement

    '('  shift, and go to state 209


state 187

  125 statement: RETURN . expr_e ';'

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    $default  reduce using rule 130 (expr_e)

    expression       go to state 210
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    expr_e           go to state 211


state 188

  124 statement: '{' . @3 statements '}'

    $default  reduce using rule 123 (@3)

    @3  go to state 212


state 189

   11 constructor: accessmodif IDENT '(' args_e ')' '{' statements '}' .

    $default  reduce using rule 11 (constructor)


state 190

  122 statement: type . variables ';'

    IDENT  shift, and go to state 78

    variables  go to state 213
    variable   go to state 36


state 191

  121 statement: expression . ';'

    ';'  shift, and go to state 214


state 192

  127 statements: statements statement .

    $default  reduce using rule 127 (statements)


state 193

   15 function: accessmodif VOID IDENT '(' @2 args_e ')' '{' . statements '}'

    $default  reduce using rule 126 (statements)

    statements  go to state 215


state 194

   97 arrayindex: '[' expression ',' . expression ']'
   98           | '[' expression ',' . expression ',' expression ']'

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 216
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 195

   96 arrayindex: '[' expression ']' .

    $default  reduce using rule 96 (arrayindex)


state 196

   58 expr: NEW IDENT '(' expr_list_e . ')'

    ')'  shift, and go to state 217


state 197

   89 expr: '(' IDENT ')' expression .

    $default  reduce using rule 89 (expr)


state 198

   88 expr: '(' basictype ')' expression .

    $default  reduce using rule 88 (expr)


state 199

  100 qualifiedname: expr '.' IDENT .
  104 qualnameorarray: expr '.' IDENT .
  106                | expr '.' IDENT . arrayindex
  109 qnora_without_id: expr '.' IDENT .
  111                 | expr '.' IDENT . arrayindex

    '['  shift, and go to state 86

    '('       reduce using rule 100 (qualifiedname)
    ')'       reduce using rule 109 (qnora_without_id)
    $default  reduce using rule 104 (qualnameorarray)

    arrayindex  go to state 218


state 200

  101 qualifiedname: qualnameorarray '.' IDENT .
  105 qualnameorarray: qualnameorarray '.' IDENT .
  107                | qualnameorarray '.' IDENT . arrayindex
  110 qnora_without_id: qualnameorarray '.' IDENT .
  112                 | qualnameorarray '.' IDENT . arrayindex

    '['  shift, and go to state 86

    '('       reduce using rule 101 (qualifiedname)
    ')'       reduce using rule 110 (qnora_without_id)
    $default  reduce using rule 105 (qualnameorarray)

    arrayindex  go to state 219


state 201

  106 qualnameorarray: expr '.' IDENT arrayindex .

    $default  reduce using rule 106 (qualnameorarray)


state 202

  114 expr_list: expr_list ',' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 220
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 203

   56 expr: qualifiedname '(' expr_list_e ')' .
   57     | qualifiedname '(' expr_list_e ')' . arrayindex

    '['  shift, and go to state 86

    $default  reduce using rule 56 (expr)

    arrayindex  go to state 221


state 204

  107 qualnameorarray: qualnameorarray '.' IDENT arrayindex .

    $default  reduce using rule 107 (qualnameorarray)


state 205

   13 function: accessmodif type IDENT '(' @1 args_e ')' '{' . statements '}'

    $default  reduce using rule 126 (statements)

    statements  go to state 222


state 206

   37 arraytype: IDENT '[' . ']'
   38          | IDENT '[' . ',' ']'
   39          | IDENT '[' . ',' ',' ']'
   96 arrayindex: '[' . expression ']'
   97           | '[' . expression ',' expression ']'
   98           | '[' . expression ',' expression ',' expression ']'

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    ','        shift, and go to state 44
    ']'        shift, and go to state 45

    expression       go to state 138
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 207

  117 statement: IF '(' . expression ')' statement
  118          | IF '(' . expression ')' statement ELSE statement

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 223
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 208

  119 statement: WHILE '(' . expression ')' statement

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 224
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 209

  120 statement: FOR '(' . variables_e ';' expr_e ';' expr_e ')' statement

    IDENT   shift, and go to state 39
    BOOL    shift, and go to state 21
    DOUBLE  shift, and go to state 22
    INT     shift, and go to state 23
    OBJECT  shift, and go to state 24

    $default  reduce using rule 128 (variables_e)

    type         go to state 225
    noarraytype  go to state 27
    basictype    go to state 28
    arraytype    go to state 29
    variables_e  go to state 226


state 210

  131 expr_e: expression .

    $default  reduce using rule 131 (expr_e)


state 211

  125 statement: RETURN expr_e . ';'

    ';'  shift, and go to state 227


state 212

  124 statement: '{' @3 . statements '}'

    $default  reduce using rule 126 (statements)

    statements  go to state 228


state 213

   22 variables: variables . ',' variable
  122 statement: type variables . ';'

    ';'  shift, and go to state 229
    ','  shift, and go to state 50


state 214

  121 statement: expression ';' .

    $default  reduce using rule 121 (statement)


state 215

   15 function: accessmodif VOID IDENT '(' @2 args_e ')' '{' statements . '}'
  127 statements: statements . statement

    IDENT      shift, and go to state 183
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 21
    DOUBLE     shift, and go to state 22
    INT        shift, and go to state 23
    OBJECT     shift, and go to state 24
    IF         shift, and go to state 184
    WHILE      shift, and go to state 185
    FOR        shift, and go to state 186
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 187
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 188
    '}'        shift, and go to state 230

    type             go to state 190
    noarraytype      go to state 27
    basictype        go to state 28
    arraytype        go to state 29
    expression       go to state 191
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    statement        go to state 192


state 216

   97 arrayindex: '[' expression ',' expression . ']'
   98           | '[' expression ',' expression . ',' expression ']'

    ','  shift, and go to state 231
    ']'  shift, and go to state 232


state 217

   58 expr: NEW IDENT '(' expr_list_e ')' .

    $default  reduce using rule 58 (expr)


state 218

  106 qualnameorarray: expr '.' IDENT arrayindex .
  111 qnora_without_id: expr '.' IDENT arrayindex .

    ')'       reduce using rule 111 (qnora_without_id)
    $default  reduce using rule 106 (qualnameorarray)


state 219

  107 qualnameorarray: qualnameorarray '.' IDENT arrayindex .
  112 qnora_without_id: qualnameorarray '.' IDENT arrayindex .

    ')'       reduce using rule 112 (qnora_without_id)
    $default  reduce using rule 107 (qualnameorarray)


state 220

  114 expr_list: expr_list ',' expression .

    $default  reduce using rule 114 (expr_list)


state 221

   57 expr: qualifiedname '(' expr_list_e ')' arrayindex .

    $default  reduce using rule 57 (expr)


state 222

   13 function: accessmodif type IDENT '(' @1 args_e ')' '{' statements . '}'
  127 statements: statements . statement

    IDENT      shift, and go to state 183
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 21
    DOUBLE     shift, and go to state 22
    INT        shift, and go to state 23
    OBJECT     shift, and go to state 24
    IF         shift, and go to state 184
    WHILE      shift, and go to state 185
    FOR        shift, and go to state 186
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 187
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 188
    '}'        shift, and go to state 233

    type             go to state 190
    noarraytype      go to state 27
    basictype        go to state 28
    arraytype        go to state 29
    expression       go to state 191
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    statement        go to state 192


state 223

  117 statement: IF '(' expression . ')' statement
  118          | IF '(' expression . ')' statement ELSE statement

    ')'  shift, and go to state 234


state 224

  119 statement: WHILE '(' expression . ')' statement

    ')'  shift, and go to state 235


state 225

  129 variables_e: type . variables

    IDENT  shift, and go to state 78

    variables  go to state 236
    variable   go to state 36


state 226

  120 statement: FOR '(' variables_e . ';' expr_e ';' expr_e ')' statement

    ';'  shift, and go to state 237


state 227

  125 statement: RETURN expr_e ';' .

    $default  reduce using rule 125 (statement)


state 228

  124 statement: '{' @3 statements . '}'
  127 statements: statements . statement

    IDENT      shift, and go to state 183
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 21
    DOUBLE     shift, and go to state 22
    INT        shift, and go to state 23
    OBJECT     shift, and go to state 24
    IF         shift, and go to state 184
    WHILE      shift, and go to state 185
    FOR        shift, and go to state 186
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 187
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 188
    '}'        shift, and go to state 238

    type             go to state 190
    noarraytype      go to state 27
    basictype        go to state 28
    arraytype        go to state 29
    expression       go to state 191
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    statement        go to state 192


state 229

  122 statement: type variables ';' .

    $default  reduce using rule 122 (statement)


state 230

   15 function: accessmodif VOID IDENT '(' @2 args_e ')' '{' statements '}' .

    $default  reduce using rule 15 (function)


state 231

   98 arrayindex: '[' expression ',' expression ',' . expression ']'

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 239
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 232

   97 arrayindex: '[' expression ',' expression ']' .

    $default  reduce using rule 97 (arrayindex)


state 233

   13 function: accessmodif type IDENT '(' @1 args_e ')' '{' statements '}' .

    $default  reduce using rule 13 (function)


state 234

  117 statement: IF '(' expression ')' . statement
  118          | IF '(' expression ')' . statement ELSE statement

    IDENT      shift, and go to state 183
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 21
    DOUBLE     shift, and go to state 22
    INT        shift, and go to state 23
    OBJECT     shift, and go to state 24
    IF         shift, and go to state 184
    WHILE      shift, and go to state 185
    FOR        shift, and go to state 186
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 187
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 188

    type             go to state 190
    noarraytype      go to state 27
    basictype        go to state 28
    arraytype        go to state 29
    expression       go to state 191
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    statement        go to state 240


state 235

  119 statement: WHILE '(' expression ')' . statement

    IDENT      shift, and go to state 183
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 21
    DOUBLE     shift, and go to state 22
    INT        shift, and go to state 23
    OBJECT     shift, and go to state 24
    IF         shift, and go to state 184
    WHILE      shift, and go to state 185
    FOR        shift, and go to state 186
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 187
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 188

    type             go to state 190
    noarraytype      go to state 27
    basictype        go to state 28
    arraytype        go to state 29
    expression       go to state 191
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    statement        go to state 241


state 236

   22 variables: variables . ',' variable
  129 variables_e: type variables .

    ','  shift, and go to state 50

    $default  reduce using rule 129 (variables_e)


state 237

  120 statement: FOR '(' variables_e ';' . expr_e ';' expr_e ')' statement

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    $default  reduce using rule 130 (expr_e)

    expression       go to state 210
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    expr_e           go to state 242


state 238

  124 statement: '{' @3 statements '}' .

    $default  reduce using rule 124 (statement)


state 239

   98 arrayindex: '[' expression ',' expression ',' expression . ']'

    ']'  shift, and go to state 243


state 240

  117 statement: IF '(' expression ')' statement .
  118          | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 244

    $default  reduce using rule 117 (statement)


state 241

  119 statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 119 (statement)


state 242

  120 statement: FOR '(' variables_e ';' expr_e . ';' expr_e ')' statement

    ';'  shift, and go to state 245


state 243

   98 arrayindex: '[' expression ',' expression ',' expression ']' .

    $default  reduce using rule 98 (arrayindex)


state 244

  118 statement: IF '(' expression ')' statement ELSE . statement

    IDENT      shift, and go to state 183
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 21
    DOUBLE     shift, and go to state 22
    INT        shift, and go to state 23
    OBJECT     shift, and go to state 24
    IF         shift, and go to state 184
    WHILE      shift, and go to state 185
    FOR        shift, and go to state 186
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 187
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 188

    type             go to state 190
    noarraytype      go to state 27
    basictype        go to state 28
    arraytype        go to state 29
    expression       go to state 191
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    statement        go to state 246


state 245

  120 statement: FOR '(' variables_e ';' expr_e ';' . expr_e ')' statement

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    $default  reduce using rule 130 (expr_e)

    expression       go to state 210
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    expr_e           go to state 247


state 246

  118 statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 118 (statement)


state 247

  120 statement: FOR '(' variables_e ';' expr_e ';' expr_e . ')' statement

    ')'  shift, and go to state 248


state 248

  120 statement: FOR '(' variables_e ';' expr_e ';' expr_e ')' . statement

    IDENT      shift, and go to state 183
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 21
    DOUBLE     shift, and go to state 22
    INT        shift, and go to state 23
    OBJECT     shift, and go to state 24
    IF         shift, and go to state 184
    WHILE      shift, and go to state 185
    FOR        shift, and go to state 186
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 187
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 188

    type             go to state 190
    noarraytype      go to state 27
    basictype        go to state 28
    arraytype        go to state 29
    expression       go to state 191
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    statement        go to state 249


state 249

  120 statement: FOR '(' variables_e ';' expr_e ';' expr_e ')' statement .

    $default  reduce using rule 120 (statement)
