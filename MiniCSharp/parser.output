Grammar

    0 $accept: root $end

    1 root: /* empty */
    2     | root class

    3 @1: /* empty */

    4 class: CLASS IDENT '{' @1 members '}'

    5 @2: /* empty */

    6 class: CLASS IDENT ':' IDENT '{' @2 members '}'

    7 members: /* empty */
    8        | members member

    9 member: global
   10       | constructor
   11       | function

   12 global: accessmodif type variables ';'

   13 constructor: accessmodif IDENT '(' args_e ')' '{' statements '}'

   14 @3: /* empty */

   15 function: accessmodif type IDENT '(' @3 args_e ')' '{' statements '}'

   16 @4: /* empty */

   17 function: accessmodif VOID IDENT '(' @4 args_e ')' '{' statements '}'

   18 arg: type IDENT

   19 args: arg
   20     | args ',' arg

   21 args_e: /* empty */
   22       | args

   23 variables: variable
   24          | variables ',' variable

   25 variable: IDENT
   26         | IDENT '=' expression

   27 accessmodif: /* empty */
   28            | PRIVATE
   29            | STATIC
   30            | PRIVATE STATIC

   31 type: noarraytype
   32     | arraytype

   33 noarraytype: IDENT
   34            | basictype

   35 basictype: OBJECT
   36          | BOOL
   37          | INT
   38          | DOUBLE

   39 arraytype: IDENT '[' ']'
   40          | IDENT '[' ',' ']'
   41          | IDENT '[' ',' ',' ']'
   42          | basictype '[' ']'
   43          | basictype '[' ',' ']'
   44          | basictype '[' ',' ',' ']'

   45 expression: expr
   46           | qualnameorarray

   47 expr: INCREMENT qualnameorarray
   48     | DECREMENT qualnameorarray
   49     | qualnameorarray INCREMENT
   50     | qualnameorarray DECREMENT
   51     | '!' expression
   52     | '-' expression
   53     | '+' expression
   54     | '(' expr ')'
   55     | '(' IDENT ')'
   56     | '(' qnora_without_id ')'
   57     | qualnameorarray '=' expression
   58     | qualifiedname '(' expr_list_e ')'
   59     | qualifiedname '(' expr_list_e ')' arrayindex
   60     | NEW IDENT '(' expr_list_e ')'
   61     | NEW IDENT arrayindex
   62     | expr EQ expression
   63     | qualnameorarray EQ expression
   64     | expr NE expression
   65     | qualnameorarray NE expression
   66     | expr '<' expression
   67     | qualnameorarray '<' expression
   68     | expr SE expression
   69     | qualnameorarray SE expression
   70     | expr '>' expression
   71     | qualnameorarray '>' expression
   72     | expr LE expression
   73     | qualnameorarray LE expression
   74     | expr '+' expression
   75     | qualnameorarray '+' expression
   76     | expr '-' expression
   77     | qualnameorarray '-' expression
   78     | expr '*' expression
   79     | qualnameorarray '*' expression
   80     | expr '/' expression
   81     | qualnameorarray '/' expression
   82     | expr '%' expression
   83     | qualnameorarray '%' expression
   84     | expr AND expression
   85     | qualnameorarray AND expression
   86     | expr OR expression
   87     | qualnameorarray OR expression
   88     | expr IS type
   89     | qualnameorarray IS type
   90     | '(' basictype ')' expression
   91     | '(' IDENT ')' expression
   92     | INTEGER
   93     | REAL
   94     | TRUE
   95     | FALSE
   96     | THIS
   97     | NUL

   98 arrayindex: '[' expression ']'
   99           | '[' expression ',' expression ']'
  100           | '[' expression ',' expression ',' expression ']'

  101 qualifiedname: IDENT
  102              | expr '.' IDENT
  103              | qualnameorarray '.' IDENT

  104 qualnameorarray: IDENT
  105                | IDENT arrayindex
  106                | expr '.' IDENT
  107                | qualnameorarray '.' IDENT
  108                | expr '.' IDENT arrayindex
  109                | qualnameorarray '.' IDENT arrayindex

  110 qnora_without_id: IDENT arrayindex
  111                 | expr '.' IDENT
  112                 | qualnameorarray '.' IDENT
  113                 | expr '.' IDENT arrayindex
  114                 | qualnameorarray '.' IDENT arrayindex

  115 expr_list: expression
  116          | expr_list ',' expression

  117 expr_list_e: /* empty */
  118            | expr_list

  119 statement: IF '(' expression ')' statement
  120          | IF '(' expression ')' statement ELSE statement
  121          | WHILE '(' expression ')' statement
  122          | FOR '(' variables_e ';' expr_e ';' expr_e ')' statement
  123          | expression ';'
  124          | type variables ';'
  125          | ';'

  126 @5: /* empty */

  127 statement: '{' @5 statements '}'
  128          | RETURN expr_e ';'

  129 statements: /* empty */
  130           | statements statement

  131 variables_e: /* empty */
  132            | type variables
  133            | variable

  134 expr_e: /* empty */
  135       | expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 51
'%' (37) 82 83
'(' (40) 13 15 17 54 55 56 58 59 60 90 91 119 120 121 122
')' (41) 13 15 17 54 55 56 58 59 60 90 91 119 120 121 122
'*' (42) 78 79
'+' (43) 53 74 75
',' (44) 20 24 40 41 43 44 99 100 116
'-' (45) 52 76 77
'.' (46) 102 103 106 107 108 109 111 112 113 114
'/' (47) 80 81
':' (58) 6
';' (59) 12 122 123 124 125 128
'<' (60) 66 67
'=' (61) 26 57
'>' (62) 70 71
'[' (91) 39 40 41 42 43 44 98 99 100
']' (93) 39 40 41 42 43 44 98 99 100
'{' (123) 4 6 13 15 17 127
'}' (125) 4 6 13 15 17 127
error (256)
IDENT (258) 4 6 13 15 17 18 25 26 33 39 40 41 55 60 61 91 101 102 103
    104 105 106 107 108 109 110 111 112 113 114
INTEGER (259) 92
REAL (260) 93
CLASS (261) 4 6
BOOL (262) 36
DOUBLE (263) 38
INT (264) 37
IS (265) 88 89
OBJECT (266) 35
IF (267) 119 120
ELSE (268) 120
WHILE (269) 121
FOR (270) 122
FALSE (271) 95
TRUE (272) 94
NEW (273) 60 61
THIS (274) 96
NUL (275) 97
PRIVATE (276) 28 30
STATIC (277) 29 30
VOID (278) 17
RETURN (279) 128
EXPRESSION (280)
IF_PREC (281)
OR (282) 86 87
AND (283) 84 85
NE (284) 64 65
EQ (285) 62 63
SE (286) 68 69
LE (287) 72 73
CAST (288)
UNARY_OP (289)
DECREMENT (290) 48 50
INCREMENT (291) 47 49


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
root (57)
    on left: 1 2, on right: 0 2
class (58)
    on left: 4 6, on right: 2
@1 (59)
    on left: 3, on right: 4
@2 (60)
    on left: 5, on right: 6
members (61)
    on left: 7 8, on right: 4 6 8
member (62)
    on left: 9 10 11, on right: 8
global (63)
    on left: 12, on right: 9
constructor (64)
    on left: 13, on right: 10
function (65)
    on left: 15 17, on right: 11
@3 (66)
    on left: 14, on right: 15
@4 (67)
    on left: 16, on right: 17
arg (68)
    on left: 18, on right: 19 20
args (69)
    on left: 19 20, on right: 20 22
args_e (70)
    on left: 21 22, on right: 13 15 17
variables (71)
    on left: 23 24, on right: 12 24 124 132
variable (72)
    on left: 25 26, on right: 23 24 133
accessmodif (73)
    on left: 27 28 29 30, on right: 12 13 15 17
type (74)
    on left: 31 32, on right: 12 15 18 88 89 124 132
noarraytype (75)
    on left: 33 34, on right: 31
basictype (76)
    on left: 35 36 37 38, on right: 34 42 43 44 90
arraytype (77)
    on left: 39 40 41 42 43 44, on right: 32
expression (78)
    on left: 45 46, on right: 26 51 52 53 57 62 63 64 65 66 67 68 69
    70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 90 91 98
    99 100 115 116 119 120 121 123 135
expr (79)
    on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
    65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85
    86 87 88 89 90 91 92 93 94 95 96 97, on right: 45 54 62 64 66 68
    70 72 74 76 78 80 82 84 86 88 102 106 108 111 113
arrayindex (80)
    on left: 98 99 100, on right: 59 61 105 108 109 110 113 114
qualifiedname (81)
    on left: 101 102 103, on right: 58 59
qualnameorarray (82)
    on left: 104 105 106 107 108 109, on right: 46 47 48 49 50 57 63
    65 67 69 71 73 75 77 79 81 83 85 87 89 103 107 109 112 114
qnora_without_id (83)
    on left: 110 111 112 113 114, on right: 56
expr_list (84)
    on left: 115 116, on right: 116 118
expr_list_e (85)
    on left: 117 118, on right: 58 59 60
statement (86)
    on left: 119 120 121 122 123 124 125 127 128, on right: 119 120
    121 122 130
@5 (87)
    on left: 126, on right: 127
statements (88)
    on left: 129 130, on right: 13 15 17 127 130
variables_e (89)
    on left: 131 132 133, on right: 122
expr_e (90)
    on left: 134 135, on right: 122 128


state 0

    0 $accept: . root $end

    $default  reduce using rule 1 (root)

    root  go to state 1


state 1

    0 $accept: root . $end
    2 root: root . class

    $end   shift, and go to state 2
    CLASS  shift, and go to state 3

    class  go to state 4


state 2

    0 $accept: root $end .

    $default  accept


state 3

    4 class: CLASS . IDENT '{' @1 members '}'
    6      | CLASS . IDENT ':' IDENT '{' @2 members '}'

    IDENT  shift, and go to state 5


state 4

    2 root: root class .

    $default  reduce using rule 2 (root)


state 5

    4 class: CLASS IDENT . '{' @1 members '}'
    6      | CLASS IDENT . ':' IDENT '{' @2 members '}'

    '{'  shift, and go to state 6
    ':'  shift, and go to state 7


state 6

    4 class: CLASS IDENT '{' . @1 members '}'

    $default  reduce using rule 3 (@1)

    @1  go to state 8


state 7

    6 class: CLASS IDENT ':' . IDENT '{' @2 members '}'

    IDENT  shift, and go to state 9


state 8

    4 class: CLASS IDENT '{' @1 . members '}'

    $default  reduce using rule 7 (members)

    members  go to state 10


state 9

    6 class: CLASS IDENT ':' IDENT . '{' @2 members '}'

    '{'  shift, and go to state 11


state 10

    4 class: CLASS IDENT '{' @1 members . '}'
    8 members: members . member

    PRIVATE  shift, and go to state 12
    STATIC   shift, and go to state 13
    '}'      shift, and go to state 14

    $default  reduce using rule 27 (accessmodif)

    member       go to state 15
    global       go to state 16
    constructor  go to state 17
    function     go to state 18
    accessmodif  go to state 19


state 11

    6 class: CLASS IDENT ':' IDENT '{' . @2 members '}'

    $default  reduce using rule 5 (@2)

    @2  go to state 20


state 12

   28 accessmodif: PRIVATE .
   30            | PRIVATE . STATIC

    STATIC  shift, and go to state 21

    $default  reduce using rule 28 (accessmodif)


state 13

   29 accessmodif: STATIC .

    $default  reduce using rule 29 (accessmodif)


state 14

    4 class: CLASS IDENT '{' @1 members '}' .

    $default  reduce using rule 4 (class)


state 15

    8 members: members member .

    $default  reduce using rule 8 (members)


state 16

    9 member: global .

    $default  reduce using rule 9 (member)


state 17

   10 member: constructor .

    $default  reduce using rule 10 (member)


state 18

   11 member: function .

    $default  reduce using rule 11 (member)


state 19

   12 global: accessmodif . type variables ';'
   13 constructor: accessmodif . IDENT '(' args_e ')' '{' statements '}'
   15 function: accessmodif . type IDENT '(' @3 args_e ')' '{' statements '}'
   17         | accessmodif . VOID IDENT '(' @4 args_e ')' '{' statements '}'

    IDENT   shift, and go to state 22
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26
    VOID    shift, and go to state 27

    type         go to state 28
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31


state 20

    6 class: CLASS IDENT ':' IDENT '{' @2 . members '}'

    $default  reduce using rule 7 (members)

    members  go to state 32


state 21

   30 accessmodif: PRIVATE STATIC .

    $default  reduce using rule 30 (accessmodif)


state 22

   13 constructor: accessmodif IDENT . '(' args_e ')' '{' statements '}'
   33 noarraytype: IDENT .
   39 arraytype: IDENT . '[' ']'
   40          | IDENT . '[' ',' ']'
   41          | IDENT . '[' ',' ',' ']'

    '('  shift, and go to state 33
    '['  shift, and go to state 34

    $default  reduce using rule 33 (noarraytype)


state 23

   36 basictype: BOOL .

    $default  reduce using rule 36 (basictype)


state 24

   38 basictype: DOUBLE .

    $default  reduce using rule 38 (basictype)


state 25

   37 basictype: INT .

    $default  reduce using rule 37 (basictype)


state 26

   35 basictype: OBJECT .

    $default  reduce using rule 35 (basictype)


state 27

   17 function: accessmodif VOID . IDENT '(' @4 args_e ')' '{' statements '}'

    IDENT  shift, and go to state 35


state 28

   12 global: accessmodif type . variables ';'
   15 function: accessmodif type . IDENT '(' @3 args_e ')' '{' statements '}'

    IDENT  shift, and go to state 36

    variables  go to state 37
    variable   go to state 38


state 29

   31 type: noarraytype .

    $default  reduce using rule 31 (type)


state 30

   34 noarraytype: basictype .
   42 arraytype: basictype . '[' ']'
   43          | basictype . '[' ',' ']'
   44          | basictype . '[' ',' ',' ']'

    '['  shift, and go to state 39

    $default  reduce using rule 34 (noarraytype)


state 31

   32 type: arraytype .

    $default  reduce using rule 32 (type)


state 32

    6 class: CLASS IDENT ':' IDENT '{' @2 members . '}'
    8 members: members . member

    PRIVATE  shift, and go to state 12
    STATIC   shift, and go to state 13
    '}'      shift, and go to state 40

    $default  reduce using rule 27 (accessmodif)

    member       go to state 15
    global       go to state 16
    constructor  go to state 17
    function     go to state 18
    accessmodif  go to state 19


state 33

   13 constructor: accessmodif IDENT '(' . args_e ')' '{' statements '}'

    IDENT   shift, and go to state 41
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26

    $default  reduce using rule 21 (args_e)

    arg          go to state 42
    args         go to state 43
    args_e       go to state 44
    type         go to state 45
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31


state 34

   39 arraytype: IDENT '[' . ']'
   40          | IDENT '[' . ',' ']'
   41          | IDENT '[' . ',' ',' ']'

    ','  shift, and go to state 46
    ']'  shift, and go to state 47


state 35

   17 function: accessmodif VOID IDENT . '(' @4 args_e ')' '{' statements '}'

    '('  shift, and go to state 48


state 36

   15 function: accessmodif type IDENT . '(' @3 args_e ')' '{' statements '}'
   25 variable: IDENT .
   26         | IDENT . '=' expression

    '='  shift, and go to state 49
    '('  shift, and go to state 50

    $default  reduce using rule 25 (variable)


state 37

   12 global: accessmodif type variables . ';'
   24 variables: variables . ',' variable

    ';'  shift, and go to state 51
    ','  shift, and go to state 52


state 38

   23 variables: variable .

    $default  reduce using rule 23 (variables)


state 39

   42 arraytype: basictype '[' . ']'
   43          | basictype '[' . ',' ']'
   44          | basictype '[' . ',' ',' ']'

    ','  shift, and go to state 53
    ']'  shift, and go to state 54


state 40

    6 class: CLASS IDENT ':' IDENT '{' @2 members '}' .

    $default  reduce using rule 6 (class)


state 41

   33 noarraytype: IDENT .
   39 arraytype: IDENT . '[' ']'
   40          | IDENT . '[' ',' ']'
   41          | IDENT . '[' ',' ',' ']'

    '['  shift, and go to state 34

    $default  reduce using rule 33 (noarraytype)


state 42

   19 args: arg .

    $default  reduce using rule 19 (args)


state 43

   20 args: args . ',' arg
   22 args_e: args .

    ','  shift, and go to state 55

    $default  reduce using rule 22 (args_e)


state 44

   13 constructor: accessmodif IDENT '(' args_e . ')' '{' statements '}'

    ')'  shift, and go to state 56


state 45

   18 arg: type . IDENT

    IDENT  shift, and go to state 57


state 46

   40 arraytype: IDENT '[' ',' . ']'
   41          | IDENT '[' ',' . ',' ']'

    ','  shift, and go to state 58
    ']'  shift, and go to state 59


state 47

   39 arraytype: IDENT '[' ']' .

    $default  reduce using rule 39 (arraytype)


state 48

   17 function: accessmodif VOID IDENT '(' . @4 args_e ')' '{' statements '}'

    $default  reduce using rule 16 (@4)

    @4  go to state 60


state 49

   26 variable: IDENT '=' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 75
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 50

   15 function: accessmodif type IDENT '(' . @3 args_e ')' '{' statements '}'

    $default  reduce using rule 14 (@3)

    @3  go to state 79


state 51

   12 global: accessmodif type variables ';' .

    $default  reduce using rule 12 (global)


state 52

   24 variables: variables ',' . variable

    IDENT  shift, and go to state 80

    variable  go to state 81


state 53

   43 arraytype: basictype '[' ',' . ']'
   44          | basictype '[' ',' . ',' ']'

    ','  shift, and go to state 82
    ']'  shift, and go to state 83


state 54

   42 arraytype: basictype '[' ']' .

    $default  reduce using rule 42 (arraytype)


state 55

   20 args: args ',' . arg

    IDENT   shift, and go to state 41
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26

    arg          go to state 84
    type         go to state 45
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31


state 56

   13 constructor: accessmodif IDENT '(' args_e ')' . '{' statements '}'

    '{'  shift, and go to state 85


state 57

   18 arg: type IDENT .

    $default  reduce using rule 18 (arg)


state 58

   41 arraytype: IDENT '[' ',' ',' . ']'

    ']'  shift, and go to state 86


state 59

   40 arraytype: IDENT '[' ',' ']' .

    $default  reduce using rule 40 (arraytype)


state 60

   17 function: accessmodif VOID IDENT '(' @4 . args_e ')' '{' statements '}'

    IDENT   shift, and go to state 41
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26

    $default  reduce using rule 21 (args_e)

    arg          go to state 42
    args         go to state 43
    args_e       go to state 87
    type         go to state 45
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31


state 61

  101 qualifiedname: IDENT .
  104 qualnameorarray: IDENT .
  105                | IDENT . arrayindex

    '['  shift, and go to state 88

    '('       reduce using rule 101 (qualifiedname)
    $default  reduce using rule 104 (qualnameorarray)

    arrayindex  go to state 89


state 62

   92 expr: INTEGER .

    $default  reduce using rule 92 (expr)


state 63

   93 expr: REAL .

    $default  reduce using rule 93 (expr)


state 64

   95 expr: FALSE .

    $default  reduce using rule 95 (expr)


state 65

   94 expr: TRUE .

    $default  reduce using rule 94 (expr)


state 66

   60 expr: NEW . IDENT '(' expr_list_e ')'
   61     | NEW . IDENT arrayindex

    IDENT  shift, and go to state 90


state 67

   96 expr: THIS .

    $default  reduce using rule 96 (expr)


state 68

   97 expr: NUL .

    $default  reduce using rule 97 (expr)


state 69

   53 expr: '+' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 91
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 70

   52 expr: '-' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 92
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 71

   51 expr: '!' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 93
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 72

   48 expr: DECREMENT . qualnameorarray

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expr             go to state 94
    qualifiedname    go to state 77
    qualnameorarray  go to state 95


state 73

   47 expr: INCREMENT . qualnameorarray

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expr             go to state 94
    qualifiedname    go to state 77
    qualnameorarray  go to state 96


state 74

   54 expr: '(' . expr ')'
   55     | '(' . IDENT ')'
   56     | '(' . qnora_without_id ')'
   90     | '(' . basictype ')' expression
   91     | '(' . IDENT ')' expression

    IDENT      shift, and go to state 97
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    basictype         go to state 98
    expr              go to state 99
    qualifiedname     go to state 77
    qualnameorarray   go to state 100
    qnora_without_id  go to state 101


state 75

   26 variable: IDENT '=' expression .

    $default  reduce using rule 26 (variable)


state 76

   45 expression: expr .
   62 expr: expr . EQ expression
   64     | expr . NE expression
   66     | expr . '<' expression
   68     | expr . SE expression
   70     | expr . '>' expression
   72     | expr . LE expression
   74     | expr . '+' expression
   76     | expr . '-' expression
   78     | expr . '*' expression
   80     | expr . '/' expression
   82     | expr . '%' expression
   84     | expr . AND expression
   86     | expr . OR expression
   88     | expr . IS type
  102 qualifiedname: expr . '.' IDENT
  106 qualnameorarray: expr . '.' IDENT
  108                | expr . '.' IDENT arrayindex

    IS   shift, and go to state 102
    OR   shift, and go to state 103
    AND  shift, and go to state 104
    NE   shift, and go to state 105
    EQ   shift, and go to state 106
    '>'  shift, and go to state 107
    '<'  shift, and go to state 108
    SE   shift, and go to state 109
    LE   shift, and go to state 110
    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115
    '.'  shift, and go to state 116

    $default  reduce using rule 45 (expression)


state 77

   58 expr: qualifiedname . '(' expr_list_e ')'
   59     | qualifiedname . '(' expr_list_e ')' arrayindex

    '('  shift, and go to state 117


state 78

   46 expression: qualnameorarray .
   49 expr: qualnameorarray . INCREMENT
   50     | qualnameorarray . DECREMENT
   57     | qualnameorarray . '=' expression
   63     | qualnameorarray . EQ expression
   65     | qualnameorarray . NE expression
   67     | qualnameorarray . '<' expression
   69     | qualnameorarray . SE expression
   71     | qualnameorarray . '>' expression
   73     | qualnameorarray . LE expression
   75     | qualnameorarray . '+' expression
   77     | qualnameorarray . '-' expression
   79     | qualnameorarray . '*' expression
   81     | qualnameorarray . '/' expression
   83     | qualnameorarray . '%' expression
   85     | qualnameorarray . AND expression
   87     | qualnameorarray . OR expression
   89     | qualnameorarray . IS type
  103 qualifiedname: qualnameorarray . '.' IDENT
  107 qualnameorarray: qualnameorarray . '.' IDENT
  109                | qualnameorarray . '.' IDENT arrayindex

    IS         shift, and go to state 118
    '='        shift, and go to state 119
    OR         shift, and go to state 120
    AND        shift, and go to state 121
    NE         shift, and go to state 122
    EQ         shift, and go to state 123
    '>'        shift, and go to state 124
    '<'        shift, and go to state 125
    SE         shift, and go to state 126
    LE         shift, and go to state 127
    '+'        shift, and go to state 128
    '-'        shift, and go to state 129
    '*'        shift, and go to state 130
    '/'        shift, and go to state 131
    '%'        shift, and go to state 132
    DECREMENT  shift, and go to state 133
    INCREMENT  shift, and go to state 134
    '.'        shift, and go to state 135

    $default  reduce using rule 46 (expression)


state 79

   15 function: accessmodif type IDENT '(' @3 . args_e ')' '{' statements '}'

    IDENT   shift, and go to state 41
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26

    $default  reduce using rule 21 (args_e)

    arg          go to state 42
    args         go to state 43
    args_e       go to state 136
    type         go to state 45
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31


state 80

   25 variable: IDENT .
   26         | IDENT . '=' expression

    '='  shift, and go to state 49

    $default  reduce using rule 25 (variable)


state 81

   24 variables: variables ',' variable .

    $default  reduce using rule 24 (variables)


state 82

   44 arraytype: basictype '[' ',' ',' . ']'

    ']'  shift, and go to state 137


state 83

   43 arraytype: basictype '[' ',' ']' .

    $default  reduce using rule 43 (arraytype)


state 84

   20 args: args ',' arg .

    $default  reduce using rule 20 (args)


state 85

   13 constructor: accessmodif IDENT '(' args_e ')' '{' . statements '}'

    $default  reduce using rule 129 (statements)

    statements  go to state 138


state 86

   41 arraytype: IDENT '[' ',' ',' ']' .

    $default  reduce using rule 41 (arraytype)


state 87

   17 function: accessmodif VOID IDENT '(' @4 args_e . ')' '{' statements '}'

    ')'  shift, and go to state 139


state 88

   98 arrayindex: '[' . expression ']'
   99           | '[' . expression ',' expression ']'
  100           | '[' . expression ',' expression ',' expression ']'

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 140
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 89

  105 qualnameorarray: IDENT arrayindex .

    $default  reduce using rule 105 (qualnameorarray)


state 90

   60 expr: NEW IDENT . '(' expr_list_e ')'
   61     | NEW IDENT . arrayindex

    '('  shift, and go to state 141
    '['  shift, and go to state 88

    arrayindex  go to state 142


state 91

   53 expr: '+' expression .

    $default  reduce using rule 53 (expr)


state 92

   52 expr: '-' expression .

    $default  reduce using rule 52 (expr)


state 93

   51 expr: '!' expression .

    $default  reduce using rule 51 (expr)


state 94

   62 expr: expr . EQ expression
   64     | expr . NE expression
   66     | expr . '<' expression
   68     | expr . SE expression
   70     | expr . '>' expression
   72     | expr . LE expression
   74     | expr . '+' expression
   76     | expr . '-' expression
   78     | expr . '*' expression
   80     | expr . '/' expression
   82     | expr . '%' expression
   84     | expr . AND expression
   86     | expr . OR expression
   88     | expr . IS type
  102 qualifiedname: expr . '.' IDENT
  106 qualnameorarray: expr . '.' IDENT
  108                | expr . '.' IDENT arrayindex

    IS   shift, and go to state 102
    OR   shift, and go to state 103
    AND  shift, and go to state 104
    NE   shift, and go to state 105
    EQ   shift, and go to state 106
    '>'  shift, and go to state 107
    '<'  shift, and go to state 108
    SE   shift, and go to state 109
    LE   shift, and go to state 110
    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115
    '.'  shift, and go to state 116


state 95

   48 expr: DECREMENT qualnameorarray .
   49     | qualnameorarray . INCREMENT
   50     | qualnameorarray . DECREMENT
   57     | qualnameorarray . '=' expression
   63     | qualnameorarray . EQ expression
   65     | qualnameorarray . NE expression
   67     | qualnameorarray . '<' expression
   69     | qualnameorarray . SE expression
   71     | qualnameorarray . '>' expression
   73     | qualnameorarray . LE expression
   75     | qualnameorarray . '+' expression
   77     | qualnameorarray . '-' expression
   79     | qualnameorarray . '*' expression
   81     | qualnameorarray . '/' expression
   83     | qualnameorarray . '%' expression
   85     | qualnameorarray . AND expression
   87     | qualnameorarray . OR expression
   89     | qualnameorarray . IS type
  103 qualifiedname: qualnameorarray . '.' IDENT
  107 qualnameorarray: qualnameorarray . '.' IDENT
  109                | qualnameorarray . '.' IDENT arrayindex

    '='        shift, and go to state 119
    DECREMENT  shift, and go to state 133
    INCREMENT  shift, and go to state 134
    '.'        shift, and go to state 135

    $default  reduce using rule 48 (expr)


state 96

   47 expr: INCREMENT qualnameorarray .
   49     | qualnameorarray . INCREMENT
   50     | qualnameorarray . DECREMENT
   57     | qualnameorarray . '=' expression
   63     | qualnameorarray . EQ expression
   65     | qualnameorarray . NE expression
   67     | qualnameorarray . '<' expression
   69     | qualnameorarray . SE expression
   71     | qualnameorarray . '>' expression
   73     | qualnameorarray . LE expression
   75     | qualnameorarray . '+' expression
   77     | qualnameorarray . '-' expression
   79     | qualnameorarray . '*' expression
   81     | qualnameorarray . '/' expression
   83     | qualnameorarray . '%' expression
   85     | qualnameorarray . AND expression
   87     | qualnameorarray . OR expression
   89     | qualnameorarray . IS type
  103 qualifiedname: qualnameorarray . '.' IDENT
  107 qualnameorarray: qualnameorarray . '.' IDENT
  109                | qualnameorarray . '.' IDENT arrayindex

    '='        shift, and go to state 119
    DECREMENT  shift, and go to state 133
    INCREMENT  shift, and go to state 134
    '.'        shift, and go to state 135

    $default  reduce using rule 47 (expr)


state 97

   55 expr: '(' IDENT . ')'
   91     | '(' IDENT . ')' expression
  101 qualifiedname: IDENT .
  104 qualnameorarray: IDENT .
  105                | IDENT . arrayindex
  110 qnora_without_id: IDENT . arrayindex

    ')'  shift, and go to state 143
    '['  shift, and go to state 88

    '('       reduce using rule 101 (qualifiedname)
    $default  reduce using rule 104 (qualnameorarray)

    arrayindex  go to state 144


state 98

   90 expr: '(' basictype . ')' expression

    ')'  shift, and go to state 145


state 99

   54 expr: '(' expr . ')'
   62     | expr . EQ expression
   64     | expr . NE expression
   66     | expr . '<' expression
   68     | expr . SE expression
   70     | expr . '>' expression
   72     | expr . LE expression
   74     | expr . '+' expression
   76     | expr . '-' expression
   78     | expr . '*' expression
   80     | expr . '/' expression
   82     | expr . '%' expression
   84     | expr . AND expression
   86     | expr . OR expression
   88     | expr . IS type
  102 qualifiedname: expr . '.' IDENT
  106 qualnameorarray: expr . '.' IDENT
  108                | expr . '.' IDENT arrayindex
  111 qnora_without_id: expr . '.' IDENT
  113                 | expr . '.' IDENT arrayindex

    IS   shift, and go to state 102
    OR   shift, and go to state 103
    AND  shift, and go to state 104
    NE   shift, and go to state 105
    EQ   shift, and go to state 106
    '>'  shift, and go to state 107
    '<'  shift, and go to state 108
    SE   shift, and go to state 109
    LE   shift, and go to state 110
    '+'  shift, and go to state 111
    '-'  shift, and go to state 112
    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '%'  shift, and go to state 115
    '.'  shift, and go to state 146
    ')'  shift, and go to state 147


state 100

   49 expr: qualnameorarray . INCREMENT
   50     | qualnameorarray . DECREMENT
   57     | qualnameorarray . '=' expression
   63     | qualnameorarray . EQ expression
   65     | qualnameorarray . NE expression
   67     | qualnameorarray . '<' expression
   69     | qualnameorarray . SE expression
   71     | qualnameorarray . '>' expression
   73     | qualnameorarray . LE expression
   75     | qualnameorarray . '+' expression
   77     | qualnameorarray . '-' expression
   79     | qualnameorarray . '*' expression
   81     | qualnameorarray . '/' expression
   83     | qualnameorarray . '%' expression
   85     | qualnameorarray . AND expression
   87     | qualnameorarray . OR expression
   89     | qualnameorarray . IS type
  103 qualifiedname: qualnameorarray . '.' IDENT
  107 qualnameorarray: qualnameorarray . '.' IDENT
  109                | qualnameorarray . '.' IDENT arrayindex
  112 qnora_without_id: qualnameorarray . '.' IDENT
  114                 | qualnameorarray . '.' IDENT arrayindex

    IS         shift, and go to state 118
    '='        shift, and go to state 119
    OR         shift, and go to state 120
    AND        shift, and go to state 121
    NE         shift, and go to state 122
    EQ         shift, and go to state 123
    '>'        shift, and go to state 124
    '<'        shift, and go to state 125
    SE         shift, and go to state 126
    LE         shift, and go to state 127
    '+'        shift, and go to state 128
    '-'        shift, and go to state 129
    '*'        shift, and go to state 130
    '/'        shift, and go to state 131
    '%'        shift, and go to state 132
    DECREMENT  shift, and go to state 133
    INCREMENT  shift, and go to state 134
    '.'        shift, and go to state 148


state 101

   56 expr: '(' qnora_without_id . ')'

    ')'  shift, and go to state 149


state 102

   88 expr: expr IS . type

    IDENT   shift, and go to state 41
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26

    type         go to state 150
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31


state 103

   86 expr: expr OR . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 151
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 104

   84 expr: expr AND . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 152
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 105

   64 expr: expr NE . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 153
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 106

   62 expr: expr EQ . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 154
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 107

   70 expr: expr '>' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 155
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 108

   66 expr: expr '<' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 156
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 109

   68 expr: expr SE . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 157
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 110

   72 expr: expr LE . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 158
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 111

   74 expr: expr '+' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 159
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 112

   76 expr: expr '-' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 160
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 113

   78 expr: expr '*' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 161
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 114

   80 expr: expr '/' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 162
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 115

   82 expr: expr '%' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 163
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 116

  102 qualifiedname: expr '.' . IDENT
  106 qualnameorarray: expr '.' . IDENT
  108                | expr '.' . IDENT arrayindex

    IDENT  shift, and go to state 164


state 117

   58 expr: qualifiedname '(' . expr_list_e ')'
   59     | qualifiedname '(' . expr_list_e ')' arrayindex

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    $default  reduce using rule 117 (expr_list_e)

    expression       go to state 165
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78
    expr_list        go to state 166
    expr_list_e      go to state 167


state 118

   89 expr: qualnameorarray IS . type

    IDENT   shift, and go to state 41
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26

    type         go to state 168
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31


state 119

   57 expr: qualnameorarray '=' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 169
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 120

   87 expr: qualnameorarray OR . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 170
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 121

   85 expr: qualnameorarray AND . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 171
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 122

   65 expr: qualnameorarray NE . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 172
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 123

   63 expr: qualnameorarray EQ . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 173
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 124

   71 expr: qualnameorarray '>' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 174
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 125

   67 expr: qualnameorarray '<' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 175
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 126

   69 expr: qualnameorarray SE . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 176
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 127

   73 expr: qualnameorarray LE . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 177
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 128

   75 expr: qualnameorarray '+' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 178
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 129

   77 expr: qualnameorarray '-' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 179
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 130

   79 expr: qualnameorarray '*' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 180
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 131

   81 expr: qualnameorarray '/' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 181
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 132

   83 expr: qualnameorarray '%' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 182
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 133

   50 expr: qualnameorarray DECREMENT .

    $default  reduce using rule 50 (expr)


state 134

   49 expr: qualnameorarray INCREMENT .

    $default  reduce using rule 49 (expr)


state 135

  103 qualifiedname: qualnameorarray '.' . IDENT
  107 qualnameorarray: qualnameorarray '.' . IDENT
  109                | qualnameorarray '.' . IDENT arrayindex

    IDENT  shift, and go to state 183


state 136

   15 function: accessmodif type IDENT '(' @3 args_e . ')' '{' statements '}'

    ')'  shift, and go to state 184


state 137

   44 arraytype: basictype '[' ',' ',' ']' .

    $default  reduce using rule 44 (arraytype)


state 138

   13 constructor: accessmodif IDENT '(' args_e ')' '{' statements . '}'
  130 statements: statements . statement

    IDENT      shift, and go to state 185
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 186
    WHILE      shift, and go to state 187
    FOR        shift, and go to state 188
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    RETURN     shift, and go to state 189
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74
    '{'        shift, and go to state 190
    '}'        shift, and go to state 191
    ';'        shift, and go to state 192

    type             go to state 193
    noarraytype      go to state 29
    basictype        go to state 30
    arraytype        go to state 31
    expression       go to state 194
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78
    statement        go to state 195


state 139

   17 function: accessmodif VOID IDENT '(' @4 args_e ')' . '{' statements '}'

    '{'  shift, and go to state 196


state 140

   98 arrayindex: '[' expression . ']'
   99           | '[' expression . ',' expression ']'
  100           | '[' expression . ',' expression ',' expression ']'

    ','  shift, and go to state 197
    ']'  shift, and go to state 198


state 141

   60 expr: NEW IDENT '(' . expr_list_e ')'

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    $default  reduce using rule 117 (expr_list_e)

    expression       go to state 165
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78
    expr_list        go to state 166
    expr_list_e      go to state 199


state 142

   61 expr: NEW IDENT arrayindex .

    $default  reduce using rule 61 (expr)


state 143

   55 expr: '(' IDENT ')' .
   91     | '(' IDENT ')' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    $default  reduce using rule 55 (expr)

    expression       go to state 200
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 144

  105 qualnameorarray: IDENT arrayindex .
  110 qnora_without_id: IDENT arrayindex .

    ')'       reduce using rule 110 (qnora_without_id)
    $default  reduce using rule 105 (qualnameorarray)


state 145

   90 expr: '(' basictype ')' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 201
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 146

  102 qualifiedname: expr '.' . IDENT
  106 qualnameorarray: expr '.' . IDENT
  108                | expr '.' . IDENT arrayindex
  111 qnora_without_id: expr '.' . IDENT
  113                 | expr '.' . IDENT arrayindex

    IDENT  shift, and go to state 202


state 147

   54 expr: '(' expr ')' .

    $default  reduce using rule 54 (expr)


state 148

  103 qualifiedname: qualnameorarray '.' . IDENT
  107 qualnameorarray: qualnameorarray '.' . IDENT
  109                | qualnameorarray '.' . IDENT arrayindex
  112 qnora_without_id: qualnameorarray '.' . IDENT
  114                 | qualnameorarray '.' . IDENT arrayindex

    IDENT  shift, and go to state 203


state 149

   56 expr: '(' qnora_without_id ')' .

    $default  reduce using rule 56 (expr)


state 150

   88 expr: expr IS type .

    $default  reduce using rule 88 (expr)


state 151

   86 expr: expr OR expression .

    $default  reduce using rule 86 (expr)


state 152

   84 expr: expr AND expression .

    $default  reduce using rule 84 (expr)


state 153

   64 expr: expr NE expression .

    $default  reduce using rule 64 (expr)


state 154

   62 expr: expr EQ expression .

    $default  reduce using rule 62 (expr)


state 155

   70 expr: expr '>' expression .

    $default  reduce using rule 70 (expr)


state 156

   66 expr: expr '<' expression .

    $default  reduce using rule 66 (expr)


state 157

   68 expr: expr SE expression .

    $default  reduce using rule 68 (expr)


state 158

   72 expr: expr LE expression .

    $default  reduce using rule 72 (expr)


state 159

   74 expr: expr '+' expression .

    $default  reduce using rule 74 (expr)


state 160

   76 expr: expr '-' expression .

    $default  reduce using rule 76 (expr)


state 161

   78 expr: expr '*' expression .

    $default  reduce using rule 78 (expr)


state 162

   80 expr: expr '/' expression .

    $default  reduce using rule 80 (expr)


state 163

   82 expr: expr '%' expression .

    $default  reduce using rule 82 (expr)


state 164

  102 qualifiedname: expr '.' IDENT .
  106 qualnameorarray: expr '.' IDENT .
  108                | expr '.' IDENT . arrayindex

    '['  shift, and go to state 88

    '('       reduce using rule 102 (qualifiedname)
    $default  reduce using rule 106 (qualnameorarray)

    arrayindex  go to state 204


state 165

  115 expr_list: expression .

    $default  reduce using rule 115 (expr_list)


state 166

  116 expr_list: expr_list . ',' expression
  118 expr_list_e: expr_list .

    ','  shift, and go to state 205

    $default  reduce using rule 118 (expr_list_e)


state 167

   58 expr: qualifiedname '(' expr_list_e . ')'
   59     | qualifiedname '(' expr_list_e . ')' arrayindex

    ')'  shift, and go to state 206


state 168

   89 expr: qualnameorarray IS type .

    $default  reduce using rule 89 (expr)


state 169

   57 expr: qualnameorarray '=' expression .

    $default  reduce using rule 57 (expr)


state 170

   87 expr: qualnameorarray OR expression .

    $default  reduce using rule 87 (expr)


state 171

   85 expr: qualnameorarray AND expression .

    $default  reduce using rule 85 (expr)


state 172

   65 expr: qualnameorarray NE expression .

    $default  reduce using rule 65 (expr)


state 173

   63 expr: qualnameorarray EQ expression .

    $default  reduce using rule 63 (expr)


state 174

   71 expr: qualnameorarray '>' expression .

    $default  reduce using rule 71 (expr)


state 175

   67 expr: qualnameorarray '<' expression .

    $default  reduce using rule 67 (expr)


state 176

   69 expr: qualnameorarray SE expression .

    $default  reduce using rule 69 (expr)


state 177

   73 expr: qualnameorarray LE expression .

    $default  reduce using rule 73 (expr)


state 178

   75 expr: qualnameorarray '+' expression .

    $default  reduce using rule 75 (expr)


state 179

   77 expr: qualnameorarray '-' expression .

    $default  reduce using rule 77 (expr)


state 180

   79 expr: qualnameorarray '*' expression .

    $default  reduce using rule 79 (expr)


state 181

   81 expr: qualnameorarray '/' expression .

    $default  reduce using rule 81 (expr)


state 182

   83 expr: qualnameorarray '%' expression .

    $default  reduce using rule 83 (expr)


state 183

  103 qualifiedname: qualnameorarray '.' IDENT .
  107 qualnameorarray: qualnameorarray '.' IDENT .
  109                | qualnameorarray '.' IDENT . arrayindex

    '['  shift, and go to state 88

    '('       reduce using rule 103 (qualifiedname)
    $default  reduce using rule 107 (qualnameorarray)

    arrayindex  go to state 207


state 184

   15 function: accessmodif type IDENT '(' @3 args_e ')' . '{' statements '}'

    '{'  shift, and go to state 208


state 185

   33 noarraytype: IDENT .
   39 arraytype: IDENT . '[' ']'
   40          | IDENT . '[' ',' ']'
   41          | IDENT . '[' ',' ',' ']'
  101 qualifiedname: IDENT .
  104 qualnameorarray: IDENT .
  105                | IDENT . arrayindex

    '['  shift, and go to state 209

    IDENT     reduce using rule 33 (noarraytype)
    '('       reduce using rule 101 (qualifiedname)
    $default  reduce using rule 104 (qualnameorarray)

    arrayindex  go to state 89


state 186

  119 statement: IF . '(' expression ')' statement
  120          | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 210


state 187

  121 statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 211


state 188

  122 statement: FOR . '(' variables_e ';' expr_e ';' expr_e ')' statement

    '('  shift, and go to state 212


state 189

  128 statement: RETURN . expr_e ';'

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    $default  reduce using rule 134 (expr_e)

    expression       go to state 213
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78
    expr_e           go to state 214


state 190

  127 statement: '{' . @5 statements '}'

    $default  reduce using rule 126 (@5)

    @5  go to state 215


state 191

   13 constructor: accessmodif IDENT '(' args_e ')' '{' statements '}' .

    $default  reduce using rule 13 (constructor)


state 192

  125 statement: ';' .

    $default  reduce using rule 125 (statement)


state 193

  124 statement: type . variables ';'

    IDENT  shift, and go to state 80

    variables  go to state 216
    variable   go to state 38


state 194

  123 statement: expression . ';'

    ';'  shift, and go to state 217


state 195

  130 statements: statements statement .

    $default  reduce using rule 130 (statements)


state 196

   17 function: accessmodif VOID IDENT '(' @4 args_e ')' '{' . statements '}'

    $default  reduce using rule 129 (statements)

    statements  go to state 218


state 197

   99 arrayindex: '[' expression ',' . expression ']'
  100           | '[' expression ',' . expression ',' expression ']'

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 219
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 198

   98 arrayindex: '[' expression ']' .

    $default  reduce using rule 98 (arrayindex)


state 199

   60 expr: NEW IDENT '(' expr_list_e . ')'

    ')'  shift, and go to state 220


state 200

   91 expr: '(' IDENT ')' expression .

    $default  reduce using rule 91 (expr)


state 201

   90 expr: '(' basictype ')' expression .

    $default  reduce using rule 90 (expr)


state 202

  102 qualifiedname: expr '.' IDENT .
  106 qualnameorarray: expr '.' IDENT .
  108                | expr '.' IDENT . arrayindex
  111 qnora_without_id: expr '.' IDENT .
  113                 | expr '.' IDENT . arrayindex

    '['  shift, and go to state 88

    '('       reduce using rule 102 (qualifiedname)
    ')'       reduce using rule 111 (qnora_without_id)
    $default  reduce using rule 106 (qualnameorarray)

    arrayindex  go to state 221


state 203

  103 qualifiedname: qualnameorarray '.' IDENT .
  107 qualnameorarray: qualnameorarray '.' IDENT .
  109                | qualnameorarray '.' IDENT . arrayindex
  112 qnora_without_id: qualnameorarray '.' IDENT .
  114                 | qualnameorarray '.' IDENT . arrayindex

    '['  shift, and go to state 88

    '('       reduce using rule 103 (qualifiedname)
    ')'       reduce using rule 112 (qnora_without_id)
    $default  reduce using rule 107 (qualnameorarray)

    arrayindex  go to state 222


state 204

  108 qualnameorarray: expr '.' IDENT arrayindex .

    $default  reduce using rule 108 (qualnameorarray)


state 205

  116 expr_list: expr_list ',' . expression

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 223
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 206

   58 expr: qualifiedname '(' expr_list_e ')' .
   59     | qualifiedname '(' expr_list_e ')' . arrayindex

    '['  shift, and go to state 88

    $default  reduce using rule 58 (expr)

    arrayindex  go to state 224


state 207

  109 qualnameorarray: qualnameorarray '.' IDENT arrayindex .

    $default  reduce using rule 109 (qualnameorarray)


state 208

   15 function: accessmodif type IDENT '(' @3 args_e ')' '{' . statements '}'

    $default  reduce using rule 129 (statements)

    statements  go to state 225


state 209

   39 arraytype: IDENT '[' . ']'
   40          | IDENT '[' . ',' ']'
   41          | IDENT '[' . ',' ',' ']'
   98 arrayindex: '[' . expression ']'
   99           | '[' . expression ',' expression ']'
  100           | '[' . expression ',' expression ',' expression ']'

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74
    ','        shift, and go to state 46
    ']'        shift, and go to state 47

    expression       go to state 140
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 210

  119 statement: IF '(' . expression ')' statement
  120          | IF '(' . expression ')' statement ELSE statement

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 226
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 211

  121 statement: WHILE '(' . expression ')' statement

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 227
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 212

  122 statement: FOR '(' . variables_e ';' expr_e ';' expr_e ')' statement

    IDENT   shift, and go to state 228
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26

    $default  reduce using rule 131 (variables_e)

    variable     go to state 229
    type         go to state 230
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31
    variables_e  go to state 231


state 213

  135 expr_e: expression .

    $default  reduce using rule 135 (expr_e)


state 214

  128 statement: RETURN expr_e . ';'

    ';'  shift, and go to state 232


state 215

  127 statement: '{' @5 . statements '}'

    $default  reduce using rule 129 (statements)

    statements  go to state 233


state 216

   24 variables: variables . ',' variable
  124 statement: type variables . ';'

    ';'  shift, and go to state 234
    ','  shift, and go to state 52


state 217

  123 statement: expression ';' .

    $default  reduce using rule 123 (statement)


state 218

   17 function: accessmodif VOID IDENT '(' @4 args_e ')' '{' statements . '}'
  130 statements: statements . statement

    IDENT      shift, and go to state 185
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 186
    WHILE      shift, and go to state 187
    FOR        shift, and go to state 188
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    RETURN     shift, and go to state 189
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74
    '{'        shift, and go to state 190
    '}'        shift, and go to state 235
    ';'        shift, and go to state 192

    type             go to state 193
    noarraytype      go to state 29
    basictype        go to state 30
    arraytype        go to state 31
    expression       go to state 194
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78
    statement        go to state 195


state 219

   99 arrayindex: '[' expression ',' expression . ']'
  100           | '[' expression ',' expression . ',' expression ']'

    ','  shift, and go to state 236
    ']'  shift, and go to state 237


state 220

   60 expr: NEW IDENT '(' expr_list_e ')' .

    $default  reduce using rule 60 (expr)


state 221

  108 qualnameorarray: expr '.' IDENT arrayindex .
  113 qnora_without_id: expr '.' IDENT arrayindex .

    ')'       reduce using rule 113 (qnora_without_id)
    $default  reduce using rule 108 (qualnameorarray)


state 222

  109 qualnameorarray: qualnameorarray '.' IDENT arrayindex .
  114 qnora_without_id: qualnameorarray '.' IDENT arrayindex .

    ')'       reduce using rule 114 (qnora_without_id)
    $default  reduce using rule 109 (qualnameorarray)


state 223

  116 expr_list: expr_list ',' expression .

    $default  reduce using rule 116 (expr_list)


state 224

   59 expr: qualifiedname '(' expr_list_e ')' arrayindex .

    $default  reduce using rule 59 (expr)


state 225

   15 function: accessmodif type IDENT '(' @3 args_e ')' '{' statements . '}'
  130 statements: statements . statement

    IDENT      shift, and go to state 185
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 186
    WHILE      shift, and go to state 187
    FOR        shift, and go to state 188
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    RETURN     shift, and go to state 189
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74
    '{'        shift, and go to state 190
    '}'        shift, and go to state 238
    ';'        shift, and go to state 192

    type             go to state 193
    noarraytype      go to state 29
    basictype        go to state 30
    arraytype        go to state 31
    expression       go to state 194
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78
    statement        go to state 195


state 226

  119 statement: IF '(' expression . ')' statement
  120          | IF '(' expression . ')' statement ELSE statement

    ')'  shift, and go to state 239


state 227

  121 statement: WHILE '(' expression . ')' statement

    ')'  shift, and go to state 240


state 228

   25 variable: IDENT .
   26         | IDENT . '=' expression
   33 noarraytype: IDENT .
   39 arraytype: IDENT . '[' ']'
   40          | IDENT . '[' ',' ']'
   41          | IDENT . '[' ',' ',' ']'

    '='  shift, and go to state 49
    '['  shift, and go to state 34

    IDENT     reduce using rule 33 (noarraytype)
    $default  reduce using rule 25 (variable)


state 229

  133 variables_e: variable .

    $default  reduce using rule 133 (variables_e)


state 230

  132 variables_e: type . variables

    IDENT  shift, and go to state 80

    variables  go to state 241
    variable   go to state 38


state 231

  122 statement: FOR '(' variables_e . ';' expr_e ';' expr_e ')' statement

    ';'  shift, and go to state 242


state 232

  128 statement: RETURN expr_e ';' .

    $default  reduce using rule 128 (statement)


state 233

  127 statement: '{' @5 statements . '}'
  130 statements: statements . statement

    IDENT      shift, and go to state 185
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 186
    WHILE      shift, and go to state 187
    FOR        shift, and go to state 188
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    RETURN     shift, and go to state 189
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74
    '{'        shift, and go to state 190
    '}'        shift, and go to state 243
    ';'        shift, and go to state 192

    type             go to state 193
    noarraytype      go to state 29
    basictype        go to state 30
    arraytype        go to state 31
    expression       go to state 194
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78
    statement        go to state 195


state 234

  124 statement: type variables ';' .

    $default  reduce using rule 124 (statement)


state 235

   17 function: accessmodif VOID IDENT '(' @4 args_e ')' '{' statements '}' .

    $default  reduce using rule 17 (function)


state 236

  100 arrayindex: '[' expression ',' expression ',' . expression ']'

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    expression       go to state 244
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78


state 237

   99 arrayindex: '[' expression ',' expression ']' .

    $default  reduce using rule 99 (arrayindex)


state 238

   15 function: accessmodif type IDENT '(' @3 args_e ')' '{' statements '}' .

    $default  reduce using rule 15 (function)


state 239

  119 statement: IF '(' expression ')' . statement
  120          | IF '(' expression ')' . statement ELSE statement

    IDENT      shift, and go to state 185
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 186
    WHILE      shift, and go to state 187
    FOR        shift, and go to state 188
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    RETURN     shift, and go to state 189
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74
    '{'        shift, and go to state 190
    ';'        shift, and go to state 192

    type             go to state 193
    noarraytype      go to state 29
    basictype        go to state 30
    arraytype        go to state 31
    expression       go to state 194
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78
    statement        go to state 245


state 240

  121 statement: WHILE '(' expression ')' . statement

    IDENT      shift, and go to state 185
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 186
    WHILE      shift, and go to state 187
    FOR        shift, and go to state 188
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    RETURN     shift, and go to state 189
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74
    '{'        shift, and go to state 190
    ';'        shift, and go to state 192

    type             go to state 193
    noarraytype      go to state 29
    basictype        go to state 30
    arraytype        go to state 31
    expression       go to state 194
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78
    statement        go to state 246


state 241

   24 variables: variables . ',' variable
  132 variables_e: type variables .

    ','  shift, and go to state 52

    $default  reduce using rule 132 (variables_e)


state 242

  122 statement: FOR '(' variables_e ';' . expr_e ';' expr_e ')' statement

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    $default  reduce using rule 134 (expr_e)

    expression       go to state 213
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78
    expr_e           go to state 247


state 243

  127 statement: '{' @5 statements '}' .

    $default  reduce using rule 127 (statement)


state 244

  100 arrayindex: '[' expression ',' expression ',' expression . ']'

    ']'  shift, and go to state 248


state 245

  119 statement: IF '(' expression ')' statement .
  120          | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 249

    $default  reduce using rule 119 (statement)


state 246

  121 statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 121 (statement)


state 247

  122 statement: FOR '(' variables_e ';' expr_e . ';' expr_e ')' statement

    ';'  shift, and go to state 250


state 248

  100 arrayindex: '[' expression ',' expression ',' expression ']' .

    $default  reduce using rule 100 (arrayindex)


state 249

  120 statement: IF '(' expression ')' statement ELSE . statement

    IDENT      shift, and go to state 185
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 186
    WHILE      shift, and go to state 187
    FOR        shift, and go to state 188
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    RETURN     shift, and go to state 189
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74
    '{'        shift, and go to state 190
    ';'        shift, and go to state 192

    type             go to state 193
    noarraytype      go to state 29
    basictype        go to state 30
    arraytype        go to state 31
    expression       go to state 194
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78
    statement        go to state 251


state 250

  122 statement: FOR '(' variables_e ';' expr_e ';' . expr_e ')' statement

    IDENT      shift, and go to state 61
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74

    $default  reduce using rule 134 (expr_e)

    expression       go to state 213
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78
    expr_e           go to state 252


state 251

  120 statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 120 (statement)


state 252

  122 statement: FOR '(' variables_e ';' expr_e ';' expr_e . ')' statement

    ')'  shift, and go to state 253


state 253

  122 statement: FOR '(' variables_e ';' expr_e ';' expr_e ')' . statement

    IDENT      shift, and go to state 185
    INTEGER    shift, and go to state 62
    REAL       shift, and go to state 63
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 186
    WHILE      shift, and go to state 187
    FOR        shift, and go to state 188
    FALSE      shift, and go to state 64
    TRUE       shift, and go to state 65
    NEW        shift, and go to state 66
    THIS       shift, and go to state 67
    NUL        shift, and go to state 68
    RETURN     shift, and go to state 189
    '+'        shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    DECREMENT  shift, and go to state 72
    INCREMENT  shift, and go to state 73
    '('        shift, and go to state 74
    '{'        shift, and go to state 190
    ';'        shift, and go to state 192

    type             go to state 193
    noarraytype      go to state 29
    basictype        go to state 30
    arraytype        go to state 31
    expression       go to state 194
    expr             go to state 76
    qualifiedname    go to state 77
    qualnameorarray  go to state 78
    statement        go to state 254


state 254

  122 statement: FOR '(' variables_e ';' expr_e ';' expr_e ')' statement .

    $default  reduce using rule 122 (statement)
