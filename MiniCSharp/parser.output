Grammar

    0 $accept: root $end

    1 root: /* empty */
    2     | root class

    3 @1: /* empty */

    4 class: CLASS IDENT '{' @1 members '}'

    5 @2: /* empty */

    6 class: CLASS IDENT ':' IDENT '{' @2 members '}'

    7 members: /* empty */
    8        | members member

    9 member: global
   10       | constructor
   11       | function

   12 global: accessmodif type variables ';'

   13 @3: /* empty */

   14 constructor: accessmodif IDENT '(' @3 args_e ')' '{' statements '}'

   15 @4: /* empty */

   16 function: accessmodif type IDENT '(' @4 args_e ')' '{' statements '}'

   17 @5: /* empty */

   18 function: accessmodif VOID IDENT '(' @5 args_e ')' '{' statements '}'

   19 arg: type IDENT

   20 args: arg
   21     | args ',' arg

   22 args_e: /* empty */
   23       | args

   24 variables: variable
   25          | variables ',' variable

   26 variable: IDENT
   27         | IDENT '=' expression

   28 accessmodif: /* empty */
   29            | PRIVATE
   30            | STATIC
   31            | PRIVATE STATIC

   32 type: noarraytype
   33     | arraytype

   34 noarraytype: IDENT
   35            | basictype

   36 basictype: OBJECT
   37          | BOOL
   38          | INT
   39          | DOUBLE

   40 arraytype: IDENT '[' ']'
   41          | IDENT '[' ',' ']'
   42          | IDENT '[' ',' ',' ']'
   43          | basictype '[' ']'
   44          | basictype '[' ',' ']'
   45          | basictype '[' ',' ',' ']'

   46 expression: expr
   47           | qualnameorarray

   48 expr: INCREMENT qualnameorarray
   49     | DECREMENT qualnameorarray
   50     | qualnameorarray INCREMENT
   51     | qualnameorarray DECREMENT
   52     | '!' expression
   53     | '-' expression
   54     | '+' expression
   55     | '(' expr ')'
   56     | '(' IDENT ')'
   57     | '(' qnora_without_id ')'
   58     | qualnameorarray '=' expression
   59     | qualifiedname '(' expr_list_e ')'
   60     | qualifiedname '(' expr_list_e ')' arrayindex
   61     | NEW IDENT '(' expr_list_e ')'
   62     | NEW IDENT arrayindex
   63     | expr EQ expression
   64     | qualnameorarray EQ expression
   65     | expr NE expression
   66     | qualnameorarray NE expression
   67     | expr '<' expression
   68     | qualnameorarray '<' expression
   69     | expr SE expression
   70     | qualnameorarray SE expression
   71     | expr '>' expression
   72     | qualnameorarray '>' expression
   73     | expr LE expression
   74     | qualnameorarray LE expression
   75     | expr '+' expression
   76     | qualnameorarray '+' expression
   77     | expr '-' expression
   78     | qualnameorarray '-' expression
   79     | expr '*' expression
   80     | qualnameorarray '*' expression
   81     | expr '/' expression
   82     | qualnameorarray '/' expression
   83     | expr '%' expression
   84     | qualnameorarray '%' expression
   85     | expr AND expression
   86     | qualnameorarray AND expression
   87     | expr OR expression
   88     | qualnameorarray OR expression
   89     | expr IS type
   90     | qualnameorarray IS type
   91     | '(' basictype ')' expression
   92     | '(' IDENT ')' expression
   93     | INTEGER
   94     | REAL
   95     | TRUE
   96     | FALSE
   97     | THIS
   98     | NUL

   99 arrayindex: '[' expression ']'
  100           | '[' expression ',' expression ']'
  101           | '[' expression ',' expression ',' expression ']'

  102 qualifiedname: IDENT
  103              | expr '.' IDENT
  104              | qualnameorarray '.' IDENT

  105 qualnameorarray: IDENT
  106                | IDENT arrayindex
  107                | expr '.' IDENT
  108                | qualnameorarray '.' IDENT
  109                | expr '.' IDENT arrayindex
  110                | qualnameorarray '.' IDENT arrayindex

  111 qnora_without_id: IDENT arrayindex
  112                 | expr '.' IDENT
  113                 | qualnameorarray '.' IDENT
  114                 | expr '.' IDENT arrayindex
  115                 | qualnameorarray '.' IDENT arrayindex

  116 expr_list: expression
  117          | expr_list ',' expression

  118 expr_list_e: /* empty */
  119            | expr_list

  120 statement: IF '(' expression ')' statement
  121          | IF '(' expression ')' statement ELSE statement
  122          | WHILE '(' expression ')' statement
  123          | FOR '(' variables_e ';' expr_e ';' expr_e ')' statement
  124          | expression ';'
  125          | type variables ';'
  126          | ';'

  127 @6: /* empty */

  128 statement: '{' @6 statements '}'
  129          | RETURN expr_e ';'

  130 statements: /* empty */
  131           | statements statement

  132 variables_e: /* empty */
  133            | type variables
  134            | variable

  135 expr_e: /* empty */
  136       | expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 52
'%' (37) 83 84
'(' (40) 14 16 18 55 56 57 59 60 61 91 92 120 121 122 123
')' (41) 14 16 18 55 56 57 59 60 61 91 92 120 121 122 123
'*' (42) 79 80
'+' (43) 54 75 76
',' (44) 21 25 41 42 44 45 100 101 117
'-' (45) 53 77 78
'.' (46) 103 104 107 108 109 110 112 113 114 115
'/' (47) 81 82
':' (58) 6
';' (59) 12 123 124 125 126 129
'<' (60) 67 68
'=' (61) 27 58
'>' (62) 71 72
'[' (91) 40 41 42 43 44 45 99 100 101
']' (93) 40 41 42 43 44 45 99 100 101
'{' (123) 4 6 14 16 18 128
'}' (125) 4 6 14 16 18 128
error (256)
IDENT (258) 4 6 14 16 18 19 26 27 34 40 41 42 56 61 62 92 102 103 104
    105 106 107 108 109 110 111 112 113 114 115
INTEGER (259) 93
REAL (260) 94
CLASS (261) 4 6
BOOL (262) 37
DOUBLE (263) 39
INT (264) 38
IS (265) 89 90
OBJECT (266) 36
IF (267) 120 121
ELSE (268) 121
WHILE (269) 122
FOR (270) 123
FALSE (271) 96
TRUE (272) 95
NEW (273) 61 62
THIS (274) 97
NUL (275) 98
PRIVATE (276) 29 31
STATIC (277) 30 31
VOID (278) 18
RETURN (279) 129
EXPRESSION (280)
IF_PREC (281)
OR (282) 87 88
AND (283) 85 86
NE (284) 65 66
EQ (285) 63 64
SE (286) 69 70
LE (287) 73 74
CAST (288)
UNARY_OP (289)
DECREMENT (290) 49 51
INCREMENT (291) 48 50


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
root (57)
    on left: 1 2, on right: 0 2
class (58)
    on left: 4 6, on right: 2
@1 (59)
    on left: 3, on right: 4
@2 (60)
    on left: 5, on right: 6
members (61)
    on left: 7 8, on right: 4 6 8
member (62)
    on left: 9 10 11, on right: 8
global (63)
    on left: 12, on right: 9
constructor (64)
    on left: 14, on right: 10
@3 (65)
    on left: 13, on right: 14
function (66)
    on left: 16 18, on right: 11
@4 (67)
    on left: 15, on right: 16
@5 (68)
    on left: 17, on right: 18
arg (69)
    on left: 19, on right: 20 21
args (70)
    on left: 20 21, on right: 21 23
args_e (71)
    on left: 22 23, on right: 14 16 18
variables (72)
    on left: 24 25, on right: 12 25 125 133
variable (73)
    on left: 26 27, on right: 24 25 134
accessmodif (74)
    on left: 28 29 30 31, on right: 12 14 16 18
type (75)
    on left: 32 33, on right: 12 16 19 89 90 125 133
noarraytype (76)
    on left: 34 35, on right: 32
basictype (77)
    on left: 36 37 38 39, on right: 35 43 44 45 91
arraytype (78)
    on left: 40 41 42 43 44 45, on right: 33
expression (79)
    on left: 46 47, on right: 27 52 53 54 58 63 64 65 66 67 68 69 70
    71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 91 92 99
    100 101 116 117 120 121 122 124 136
expr (80)
    on left: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
    66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86
    87 88 89 90 91 92 93 94 95 96 97 98, on right: 46 55 63 65 67 69
    71 73 75 77 79 81 83 85 87 89 103 107 109 112 114
arrayindex (81)
    on left: 99 100 101, on right: 60 62 106 109 110 111 114 115
qualifiedname (82)
    on left: 102 103 104, on right: 59 60
qualnameorarray (83)
    on left: 105 106 107 108 109 110, on right: 47 48 49 50 51 58 64
    66 68 70 72 74 76 78 80 82 84 86 88 90 104 108 110 113 115
qnora_without_id (84)
    on left: 111 112 113 114 115, on right: 57
expr_list (85)
    on left: 116 117, on right: 117 119
expr_list_e (86)
    on left: 118 119, on right: 59 60 61
statement (87)
    on left: 120 121 122 123 124 125 126 128 129, on right: 120 121
    122 123 131
@6 (88)
    on left: 127, on right: 128
statements (89)
    on left: 130 131, on right: 14 16 18 128 131
variables_e (90)
    on left: 132 133 134, on right: 123
expr_e (91)
    on left: 135 136, on right: 123 129


state 0

    0 $accept: . root $end

    $default  reduce using rule 1 (root)

    root  go to state 1


state 1

    0 $accept: root . $end
    2 root: root . class

    $end   shift, and go to state 2
    CLASS  shift, and go to state 3

    class  go to state 4


state 2

    0 $accept: root $end .

    $default  accept


state 3

    4 class: CLASS . IDENT '{' @1 members '}'
    6      | CLASS . IDENT ':' IDENT '{' @2 members '}'

    IDENT  shift, and go to state 5


state 4

    2 root: root class .

    $default  reduce using rule 2 (root)


state 5

    4 class: CLASS IDENT . '{' @1 members '}'
    6      | CLASS IDENT . ':' IDENT '{' @2 members '}'

    '{'  shift, and go to state 6
    ':'  shift, and go to state 7


state 6

    4 class: CLASS IDENT '{' . @1 members '}'

    $default  reduce using rule 3 (@1)

    @1  go to state 8


state 7

    6 class: CLASS IDENT ':' . IDENT '{' @2 members '}'

    IDENT  shift, and go to state 9


state 8

    4 class: CLASS IDENT '{' @1 . members '}'

    $default  reduce using rule 7 (members)

    members  go to state 10


state 9

    6 class: CLASS IDENT ':' IDENT . '{' @2 members '}'

    '{'  shift, and go to state 11


state 10

    4 class: CLASS IDENT '{' @1 members . '}'
    8 members: members . member

    PRIVATE  shift, and go to state 12
    STATIC   shift, and go to state 13
    '}'      shift, and go to state 14

    $default  reduce using rule 28 (accessmodif)

    member       go to state 15
    global       go to state 16
    constructor  go to state 17
    function     go to state 18
    accessmodif  go to state 19


state 11

    6 class: CLASS IDENT ':' IDENT '{' . @2 members '}'

    $default  reduce using rule 5 (@2)

    @2  go to state 20


state 12

   29 accessmodif: PRIVATE .
   31            | PRIVATE . STATIC

    STATIC  shift, and go to state 21

    $default  reduce using rule 29 (accessmodif)


state 13

   30 accessmodif: STATIC .

    $default  reduce using rule 30 (accessmodif)


state 14

    4 class: CLASS IDENT '{' @1 members '}' .

    $default  reduce using rule 4 (class)


state 15

    8 members: members member .

    $default  reduce using rule 8 (members)


state 16

    9 member: global .

    $default  reduce using rule 9 (member)


state 17

   10 member: constructor .

    $default  reduce using rule 10 (member)


state 18

   11 member: function .

    $default  reduce using rule 11 (member)


state 19

   12 global: accessmodif . type variables ';'
   14 constructor: accessmodif . IDENT '(' @3 args_e ')' '{' statements '}'
   16 function: accessmodif . type IDENT '(' @4 args_e ')' '{' statements '}'
   18         | accessmodif . VOID IDENT '(' @5 args_e ')' '{' statements '}'

    IDENT   shift, and go to state 22
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26
    VOID    shift, and go to state 27

    type         go to state 28
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31


state 20

    6 class: CLASS IDENT ':' IDENT '{' @2 . members '}'

    $default  reduce using rule 7 (members)

    members  go to state 32


state 21

   31 accessmodif: PRIVATE STATIC .

    $default  reduce using rule 31 (accessmodif)


state 22

   14 constructor: accessmodif IDENT . '(' @3 args_e ')' '{' statements '}'
   34 noarraytype: IDENT .
   40 arraytype: IDENT . '[' ']'
   41          | IDENT . '[' ',' ']'
   42          | IDENT . '[' ',' ',' ']'

    '('  shift, and go to state 33
    '['  shift, and go to state 34

    $default  reduce using rule 34 (noarraytype)


state 23

   37 basictype: BOOL .

    $default  reduce using rule 37 (basictype)


state 24

   39 basictype: DOUBLE .

    $default  reduce using rule 39 (basictype)


state 25

   38 basictype: INT .

    $default  reduce using rule 38 (basictype)


state 26

   36 basictype: OBJECT .

    $default  reduce using rule 36 (basictype)


state 27

   18 function: accessmodif VOID . IDENT '(' @5 args_e ')' '{' statements '}'

    IDENT  shift, and go to state 35


state 28

   12 global: accessmodif type . variables ';'
   16 function: accessmodif type . IDENT '(' @4 args_e ')' '{' statements '}'

    IDENT  shift, and go to state 36

    variables  go to state 37
    variable   go to state 38


state 29

   32 type: noarraytype .

    $default  reduce using rule 32 (type)


state 30

   35 noarraytype: basictype .
   43 arraytype: basictype . '[' ']'
   44          | basictype . '[' ',' ']'
   45          | basictype . '[' ',' ',' ']'

    '['  shift, and go to state 39

    $default  reduce using rule 35 (noarraytype)


state 31

   33 type: arraytype .

    $default  reduce using rule 33 (type)


state 32

    6 class: CLASS IDENT ':' IDENT '{' @2 members . '}'
    8 members: members . member

    PRIVATE  shift, and go to state 12
    STATIC   shift, and go to state 13
    '}'      shift, and go to state 40

    $default  reduce using rule 28 (accessmodif)

    member       go to state 15
    global       go to state 16
    constructor  go to state 17
    function     go to state 18
    accessmodif  go to state 19


state 33

   14 constructor: accessmodif IDENT '(' . @3 args_e ')' '{' statements '}'

    $default  reduce using rule 13 (@3)

    @3  go to state 41


state 34

   40 arraytype: IDENT '[' . ']'
   41          | IDENT '[' . ',' ']'
   42          | IDENT '[' . ',' ',' ']'

    ','  shift, and go to state 42
    ']'  shift, and go to state 43


state 35

   18 function: accessmodif VOID IDENT . '(' @5 args_e ')' '{' statements '}'

    '('  shift, and go to state 44


state 36

   16 function: accessmodif type IDENT . '(' @4 args_e ')' '{' statements '}'
   26 variable: IDENT .
   27         | IDENT . '=' expression

    '='  shift, and go to state 45
    '('  shift, and go to state 46

    $default  reduce using rule 26 (variable)


state 37

   12 global: accessmodif type variables . ';'
   25 variables: variables . ',' variable

    ';'  shift, and go to state 47
    ','  shift, and go to state 48


state 38

   24 variables: variable .

    $default  reduce using rule 24 (variables)


state 39

   43 arraytype: basictype '[' . ']'
   44          | basictype '[' . ',' ']'
   45          | basictype '[' . ',' ',' ']'

    ','  shift, and go to state 49
    ']'  shift, and go to state 50


state 40

    6 class: CLASS IDENT ':' IDENT '{' @2 members '}' .

    $default  reduce using rule 6 (class)


state 41

   14 constructor: accessmodif IDENT '(' @3 . args_e ')' '{' statements '}'

    IDENT   shift, and go to state 51
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26

    $default  reduce using rule 22 (args_e)

    arg          go to state 52
    args         go to state 53
    args_e       go to state 54
    type         go to state 55
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31


state 42

   41 arraytype: IDENT '[' ',' . ']'
   42          | IDENT '[' ',' . ',' ']'

    ','  shift, and go to state 56
    ']'  shift, and go to state 57


state 43

   40 arraytype: IDENT '[' ']' .

    $default  reduce using rule 40 (arraytype)


state 44

   18 function: accessmodif VOID IDENT '(' . @5 args_e ')' '{' statements '}'

    $default  reduce using rule 17 (@5)

    @5  go to state 58


state 45

   27 variable: IDENT '=' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 73
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 46

   16 function: accessmodif type IDENT '(' . @4 args_e ')' '{' statements '}'

    $default  reduce using rule 15 (@4)

    @4  go to state 77


state 47

   12 global: accessmodif type variables ';' .

    $default  reduce using rule 12 (global)


state 48

   25 variables: variables ',' . variable

    IDENT  shift, and go to state 78

    variable  go to state 79


state 49

   44 arraytype: basictype '[' ',' . ']'
   45          | basictype '[' ',' . ',' ']'

    ','  shift, and go to state 80
    ']'  shift, and go to state 81


state 50

   43 arraytype: basictype '[' ']' .

    $default  reduce using rule 43 (arraytype)


state 51

   34 noarraytype: IDENT .
   40 arraytype: IDENT . '[' ']'
   41          | IDENT . '[' ',' ']'
   42          | IDENT . '[' ',' ',' ']'

    '['  shift, and go to state 34

    $default  reduce using rule 34 (noarraytype)


state 52

   20 args: arg .

    $default  reduce using rule 20 (args)


state 53

   21 args: args . ',' arg
   23 args_e: args .

    ','  shift, and go to state 82

    $default  reduce using rule 23 (args_e)


state 54

   14 constructor: accessmodif IDENT '(' @3 args_e . ')' '{' statements '}'

    ')'  shift, and go to state 83


state 55

   19 arg: type . IDENT

    IDENT  shift, and go to state 84


state 56

   42 arraytype: IDENT '[' ',' ',' . ']'

    ']'  shift, and go to state 85


state 57

   41 arraytype: IDENT '[' ',' ']' .

    $default  reduce using rule 41 (arraytype)


state 58

   18 function: accessmodif VOID IDENT '(' @5 . args_e ')' '{' statements '}'

    IDENT   shift, and go to state 51
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26

    $default  reduce using rule 22 (args_e)

    arg          go to state 52
    args         go to state 53
    args_e       go to state 86
    type         go to state 55
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31


state 59

  102 qualifiedname: IDENT .
  105 qualnameorarray: IDENT .
  106                | IDENT . arrayindex

    '['  shift, and go to state 87

    '('       reduce using rule 102 (qualifiedname)
    $default  reduce using rule 105 (qualnameorarray)

    arrayindex  go to state 88


state 60

   93 expr: INTEGER .

    $default  reduce using rule 93 (expr)


state 61

   94 expr: REAL .

    $default  reduce using rule 94 (expr)


state 62

   96 expr: FALSE .

    $default  reduce using rule 96 (expr)


state 63

   95 expr: TRUE .

    $default  reduce using rule 95 (expr)


state 64

   61 expr: NEW . IDENT '(' expr_list_e ')'
   62     | NEW . IDENT arrayindex

    IDENT  shift, and go to state 89


state 65

   97 expr: THIS .

    $default  reduce using rule 97 (expr)


state 66

   98 expr: NUL .

    $default  reduce using rule 98 (expr)


state 67

   54 expr: '+' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 90
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 68

   53 expr: '-' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 91
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 69

   52 expr: '!' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 92
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 70

   49 expr: DECREMENT . qualnameorarray

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expr             go to state 93
    qualifiedname    go to state 75
    qualnameorarray  go to state 94


state 71

   48 expr: INCREMENT . qualnameorarray

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expr             go to state 93
    qualifiedname    go to state 75
    qualnameorarray  go to state 95


state 72

   55 expr: '(' . expr ')'
   56     | '(' . IDENT ')'
   57     | '(' . qnora_without_id ')'
   91     | '(' . basictype ')' expression
   92     | '(' . IDENT ')' expression

    IDENT      shift, and go to state 96
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    basictype         go to state 97
    expr              go to state 98
    qualifiedname     go to state 75
    qualnameorarray   go to state 99
    qnora_without_id  go to state 100


state 73

   27 variable: IDENT '=' expression .

    $default  reduce using rule 27 (variable)


state 74

   46 expression: expr .
   63 expr: expr . EQ expression
   65     | expr . NE expression
   67     | expr . '<' expression
   69     | expr . SE expression
   71     | expr . '>' expression
   73     | expr . LE expression
   75     | expr . '+' expression
   77     | expr . '-' expression
   79     | expr . '*' expression
   81     | expr . '/' expression
   83     | expr . '%' expression
   85     | expr . AND expression
   87     | expr . OR expression
   89     | expr . IS type
  103 qualifiedname: expr . '.' IDENT
  107 qualnameorarray: expr . '.' IDENT
  109                | expr . '.' IDENT arrayindex

    IS   shift, and go to state 101
    OR   shift, and go to state 102
    AND  shift, and go to state 103
    NE   shift, and go to state 104
    EQ   shift, and go to state 105
    '>'  shift, and go to state 106
    '<'  shift, and go to state 107
    SE   shift, and go to state 108
    LE   shift, and go to state 109
    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114
    '.'  shift, and go to state 115

    $default  reduce using rule 46 (expression)


state 75

   59 expr: qualifiedname . '(' expr_list_e ')'
   60     | qualifiedname . '(' expr_list_e ')' arrayindex

    '('  shift, and go to state 116


state 76

   47 expression: qualnameorarray .
   50 expr: qualnameorarray . INCREMENT
   51     | qualnameorarray . DECREMENT
   58     | qualnameorarray . '=' expression
   64     | qualnameorarray . EQ expression
   66     | qualnameorarray . NE expression
   68     | qualnameorarray . '<' expression
   70     | qualnameorarray . SE expression
   72     | qualnameorarray . '>' expression
   74     | qualnameorarray . LE expression
   76     | qualnameorarray . '+' expression
   78     | qualnameorarray . '-' expression
   80     | qualnameorarray . '*' expression
   82     | qualnameorarray . '/' expression
   84     | qualnameorarray . '%' expression
   86     | qualnameorarray . AND expression
   88     | qualnameorarray . OR expression
   90     | qualnameorarray . IS type
  104 qualifiedname: qualnameorarray . '.' IDENT
  108 qualnameorarray: qualnameorarray . '.' IDENT
  110                | qualnameorarray . '.' IDENT arrayindex

    IS         shift, and go to state 117
    '='        shift, and go to state 118
    OR         shift, and go to state 119
    AND        shift, and go to state 120
    NE         shift, and go to state 121
    EQ         shift, and go to state 122
    '>'        shift, and go to state 123
    '<'        shift, and go to state 124
    SE         shift, and go to state 125
    LE         shift, and go to state 126
    '+'        shift, and go to state 127
    '-'        shift, and go to state 128
    '*'        shift, and go to state 129
    '/'        shift, and go to state 130
    '%'        shift, and go to state 131
    DECREMENT  shift, and go to state 132
    INCREMENT  shift, and go to state 133
    '.'        shift, and go to state 134

    $default  reduce using rule 47 (expression)


state 77

   16 function: accessmodif type IDENT '(' @4 . args_e ')' '{' statements '}'

    IDENT   shift, and go to state 51
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26

    $default  reduce using rule 22 (args_e)

    arg          go to state 52
    args         go to state 53
    args_e       go to state 135
    type         go to state 55
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31


state 78

   26 variable: IDENT .
   27         | IDENT . '=' expression

    '='  shift, and go to state 45

    $default  reduce using rule 26 (variable)


state 79

   25 variables: variables ',' variable .

    $default  reduce using rule 25 (variables)


state 80

   45 arraytype: basictype '[' ',' ',' . ']'

    ']'  shift, and go to state 136


state 81

   44 arraytype: basictype '[' ',' ']' .

    $default  reduce using rule 44 (arraytype)


state 82

   21 args: args ',' . arg

    IDENT   shift, and go to state 51
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26

    arg          go to state 137
    type         go to state 55
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31


state 83

   14 constructor: accessmodif IDENT '(' @3 args_e ')' . '{' statements '}'

    '{'  shift, and go to state 138


state 84

   19 arg: type IDENT .

    $default  reduce using rule 19 (arg)


state 85

   42 arraytype: IDENT '[' ',' ',' ']' .

    $default  reduce using rule 42 (arraytype)


state 86

   18 function: accessmodif VOID IDENT '(' @5 args_e . ')' '{' statements '}'

    ')'  shift, and go to state 139


state 87

   99 arrayindex: '[' . expression ']'
  100           | '[' . expression ',' expression ']'
  101           | '[' . expression ',' expression ',' expression ']'

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 140
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 88

  106 qualnameorarray: IDENT arrayindex .

    $default  reduce using rule 106 (qualnameorarray)


state 89

   61 expr: NEW IDENT . '(' expr_list_e ')'
   62     | NEW IDENT . arrayindex

    '('  shift, and go to state 141
    '['  shift, and go to state 87

    arrayindex  go to state 142


state 90

   54 expr: '+' expression .

    $default  reduce using rule 54 (expr)


state 91

   53 expr: '-' expression .

    $default  reduce using rule 53 (expr)


state 92

   52 expr: '!' expression .

    $default  reduce using rule 52 (expr)


state 93

   63 expr: expr . EQ expression
   65     | expr . NE expression
   67     | expr . '<' expression
   69     | expr . SE expression
   71     | expr . '>' expression
   73     | expr . LE expression
   75     | expr . '+' expression
   77     | expr . '-' expression
   79     | expr . '*' expression
   81     | expr . '/' expression
   83     | expr . '%' expression
   85     | expr . AND expression
   87     | expr . OR expression
   89     | expr . IS type
  103 qualifiedname: expr . '.' IDENT
  107 qualnameorarray: expr . '.' IDENT
  109                | expr . '.' IDENT arrayindex

    IS   shift, and go to state 101
    OR   shift, and go to state 102
    AND  shift, and go to state 103
    NE   shift, and go to state 104
    EQ   shift, and go to state 105
    '>'  shift, and go to state 106
    '<'  shift, and go to state 107
    SE   shift, and go to state 108
    LE   shift, and go to state 109
    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114
    '.'  shift, and go to state 115


state 94

   49 expr: DECREMENT qualnameorarray .
   50     | qualnameorarray . INCREMENT
   51     | qualnameorarray . DECREMENT
   58     | qualnameorarray . '=' expression
   64     | qualnameorarray . EQ expression
   66     | qualnameorarray . NE expression
   68     | qualnameorarray . '<' expression
   70     | qualnameorarray . SE expression
   72     | qualnameorarray . '>' expression
   74     | qualnameorarray . LE expression
   76     | qualnameorarray . '+' expression
   78     | qualnameorarray . '-' expression
   80     | qualnameorarray . '*' expression
   82     | qualnameorarray . '/' expression
   84     | qualnameorarray . '%' expression
   86     | qualnameorarray . AND expression
   88     | qualnameorarray . OR expression
   90     | qualnameorarray . IS type
  104 qualifiedname: qualnameorarray . '.' IDENT
  108 qualnameorarray: qualnameorarray . '.' IDENT
  110                | qualnameorarray . '.' IDENT arrayindex

    '='        shift, and go to state 118
    DECREMENT  shift, and go to state 132
    INCREMENT  shift, and go to state 133
    '.'        shift, and go to state 134

    $default  reduce using rule 49 (expr)


state 95

   48 expr: INCREMENT qualnameorarray .
   50     | qualnameorarray . INCREMENT
   51     | qualnameorarray . DECREMENT
   58     | qualnameorarray . '=' expression
   64     | qualnameorarray . EQ expression
   66     | qualnameorarray . NE expression
   68     | qualnameorarray . '<' expression
   70     | qualnameorarray . SE expression
   72     | qualnameorarray . '>' expression
   74     | qualnameorarray . LE expression
   76     | qualnameorarray . '+' expression
   78     | qualnameorarray . '-' expression
   80     | qualnameorarray . '*' expression
   82     | qualnameorarray . '/' expression
   84     | qualnameorarray . '%' expression
   86     | qualnameorarray . AND expression
   88     | qualnameorarray . OR expression
   90     | qualnameorarray . IS type
  104 qualifiedname: qualnameorarray . '.' IDENT
  108 qualnameorarray: qualnameorarray . '.' IDENT
  110                | qualnameorarray . '.' IDENT arrayindex

    '='        shift, and go to state 118
    DECREMENT  shift, and go to state 132
    INCREMENT  shift, and go to state 133
    '.'        shift, and go to state 134

    $default  reduce using rule 48 (expr)


state 96

   56 expr: '(' IDENT . ')'
   92     | '(' IDENT . ')' expression
  102 qualifiedname: IDENT .
  105 qualnameorarray: IDENT .
  106                | IDENT . arrayindex
  111 qnora_without_id: IDENT . arrayindex

    ')'  shift, and go to state 143
    '['  shift, and go to state 87

    '('       reduce using rule 102 (qualifiedname)
    $default  reduce using rule 105 (qualnameorarray)

    arrayindex  go to state 144


state 97

   91 expr: '(' basictype . ')' expression

    ')'  shift, and go to state 145


state 98

   55 expr: '(' expr . ')'
   63     | expr . EQ expression
   65     | expr . NE expression
   67     | expr . '<' expression
   69     | expr . SE expression
   71     | expr . '>' expression
   73     | expr . LE expression
   75     | expr . '+' expression
   77     | expr . '-' expression
   79     | expr . '*' expression
   81     | expr . '/' expression
   83     | expr . '%' expression
   85     | expr . AND expression
   87     | expr . OR expression
   89     | expr . IS type
  103 qualifiedname: expr . '.' IDENT
  107 qualnameorarray: expr . '.' IDENT
  109                | expr . '.' IDENT arrayindex
  112 qnora_without_id: expr . '.' IDENT
  114                 | expr . '.' IDENT arrayindex

    IS   shift, and go to state 101
    OR   shift, and go to state 102
    AND  shift, and go to state 103
    NE   shift, and go to state 104
    EQ   shift, and go to state 105
    '>'  shift, and go to state 106
    '<'  shift, and go to state 107
    SE   shift, and go to state 108
    LE   shift, and go to state 109
    '+'  shift, and go to state 110
    '-'  shift, and go to state 111
    '*'  shift, and go to state 112
    '/'  shift, and go to state 113
    '%'  shift, and go to state 114
    '.'  shift, and go to state 146
    ')'  shift, and go to state 147


state 99

   50 expr: qualnameorarray . INCREMENT
   51     | qualnameorarray . DECREMENT
   58     | qualnameorarray . '=' expression
   64     | qualnameorarray . EQ expression
   66     | qualnameorarray . NE expression
   68     | qualnameorarray . '<' expression
   70     | qualnameorarray . SE expression
   72     | qualnameorarray . '>' expression
   74     | qualnameorarray . LE expression
   76     | qualnameorarray . '+' expression
   78     | qualnameorarray . '-' expression
   80     | qualnameorarray . '*' expression
   82     | qualnameorarray . '/' expression
   84     | qualnameorarray . '%' expression
   86     | qualnameorarray . AND expression
   88     | qualnameorarray . OR expression
   90     | qualnameorarray . IS type
  104 qualifiedname: qualnameorarray . '.' IDENT
  108 qualnameorarray: qualnameorarray . '.' IDENT
  110                | qualnameorarray . '.' IDENT arrayindex
  113 qnora_without_id: qualnameorarray . '.' IDENT
  115                 | qualnameorarray . '.' IDENT arrayindex

    IS         shift, and go to state 117
    '='        shift, and go to state 118
    OR         shift, and go to state 119
    AND        shift, and go to state 120
    NE         shift, and go to state 121
    EQ         shift, and go to state 122
    '>'        shift, and go to state 123
    '<'        shift, and go to state 124
    SE         shift, and go to state 125
    LE         shift, and go to state 126
    '+'        shift, and go to state 127
    '-'        shift, and go to state 128
    '*'        shift, and go to state 129
    '/'        shift, and go to state 130
    '%'        shift, and go to state 131
    DECREMENT  shift, and go to state 132
    INCREMENT  shift, and go to state 133
    '.'        shift, and go to state 148


state 100

   57 expr: '(' qnora_without_id . ')'

    ')'  shift, and go to state 149


state 101

   89 expr: expr IS . type

    IDENT   shift, and go to state 51
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26

    type         go to state 150
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31


state 102

   87 expr: expr OR . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 151
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 103

   85 expr: expr AND . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 152
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 104

   65 expr: expr NE . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 153
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 105

   63 expr: expr EQ . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 154
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 106

   71 expr: expr '>' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 155
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 107

   67 expr: expr '<' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 156
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 108

   69 expr: expr SE . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 157
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 109

   73 expr: expr LE . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 158
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 110

   75 expr: expr '+' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 159
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 111

   77 expr: expr '-' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 160
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 112

   79 expr: expr '*' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 161
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 113

   81 expr: expr '/' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 162
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 114

   83 expr: expr '%' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 163
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 115

  103 qualifiedname: expr '.' . IDENT
  107 qualnameorarray: expr '.' . IDENT
  109                | expr '.' . IDENT arrayindex

    IDENT  shift, and go to state 164


state 116

   59 expr: qualifiedname '(' . expr_list_e ')'
   60     | qualifiedname '(' . expr_list_e ')' arrayindex

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    $default  reduce using rule 118 (expr_list_e)

    expression       go to state 165
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    expr_list        go to state 166
    expr_list_e      go to state 167


state 117

   90 expr: qualnameorarray IS . type

    IDENT   shift, and go to state 51
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26

    type         go to state 168
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31


state 118

   58 expr: qualnameorarray '=' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 169
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 119

   88 expr: qualnameorarray OR . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 170
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 120

   86 expr: qualnameorarray AND . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 171
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 121

   66 expr: qualnameorarray NE . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 172
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 122

   64 expr: qualnameorarray EQ . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 173
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 123

   72 expr: qualnameorarray '>' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 174
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 124

   68 expr: qualnameorarray '<' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 175
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 125

   70 expr: qualnameorarray SE . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 176
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 126

   74 expr: qualnameorarray LE . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 177
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 127

   76 expr: qualnameorarray '+' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 178
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 128

   78 expr: qualnameorarray '-' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 179
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 129

   80 expr: qualnameorarray '*' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 180
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 130

   82 expr: qualnameorarray '/' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 181
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 131

   84 expr: qualnameorarray '%' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 182
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 132

   51 expr: qualnameorarray DECREMENT .

    $default  reduce using rule 51 (expr)


state 133

   50 expr: qualnameorarray INCREMENT .

    $default  reduce using rule 50 (expr)


state 134

  104 qualifiedname: qualnameorarray '.' . IDENT
  108 qualnameorarray: qualnameorarray '.' . IDENT
  110                | qualnameorarray '.' . IDENT arrayindex

    IDENT  shift, and go to state 183


state 135

   16 function: accessmodif type IDENT '(' @4 args_e . ')' '{' statements '}'

    ')'  shift, and go to state 184


state 136

   45 arraytype: basictype '[' ',' ',' ']' .

    $default  reduce using rule 45 (arraytype)


state 137

   21 args: args ',' arg .

    $default  reduce using rule 21 (args)


state 138

   14 constructor: accessmodif IDENT '(' @3 args_e ')' '{' . statements '}'

    $default  reduce using rule 130 (statements)

    statements  go to state 185


state 139

   18 function: accessmodif VOID IDENT '(' @5 args_e ')' . '{' statements '}'

    '{'  shift, and go to state 186


state 140

   99 arrayindex: '[' expression . ']'
  100           | '[' expression . ',' expression ']'
  101           | '[' expression . ',' expression ',' expression ']'

    ','  shift, and go to state 187
    ']'  shift, and go to state 188


state 141

   61 expr: NEW IDENT '(' . expr_list_e ')'

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    $default  reduce using rule 118 (expr_list_e)

    expression       go to state 165
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    expr_list        go to state 166
    expr_list_e      go to state 189


state 142

   62 expr: NEW IDENT arrayindex .

    $default  reduce using rule 62 (expr)


state 143

   56 expr: '(' IDENT ')' .
   92     | '(' IDENT ')' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    $default  reduce using rule 56 (expr)

    expression       go to state 190
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 144

  106 qualnameorarray: IDENT arrayindex .
  111 qnora_without_id: IDENT arrayindex .

    ')'       reduce using rule 111 (qnora_without_id)
    $default  reduce using rule 106 (qualnameorarray)


state 145

   91 expr: '(' basictype ')' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 191
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 146

  103 qualifiedname: expr '.' . IDENT
  107 qualnameorarray: expr '.' . IDENT
  109                | expr '.' . IDENT arrayindex
  112 qnora_without_id: expr '.' . IDENT
  114                 | expr '.' . IDENT arrayindex

    IDENT  shift, and go to state 192


state 147

   55 expr: '(' expr ')' .

    $default  reduce using rule 55 (expr)


state 148

  104 qualifiedname: qualnameorarray '.' . IDENT
  108 qualnameorarray: qualnameorarray '.' . IDENT
  110                | qualnameorarray '.' . IDENT arrayindex
  113 qnora_without_id: qualnameorarray '.' . IDENT
  115                 | qualnameorarray '.' . IDENT arrayindex

    IDENT  shift, and go to state 193


state 149

   57 expr: '(' qnora_without_id ')' .

    $default  reduce using rule 57 (expr)


state 150

   89 expr: expr IS type .

    $default  reduce using rule 89 (expr)


state 151

   87 expr: expr OR expression .

    $default  reduce using rule 87 (expr)


state 152

   85 expr: expr AND expression .

    $default  reduce using rule 85 (expr)


state 153

   65 expr: expr NE expression .

    $default  reduce using rule 65 (expr)


state 154

   63 expr: expr EQ expression .

    $default  reduce using rule 63 (expr)


state 155

   71 expr: expr '>' expression .

    $default  reduce using rule 71 (expr)


state 156

   67 expr: expr '<' expression .

    $default  reduce using rule 67 (expr)


state 157

   69 expr: expr SE expression .

    $default  reduce using rule 69 (expr)


state 158

   73 expr: expr LE expression .

    $default  reduce using rule 73 (expr)


state 159

   75 expr: expr '+' expression .

    $default  reduce using rule 75 (expr)


state 160

   77 expr: expr '-' expression .

    $default  reduce using rule 77 (expr)


state 161

   79 expr: expr '*' expression .

    $default  reduce using rule 79 (expr)


state 162

   81 expr: expr '/' expression .

    $default  reduce using rule 81 (expr)


state 163

   83 expr: expr '%' expression .

    $default  reduce using rule 83 (expr)


state 164

  103 qualifiedname: expr '.' IDENT .
  107 qualnameorarray: expr '.' IDENT .
  109                | expr '.' IDENT . arrayindex

    '['  shift, and go to state 87

    '('       reduce using rule 103 (qualifiedname)
    $default  reduce using rule 107 (qualnameorarray)

    arrayindex  go to state 194


state 165

  116 expr_list: expression .

    $default  reduce using rule 116 (expr_list)


state 166

  117 expr_list: expr_list . ',' expression
  119 expr_list_e: expr_list .

    ','  shift, and go to state 195

    $default  reduce using rule 119 (expr_list_e)


state 167

   59 expr: qualifiedname '(' expr_list_e . ')'
   60     | qualifiedname '(' expr_list_e . ')' arrayindex

    ')'  shift, and go to state 196


state 168

   90 expr: qualnameorarray IS type .

    $default  reduce using rule 90 (expr)


state 169

   58 expr: qualnameorarray '=' expression .

    $default  reduce using rule 58 (expr)


state 170

   88 expr: qualnameorarray OR expression .

    $default  reduce using rule 88 (expr)


state 171

   86 expr: qualnameorarray AND expression .

    $default  reduce using rule 86 (expr)


state 172

   66 expr: qualnameorarray NE expression .

    $default  reduce using rule 66 (expr)


state 173

   64 expr: qualnameorarray EQ expression .

    $default  reduce using rule 64 (expr)


state 174

   72 expr: qualnameorarray '>' expression .

    $default  reduce using rule 72 (expr)


state 175

   68 expr: qualnameorarray '<' expression .

    $default  reduce using rule 68 (expr)


state 176

   70 expr: qualnameorarray SE expression .

    $default  reduce using rule 70 (expr)


state 177

   74 expr: qualnameorarray LE expression .

    $default  reduce using rule 74 (expr)


state 178

   76 expr: qualnameorarray '+' expression .

    $default  reduce using rule 76 (expr)


state 179

   78 expr: qualnameorarray '-' expression .

    $default  reduce using rule 78 (expr)


state 180

   80 expr: qualnameorarray '*' expression .

    $default  reduce using rule 80 (expr)


state 181

   82 expr: qualnameorarray '/' expression .

    $default  reduce using rule 82 (expr)


state 182

   84 expr: qualnameorarray '%' expression .

    $default  reduce using rule 84 (expr)


state 183

  104 qualifiedname: qualnameorarray '.' IDENT .
  108 qualnameorarray: qualnameorarray '.' IDENT .
  110                | qualnameorarray '.' IDENT . arrayindex

    '['  shift, and go to state 87

    '('       reduce using rule 104 (qualifiedname)
    $default  reduce using rule 108 (qualnameorarray)

    arrayindex  go to state 197


state 184

   16 function: accessmodif type IDENT '(' @4 args_e ')' . '{' statements '}'

    '{'  shift, and go to state 198


state 185

   14 constructor: accessmodif IDENT '(' @3 args_e ')' '{' statements . '}'
  131 statements: statements . statement

    IDENT      shift, and go to state 199
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 200
    WHILE      shift, and go to state 201
    FOR        shift, and go to state 202
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 203
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 204
    '}'        shift, and go to state 205
    ';'        shift, and go to state 206

    type             go to state 207
    noarraytype      go to state 29
    basictype        go to state 30
    arraytype        go to state 31
    expression       go to state 208
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    statement        go to state 209


state 186

   18 function: accessmodif VOID IDENT '(' @5 args_e ')' '{' . statements '}'

    $default  reduce using rule 130 (statements)

    statements  go to state 210


state 187

  100 arrayindex: '[' expression ',' . expression ']'
  101           | '[' expression ',' . expression ',' expression ']'

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 211
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 188

   99 arrayindex: '[' expression ']' .

    $default  reduce using rule 99 (arrayindex)


state 189

   61 expr: NEW IDENT '(' expr_list_e . ')'

    ')'  shift, and go to state 212


state 190

   92 expr: '(' IDENT ')' expression .

    $default  reduce using rule 92 (expr)


state 191

   91 expr: '(' basictype ')' expression .

    $default  reduce using rule 91 (expr)


state 192

  103 qualifiedname: expr '.' IDENT .
  107 qualnameorarray: expr '.' IDENT .
  109                | expr '.' IDENT . arrayindex
  112 qnora_without_id: expr '.' IDENT .
  114                 | expr '.' IDENT . arrayindex

    '['  shift, and go to state 87

    '('       reduce using rule 103 (qualifiedname)
    ')'       reduce using rule 112 (qnora_without_id)
    $default  reduce using rule 107 (qualnameorarray)

    arrayindex  go to state 213


state 193

  104 qualifiedname: qualnameorarray '.' IDENT .
  108 qualnameorarray: qualnameorarray '.' IDENT .
  110                | qualnameorarray '.' IDENT . arrayindex
  113 qnora_without_id: qualnameorarray '.' IDENT .
  115                 | qualnameorarray '.' IDENT . arrayindex

    '['  shift, and go to state 87

    '('       reduce using rule 104 (qualifiedname)
    ')'       reduce using rule 113 (qnora_without_id)
    $default  reduce using rule 108 (qualnameorarray)

    arrayindex  go to state 214


state 194

  109 qualnameorarray: expr '.' IDENT arrayindex .

    $default  reduce using rule 109 (qualnameorarray)


state 195

  117 expr_list: expr_list ',' . expression

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 215
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 196

   59 expr: qualifiedname '(' expr_list_e ')' .
   60     | qualifiedname '(' expr_list_e ')' . arrayindex

    '['  shift, and go to state 87

    $default  reduce using rule 59 (expr)

    arrayindex  go to state 216


state 197

  110 qualnameorarray: qualnameorarray '.' IDENT arrayindex .

    $default  reduce using rule 110 (qualnameorarray)


state 198

   16 function: accessmodif type IDENT '(' @4 args_e ')' '{' . statements '}'

    $default  reduce using rule 130 (statements)

    statements  go to state 217


state 199

   34 noarraytype: IDENT .
   40 arraytype: IDENT . '[' ']'
   41          | IDENT . '[' ',' ']'
   42          | IDENT . '[' ',' ',' ']'
  102 qualifiedname: IDENT .
  105 qualnameorarray: IDENT .
  106                | IDENT . arrayindex

    '['  shift, and go to state 218

    IDENT     reduce using rule 34 (noarraytype)
    '('       reduce using rule 102 (qualifiedname)
    $default  reduce using rule 105 (qualnameorarray)

    arrayindex  go to state 88


state 200

  120 statement: IF . '(' expression ')' statement
  121          | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 219


state 201

  122 statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 220


state 202

  123 statement: FOR . '(' variables_e ';' expr_e ';' expr_e ')' statement

    '('  shift, and go to state 221


state 203

  129 statement: RETURN . expr_e ';'

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    $default  reduce using rule 135 (expr_e)

    expression       go to state 222
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    expr_e           go to state 223


state 204

  128 statement: '{' . @6 statements '}'

    $default  reduce using rule 127 (@6)

    @6  go to state 224


state 205

   14 constructor: accessmodif IDENT '(' @3 args_e ')' '{' statements '}' .

    $default  reduce using rule 14 (constructor)


state 206

  126 statement: ';' .

    $default  reduce using rule 126 (statement)


state 207

  125 statement: type . variables ';'

    IDENT  shift, and go to state 78

    variables  go to state 225
    variable   go to state 38


state 208

  124 statement: expression . ';'

    ';'  shift, and go to state 226


state 209

  131 statements: statements statement .

    $default  reduce using rule 131 (statements)


state 210

   18 function: accessmodif VOID IDENT '(' @5 args_e ')' '{' statements . '}'
  131 statements: statements . statement

    IDENT      shift, and go to state 199
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 200
    WHILE      shift, and go to state 201
    FOR        shift, and go to state 202
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 203
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 204
    '}'        shift, and go to state 227
    ';'        shift, and go to state 206

    type             go to state 207
    noarraytype      go to state 29
    basictype        go to state 30
    arraytype        go to state 31
    expression       go to state 208
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    statement        go to state 209


state 211

  100 arrayindex: '[' expression ',' expression . ']'
  101           | '[' expression ',' expression . ',' expression ']'

    ','  shift, and go to state 228
    ']'  shift, and go to state 229


state 212

   61 expr: NEW IDENT '(' expr_list_e ')' .

    $default  reduce using rule 61 (expr)


state 213

  109 qualnameorarray: expr '.' IDENT arrayindex .
  114 qnora_without_id: expr '.' IDENT arrayindex .

    ')'       reduce using rule 114 (qnora_without_id)
    $default  reduce using rule 109 (qualnameorarray)


state 214

  110 qualnameorarray: qualnameorarray '.' IDENT arrayindex .
  115 qnora_without_id: qualnameorarray '.' IDENT arrayindex .

    ')'       reduce using rule 115 (qnora_without_id)
    $default  reduce using rule 110 (qualnameorarray)


state 215

  117 expr_list: expr_list ',' expression .

    $default  reduce using rule 117 (expr_list)


state 216

   60 expr: qualifiedname '(' expr_list_e ')' arrayindex .

    $default  reduce using rule 60 (expr)


state 217

   16 function: accessmodif type IDENT '(' @4 args_e ')' '{' statements . '}'
  131 statements: statements . statement

    IDENT      shift, and go to state 199
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 200
    WHILE      shift, and go to state 201
    FOR        shift, and go to state 202
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 203
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 204
    '}'        shift, and go to state 230
    ';'        shift, and go to state 206

    type             go to state 207
    noarraytype      go to state 29
    basictype        go to state 30
    arraytype        go to state 31
    expression       go to state 208
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    statement        go to state 209


state 218

   40 arraytype: IDENT '[' . ']'
   41          | IDENT '[' . ',' ']'
   42          | IDENT '[' . ',' ',' ']'
   99 arrayindex: '[' . expression ']'
  100           | '[' . expression ',' expression ']'
  101           | '[' . expression ',' expression ',' expression ']'

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    ','        shift, and go to state 42
    ']'        shift, and go to state 43

    expression       go to state 140
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 219

  120 statement: IF '(' . expression ')' statement
  121          | IF '(' . expression ')' statement ELSE statement

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 231
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 220

  122 statement: WHILE '(' . expression ')' statement

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 232
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 221

  123 statement: FOR '(' . variables_e ';' expr_e ';' expr_e ')' statement

    IDENT   shift, and go to state 233
    BOOL    shift, and go to state 23
    DOUBLE  shift, and go to state 24
    INT     shift, and go to state 25
    OBJECT  shift, and go to state 26

    $default  reduce using rule 132 (variables_e)

    variable     go to state 234
    type         go to state 235
    noarraytype  go to state 29
    basictype    go to state 30
    arraytype    go to state 31
    variables_e  go to state 236


state 222

  136 expr_e: expression .

    $default  reduce using rule 136 (expr_e)


state 223

  129 statement: RETURN expr_e . ';'

    ';'  shift, and go to state 237


state 224

  128 statement: '{' @6 . statements '}'

    $default  reduce using rule 130 (statements)

    statements  go to state 238


state 225

   25 variables: variables . ',' variable
  125 statement: type variables . ';'

    ';'  shift, and go to state 239
    ','  shift, and go to state 48


state 226

  124 statement: expression ';' .

    $default  reduce using rule 124 (statement)


state 227

   18 function: accessmodif VOID IDENT '(' @5 args_e ')' '{' statements '}' .

    $default  reduce using rule 18 (function)


state 228

  101 arrayindex: '[' expression ',' expression ',' . expression ']'

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    expression       go to state 240
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76


state 229

  100 arrayindex: '[' expression ',' expression ']' .

    $default  reduce using rule 100 (arrayindex)


state 230

   16 function: accessmodif type IDENT '(' @4 args_e ')' '{' statements '}' .

    $default  reduce using rule 16 (function)


state 231

  120 statement: IF '(' expression . ')' statement
  121          | IF '(' expression . ')' statement ELSE statement

    ')'  shift, and go to state 241


state 232

  122 statement: WHILE '(' expression . ')' statement

    ')'  shift, and go to state 242


state 233

   26 variable: IDENT .
   27         | IDENT . '=' expression
   34 noarraytype: IDENT .
   40 arraytype: IDENT . '[' ']'
   41          | IDENT . '[' ',' ']'
   42          | IDENT . '[' ',' ',' ']'

    '='  shift, and go to state 45
    '['  shift, and go to state 34

    IDENT     reduce using rule 34 (noarraytype)
    $default  reduce using rule 26 (variable)


state 234

  134 variables_e: variable .

    $default  reduce using rule 134 (variables_e)


state 235

  133 variables_e: type . variables

    IDENT  shift, and go to state 78

    variables  go to state 243
    variable   go to state 38


state 236

  123 statement: FOR '(' variables_e . ';' expr_e ';' expr_e ')' statement

    ';'  shift, and go to state 244


state 237

  129 statement: RETURN expr_e ';' .

    $default  reduce using rule 129 (statement)


state 238

  128 statement: '{' @6 statements . '}'
  131 statements: statements . statement

    IDENT      shift, and go to state 199
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 200
    WHILE      shift, and go to state 201
    FOR        shift, and go to state 202
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 203
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 204
    '}'        shift, and go to state 245
    ';'        shift, and go to state 206

    type             go to state 207
    noarraytype      go to state 29
    basictype        go to state 30
    arraytype        go to state 31
    expression       go to state 208
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    statement        go to state 209


state 239

  125 statement: type variables ';' .

    $default  reduce using rule 125 (statement)


state 240

  101 arrayindex: '[' expression ',' expression ',' expression . ']'

    ']'  shift, and go to state 246


state 241

  120 statement: IF '(' expression ')' . statement
  121          | IF '(' expression ')' . statement ELSE statement

    IDENT      shift, and go to state 199
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 200
    WHILE      shift, and go to state 201
    FOR        shift, and go to state 202
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 203
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 204
    ';'        shift, and go to state 206

    type             go to state 207
    noarraytype      go to state 29
    basictype        go to state 30
    arraytype        go to state 31
    expression       go to state 208
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    statement        go to state 247


state 242

  122 statement: WHILE '(' expression ')' . statement

    IDENT      shift, and go to state 199
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 200
    WHILE      shift, and go to state 201
    FOR        shift, and go to state 202
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 203
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 204
    ';'        shift, and go to state 206

    type             go to state 207
    noarraytype      go to state 29
    basictype        go to state 30
    arraytype        go to state 31
    expression       go to state 208
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    statement        go to state 248


state 243

   25 variables: variables . ',' variable
  133 variables_e: type variables .

    ','  shift, and go to state 48

    $default  reduce using rule 133 (variables_e)


state 244

  123 statement: FOR '(' variables_e ';' . expr_e ';' expr_e ')' statement

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    $default  reduce using rule 135 (expr_e)

    expression       go to state 222
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    expr_e           go to state 249


state 245

  128 statement: '{' @6 statements '}' .

    $default  reduce using rule 128 (statement)


state 246

  101 arrayindex: '[' expression ',' expression ',' expression ']' .

    $default  reduce using rule 101 (arrayindex)


state 247

  120 statement: IF '(' expression ')' statement .
  121          | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 250

    $default  reduce using rule 120 (statement)


state 248

  122 statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 122 (statement)


state 249

  123 statement: FOR '(' variables_e ';' expr_e . ';' expr_e ')' statement

    ';'  shift, and go to state 251


state 250

  121 statement: IF '(' expression ')' statement ELSE . statement

    IDENT      shift, and go to state 199
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 200
    WHILE      shift, and go to state 201
    FOR        shift, and go to state 202
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 203
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 204
    ';'        shift, and go to state 206

    type             go to state 207
    noarraytype      go to state 29
    basictype        go to state 30
    arraytype        go to state 31
    expression       go to state 208
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    statement        go to state 252


state 251

  123 statement: FOR '(' variables_e ';' expr_e ';' . expr_e ')' statement

    IDENT      shift, and go to state 59
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72

    $default  reduce using rule 135 (expr_e)

    expression       go to state 222
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    expr_e           go to state 253


state 252

  121 statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 121 (statement)


state 253

  123 statement: FOR '(' variables_e ';' expr_e ';' expr_e . ')' statement

    ')'  shift, and go to state 254


state 254

  123 statement: FOR '(' variables_e ';' expr_e ';' expr_e ')' . statement

    IDENT      shift, and go to state 199
    INTEGER    shift, and go to state 60
    REAL       shift, and go to state 61
    BOOL       shift, and go to state 23
    DOUBLE     shift, and go to state 24
    INT        shift, and go to state 25
    OBJECT     shift, and go to state 26
    IF         shift, and go to state 200
    WHILE      shift, and go to state 201
    FOR        shift, and go to state 202
    FALSE      shift, and go to state 62
    TRUE       shift, and go to state 63
    NEW        shift, and go to state 64
    THIS       shift, and go to state 65
    NUL        shift, and go to state 66
    RETURN     shift, and go to state 203
    '+'        shift, and go to state 67
    '-'        shift, and go to state 68
    '!'        shift, and go to state 69
    DECREMENT  shift, and go to state 70
    INCREMENT  shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 204
    ';'        shift, and go to state 206

    type             go to state 207
    noarraytype      go to state 29
    basictype        go to state 30
    arraytype        go to state 31
    expression       go to state 208
    expr             go to state 74
    qualifiedname    go to state 75
    qualnameorarray  go to state 76
    statement        go to state 255


state 255

  123 statement: FOR '(' variables_e ';' expr_e ';' expr_e ')' statement .

    $default  reduce using rule 123 (statement)
