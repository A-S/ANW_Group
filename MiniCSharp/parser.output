Terminals which are not used

   EXTENDS
   INSTANCEOF


Grammar

    0 $accept: root $end

    1 root: /* empty */
    2     | root class

    3 class: CLASS IDENT '{' member '}'
    4      | CLASS IDENT ':' IDENT '{' member '}'

    5 member: /* empty */
    6       | member field

    7 field: global
    8      | constructor
    9      | function

   10 global: accessmodif type variables ';'
   11       | type variables ';'

   12 constructor: IDENT '(' arg_e ')' '{' statements '}'
   13            | accessmodif IDENT '(' arg_e ')' '{' statements '}'

   14 @1: /* empty */

   15 function: accessmodif type IDENT '(' @1 arg_e ')' '{' statements '}'

   16 @2: /* empty */

   17 function: accessmodif VOID IDENT '(' @2 arg_e ')' '{' statements '}'

   18 @3: /* empty */

   19 function: type IDENT '(' @3 arg_e ')' '{' statements '}'

   20 @4: /* empty */

   21 function: VOID IDENT '(' @4 arg_e ')' '{' statements '}'

   22 args: type IDENT

   23 arg: args
   24    | arg ',' args

   25 arg_e: /* empty */
   26      | arg

   27 variables: variable
   28          | variables ',' variable

   29 variable: IDENT
   30         | IDENT '=' expression

   31 accessmodif: PRIVATE
   32            | STATIC
   33            | PRIVATE STATIC

   34 type: noarraytype
   35     | arr_type

   36 noarraytype: IDENT
   37            | arraytype

   38 arraytype: BOOLEAN
   39          | INT
   40          | DOUBLE

   41 arr_type: IDENT '[' ']'
   42         | IDENT '[' ',' ']'
   43         | IDENT '[' ',' ',' ']'
   44         | arraytype '[' ']'
   45         | arraytype '[' ',' ']'
   46         | arraytype '[' ',' ',' ']'

   47 expression: expr
   48           | qualnameorarray

   49 expr: INCREMENT qualnameorarray
   50     | DECREMENT qualnameorarray
   51     | qualnameorarray INCREMENT
   52     | qualnameorarray DECREMENT
   53     | '!' expression
   54     | '-' expression
   55     | '+' expression
   56     | '(' expression ')'
   57     | qualnameorarray '=' expression
   58     | qualifiedname '(' expr_list_e ')'
   59     | qualifiedname '(' expr_list_e ')' arrayindex
   60     | NEW IDENT '(' expr_list_e ')'
   61     | NEW IDENT arrayindex
   62     | expr EQ expression
   63     | qualnameorarray EQ expression
   64     | expr NE expression
   65     | qualnameorarray NE expression
   66     | expr '<' expression
   67     | qualnameorarray '<' expression
   68     | expr SE expression
   69     | qualnameorarray SE expression
   70     | expr '>' expression
   71     | qualnameorarray '>' expression
   72     | expr LE expression
   73     | qualnameorarray LE expression
   74     | expr '+' expression
   75     | qualnameorarray '+' expression
   76     | expr '-' expression
   77     | qualnameorarray '-' expression
   78     | expr '*' expression
   79     | qualnameorarray '*' expression
   80     | expr '/' expression
   81     | qualnameorarray '/' expression
   82     | expr '%' expression
   83     | qualnameorarray '%' expression
   84     | expr AND expression
   85     | qualnameorarray AND expression
   86     | expr OR expression
   87     | qualnameorarray OR expression
   88     | expr IS type
   89     | qualnameorarray IS type
   90     | '(' arraytype ')' expression
   91     | INTEGER
   92     | REAL
   93     | TRUE
   94     | FALSE
   95     | THIS
   96     | NUL

   97 arrayindex: '[' expression ']'
   98           | '[' expression ',' expression ']'
   99           | '[' expression ',' expression ',' expression ']'

  100 qualifiedname: IDENT
  101              | expr '.' IDENT
  102              | qualnameorarray '.' IDENT

  103 qualnameorarray: IDENT
  104                | IDENT arrayindex
  105                | expr '.' IDENT
  106                | qualnameorarray '.' IDENT
  107                | expr '.' IDENT arrayindex
  108                | qualnameorarray '.' IDENT arrayindex

  109 expr_list: expression
  110          | expr_list ',' expression

  111 expr_list_e: /* empty */
  112            | expr_list

  113 statement: IF '(' expression ')' statement
  114          | IF '(' expression ')' statement ELSE statement
  115          | WHILE '(' expression ')' statement
  116          | FOR '(' vars_decl_e ';' expr_e ';' expr_e ')' statement
  117          | expression ';'
  118          | type variables ';'

  119 @5: /* empty */

  120 statement: '{' @5 statements '}'
  121          | RETURN expr_e ';'

  122 statements: /* empty */
  123           | statements statement

  124 vars_decl_e: /* empty */
  125            | type variables

  126 expr_e: /* empty */
  127       | expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 53
'%' (37) 82 83
'(' (40) 12 13 15 17 19 21 56 58 59 60 90 113 114 115 116
')' (41) 12 13 15 17 19 21 56 58 59 60 90 113 114 115 116
'*' (42) 78 79
'+' (43) 55 74 75
',' (44) 24 28 42 43 45 46 98 99 110
'-' (45) 54 76 77
'.' (46) 101 102 105 106 107 108
'/' (47) 80 81
':' (58) 4
';' (59) 10 11 116 117 118 121
'<' (60) 66 67
'=' (61) 30 57
'>' (62) 70 71
'[' (91) 41 42 43 44 45 46 97 98 99
']' (93) 41 42 43 44 45 46 97 98 99
'{' (123) 3 4 12 13 15 17 19 21 120
'}' (125) 3 4 12 13 15 17 19 21 120
error (256)
IDENT (258) 3 4 12 13 15 17 19 21 22 29 30 36 41 42 43 60 61 100 101
    102 103 104 105 106 107 108
INTEGER (259) 91
REAL (260) 92
CLASS (261) 3 4
BOOLEAN (262) 38
DOUBLE (263) 40
INT (264) 39
IS (265) 88 89
IF (266) 113 114
ELSE (267) 114
WHILE (268) 115
FOR (269) 116
FALSE (270) 94
TRUE (271) 93
EXTENDS (272)
INSTANCEOF (273)
NEW (274) 60 61
THIS (275) 95
NUL (276) 96
PRIVATE (277) 31 33
STATIC (278) 32 33
VOID (279) 17 21
RETURN (280) 121
EXPRESSION (281)
IF_PREC (282)
OR (283) 86 87
AND (284) 84 85
NE (285) 64 65
EQ (286) 62 63
SE (287) 68 69
LE (288) 72 73
UNARY_OP (289)
DECREMENT (290) 50 52
INCREMENT (291) 49 51
CAST (292)


Nonterminals, with rules where they appear

$accept (57)
    on left: 0
root (58)
    on left: 1 2, on right: 0 2
class (59)
    on left: 3 4, on right: 2
member (60)
    on left: 5 6, on right: 3 4 6
field (61)
    on left: 7 8 9, on right: 6
global (62)
    on left: 10 11, on right: 7
constructor (63)
    on left: 12 13, on right: 8
function (64)
    on left: 15 17 19 21, on right: 9
@1 (65)
    on left: 14, on right: 15
@2 (66)
    on left: 16, on right: 17
@3 (67)
    on left: 18, on right: 19
@4 (68)
    on left: 20, on right: 21
args (69)
    on left: 22, on right: 23 24
arg (70)
    on left: 23 24, on right: 24 26
arg_e (71)
    on left: 25 26, on right: 12 13 15 17 19 21
variables (72)
    on left: 27 28, on right: 10 11 28 118 125
variable (73)
    on left: 29 30, on right: 27 28
accessmodif (74)
    on left: 31 32 33, on right: 10 13 15 17
type (75)
    on left: 34 35, on right: 10 11 15 19 22 88 89 118 125
noarraytype (76)
    on left: 36 37, on right: 34
arraytype (77)
    on left: 38 39 40, on right: 37 44 45 46 90
arr_type (78)
    on left: 41 42 43 44 45 46, on right: 35
expression (79)
    on left: 47 48, on right: 30 53 54 55 56 57 62 63 64 65 66 67 68
    69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 90 97
    98 99 109 110 113 114 115 117 127
expr (80)
    on left: 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66
    67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87
    88 89 90 91 92 93 94 95 96, on right: 47 62 64 66 68 70 72 74 76
    78 80 82 84 86 88 101 105 107
arrayindex (81)
    on left: 97 98 99, on right: 59 61 104 107 108
qualifiedname (82)
    on left: 100 101 102, on right: 58 59
qualnameorarray (83)
    on left: 103 104 105 106 107 108, on right: 48 49 50 51 52 57 63
    65 67 69 71 73 75 77 79 81 83 85 87 89 102 106 108
expr_list (84)
    on left: 109 110, on right: 110 112
expr_list_e (85)
    on left: 111 112, on right: 58 59 60
statement (86)
    on left: 113 114 115 116 117 118 120 121, on right: 113 114 115
    116 123
@5 (87)
    on left: 119, on right: 120
statements (88)
    on left: 122 123, on right: 12 13 15 17 19 21 120 123
vars_decl_e (89)
    on left: 124 125, on right: 116
expr_e (90)
    on left: 126 127, on right: 116 121


state 0

    0 $accept: . root $end

    $default  reduce using rule 1 (root)

    root  go to state 1


state 1

    0 $accept: root . $end
    2 root: root . class

    $end   shift, and go to state 2
    CLASS  shift, and go to state 3

    class  go to state 4


state 2

    0 $accept: root $end .

    $default  accept


state 3

    3 class: CLASS . IDENT '{' member '}'
    4      | CLASS . IDENT ':' IDENT '{' member '}'

    IDENT  shift, and go to state 5


state 4

    2 root: root class .

    $default  reduce using rule 2 (root)


state 5

    3 class: CLASS IDENT . '{' member '}'
    4      | CLASS IDENT . ':' IDENT '{' member '}'

    '{'  shift, and go to state 6
    ':'  shift, and go to state 7


state 6

    3 class: CLASS IDENT '{' . member '}'

    $default  reduce using rule 5 (member)

    member  go to state 8


state 7

    4 class: CLASS IDENT ':' . IDENT '{' member '}'

    IDENT  shift, and go to state 9


state 8

    3 class: CLASS IDENT '{' member . '}'
    6 member: member . field

    IDENT    shift, and go to state 10
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13
    PRIVATE  shift, and go to state 14
    STATIC   shift, and go to state 15
    VOID     shift, and go to state 16
    '}'      shift, and go to state 17

    field        go to state 18
    global       go to state 19
    constructor  go to state 20
    function     go to state 21
    accessmodif  go to state 22
    type         go to state 23
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 9

    4 class: CLASS IDENT ':' IDENT . '{' member '}'

    '{'  shift, and go to state 27


state 10

   12 constructor: IDENT . '(' arg_e ')' '{' statements '}'
   36 noarraytype: IDENT .
   41 arr_type: IDENT . '[' ']'
   42         | IDENT . '[' ',' ']'
   43         | IDENT . '[' ',' ',' ']'

    '('  shift, and go to state 28
    '['  shift, and go to state 29

    $default  reduce using rule 36 (noarraytype)


state 11

   38 arraytype: BOOLEAN .

    $default  reduce using rule 38 (arraytype)


state 12

   40 arraytype: DOUBLE .

    $default  reduce using rule 40 (arraytype)


state 13

   39 arraytype: INT .

    $default  reduce using rule 39 (arraytype)


state 14

   31 accessmodif: PRIVATE .
   33            | PRIVATE . STATIC

    STATIC  shift, and go to state 30

    $default  reduce using rule 31 (accessmodif)


state 15

   32 accessmodif: STATIC .

    $default  reduce using rule 32 (accessmodif)


state 16

   21 function: VOID . IDENT '(' @4 arg_e ')' '{' statements '}'

    IDENT  shift, and go to state 31


state 17

    3 class: CLASS IDENT '{' member '}' .

    $default  reduce using rule 3 (class)


state 18

    6 member: member field .

    $default  reduce using rule 6 (member)


state 19

    7 field: global .

    $default  reduce using rule 7 (field)


state 20

    8 field: constructor .

    $default  reduce using rule 8 (field)


state 21

    9 field: function .

    $default  reduce using rule 9 (field)


state 22

   10 global: accessmodif . type variables ';'
   13 constructor: accessmodif . IDENT '(' arg_e ')' '{' statements '}'
   15 function: accessmodif . type IDENT '(' @1 arg_e ')' '{' statements '}'
   17         | accessmodif . VOID IDENT '(' @2 arg_e ')' '{' statements '}'

    IDENT    shift, and go to state 32
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13
    VOID     shift, and go to state 33

    type         go to state 34
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 23

   11 global: type . variables ';'
   19 function: type . IDENT '(' @3 arg_e ')' '{' statements '}'

    IDENT  shift, and go to state 35

    variables  go to state 36
    variable   go to state 37


state 24

   34 type: noarraytype .

    $default  reduce using rule 34 (type)


state 25

   37 noarraytype: arraytype .
   44 arr_type: arraytype . '[' ']'
   45         | arraytype . '[' ',' ']'
   46         | arraytype . '[' ',' ',' ']'

    '['  shift, and go to state 38

    $default  reduce using rule 37 (noarraytype)


state 26

   35 type: arr_type .

    $default  reduce using rule 35 (type)


state 27

    4 class: CLASS IDENT ':' IDENT '{' . member '}'

    $default  reduce using rule 5 (member)

    member  go to state 39


state 28

   12 constructor: IDENT '(' . arg_e ')' '{' statements '}'

    IDENT    shift, and go to state 40
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13

    $default  reduce using rule 25 (arg_e)

    args         go to state 41
    arg          go to state 42
    arg_e        go to state 43
    type         go to state 44
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 29

   41 arr_type: IDENT '[' . ']'
   42         | IDENT '[' . ',' ']'
   43         | IDENT '[' . ',' ',' ']'

    ','  shift, and go to state 45
    ']'  shift, and go to state 46


state 30

   33 accessmodif: PRIVATE STATIC .

    $default  reduce using rule 33 (accessmodif)


state 31

   21 function: VOID IDENT . '(' @4 arg_e ')' '{' statements '}'

    '('  shift, and go to state 47


state 32

   13 constructor: accessmodif IDENT . '(' arg_e ')' '{' statements '}'
   36 noarraytype: IDENT .
   41 arr_type: IDENT . '[' ']'
   42         | IDENT . '[' ',' ']'
   43         | IDENT . '[' ',' ',' ']'

    '('  shift, and go to state 48
    '['  shift, and go to state 29

    $default  reduce using rule 36 (noarraytype)


state 33

   17 function: accessmodif VOID . IDENT '(' @2 arg_e ')' '{' statements '}'

    IDENT  shift, and go to state 49


state 34

   10 global: accessmodif type . variables ';'
   15 function: accessmodif type . IDENT '(' @1 arg_e ')' '{' statements '}'

    IDENT  shift, and go to state 50

    variables  go to state 51
    variable   go to state 37


state 35

   19 function: type IDENT . '(' @3 arg_e ')' '{' statements '}'
   29 variable: IDENT .
   30         | IDENT . '=' expression

    '='  shift, and go to state 52
    '('  shift, and go to state 53

    $default  reduce using rule 29 (variable)


state 36

   11 global: type variables . ';'
   28 variables: variables . ',' variable

    ';'  shift, and go to state 54
    ','  shift, and go to state 55


state 37

   27 variables: variable .

    $default  reduce using rule 27 (variables)


state 38

   44 arr_type: arraytype '[' . ']'
   45         | arraytype '[' . ',' ']'
   46         | arraytype '[' . ',' ',' ']'

    ','  shift, and go to state 56
    ']'  shift, and go to state 57


state 39

    4 class: CLASS IDENT ':' IDENT '{' member . '}'
    6 member: member . field

    IDENT    shift, and go to state 10
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13
    PRIVATE  shift, and go to state 14
    STATIC   shift, and go to state 15
    VOID     shift, and go to state 16
    '}'      shift, and go to state 58

    field        go to state 18
    global       go to state 19
    constructor  go to state 20
    function     go to state 21
    accessmodif  go to state 22
    type         go to state 23
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 40

   36 noarraytype: IDENT .
   41 arr_type: IDENT . '[' ']'
   42         | IDENT . '[' ',' ']'
   43         | IDENT . '[' ',' ',' ']'

    '['  shift, and go to state 29

    $default  reduce using rule 36 (noarraytype)


state 41

   23 arg: args .

    $default  reduce using rule 23 (arg)


state 42

   24 arg: arg . ',' args
   26 arg_e: arg .

    ','  shift, and go to state 59

    $default  reduce using rule 26 (arg_e)


state 43

   12 constructor: IDENT '(' arg_e . ')' '{' statements '}'

    ')'  shift, and go to state 60


state 44

   22 args: type . IDENT

    IDENT  shift, and go to state 61


state 45

   42 arr_type: IDENT '[' ',' . ']'
   43         | IDENT '[' ',' . ',' ']'

    ','  shift, and go to state 62
    ']'  shift, and go to state 63


state 46

   41 arr_type: IDENT '[' ']' .

    $default  reduce using rule 41 (arr_type)


state 47

   21 function: VOID IDENT '(' . @4 arg_e ')' '{' statements '}'

    $default  reduce using rule 20 (@4)

    @4  go to state 64


state 48

   13 constructor: accessmodif IDENT '(' . arg_e ')' '{' statements '}'

    IDENT    shift, and go to state 40
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13

    $default  reduce using rule 25 (arg_e)

    args         go to state 41
    arg          go to state 42
    arg_e        go to state 65
    type         go to state 44
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 49

   17 function: accessmodif VOID IDENT . '(' @2 arg_e ')' '{' statements '}'

    '('  shift, and go to state 66


state 50

   15 function: accessmodif type IDENT . '(' @1 arg_e ')' '{' statements '}'
   29 variable: IDENT .
   30         | IDENT . '=' expression

    '='  shift, and go to state 52
    '('  shift, and go to state 67

    $default  reduce using rule 29 (variable)


state 51

   10 global: accessmodif type variables . ';'
   28 variables: variables . ',' variable

    ';'  shift, and go to state 68
    ','  shift, and go to state 55


state 52

   30 variable: IDENT '=' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 83
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 53

   19 function: type IDENT '(' . @3 arg_e ')' '{' statements '}'

    $default  reduce using rule 18 (@3)

    @3  go to state 87


state 54

   11 global: type variables ';' .

    $default  reduce using rule 11 (global)


state 55

   28 variables: variables ',' . variable

    IDENT  shift, and go to state 88

    variable  go to state 89


state 56

   45 arr_type: arraytype '[' ',' . ']'
   46         | arraytype '[' ',' . ',' ']'

    ','  shift, and go to state 90
    ']'  shift, and go to state 91


state 57

   44 arr_type: arraytype '[' ']' .

    $default  reduce using rule 44 (arr_type)


state 58

    4 class: CLASS IDENT ':' IDENT '{' member '}' .

    $default  reduce using rule 4 (class)


state 59

   24 arg: arg ',' . args

    IDENT    shift, and go to state 40
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13

    args         go to state 92
    type         go to state 44
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 60

   12 constructor: IDENT '(' arg_e ')' . '{' statements '}'

    '{'  shift, and go to state 93


state 61

   22 args: type IDENT .

    $default  reduce using rule 22 (args)


state 62

   43 arr_type: IDENT '[' ',' ',' . ']'

    ']'  shift, and go to state 94


state 63

   42 arr_type: IDENT '[' ',' ']' .

    $default  reduce using rule 42 (arr_type)


state 64

   21 function: VOID IDENT '(' @4 . arg_e ')' '{' statements '}'

    IDENT    shift, and go to state 40
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13

    $default  reduce using rule 25 (arg_e)

    args         go to state 41
    arg          go to state 42
    arg_e        go to state 95
    type         go to state 44
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 65

   13 constructor: accessmodif IDENT '(' arg_e . ')' '{' statements '}'

    ')'  shift, and go to state 96


state 66

   17 function: accessmodif VOID IDENT '(' . @2 arg_e ')' '{' statements '}'

    $default  reduce using rule 16 (@2)

    @2  go to state 97


state 67

   15 function: accessmodif type IDENT '(' . @1 arg_e ')' '{' statements '}'

    $default  reduce using rule 14 (@1)

    @1  go to state 98


state 68

   10 global: accessmodif type variables ';' .

    $default  reduce using rule 10 (global)


state 69

  100 qualifiedname: IDENT .
  103 qualnameorarray: IDENT .
  104                | IDENT . arrayindex

    '['  shift, and go to state 99

    '('       reduce using rule 100 (qualifiedname)
    $default  reduce using rule 103 (qualnameorarray)

    arrayindex  go to state 100


state 70

   91 expr: INTEGER .

    $default  reduce using rule 91 (expr)


state 71

   92 expr: REAL .

    $default  reduce using rule 92 (expr)


state 72

   94 expr: FALSE .

    $default  reduce using rule 94 (expr)


state 73

   93 expr: TRUE .

    $default  reduce using rule 93 (expr)


state 74

   60 expr: NEW . IDENT '(' expr_list_e ')'
   61     | NEW . IDENT arrayindex

    IDENT  shift, and go to state 101


state 75

   95 expr: THIS .

    $default  reduce using rule 95 (expr)


state 76

   96 expr: NUL .

    $default  reduce using rule 96 (expr)


state 77

   55 expr: '+' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 102
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 78

   54 expr: '-' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 103
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 79

   53 expr: '!' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 104
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 80

   50 expr: DECREMENT . qualnameorarray

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expr             go to state 105
    qualifiedname    go to state 85
    qualnameorarray  go to state 106


state 81

   49 expr: INCREMENT . qualnameorarray

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expr             go to state 105
    qualifiedname    go to state 85
    qualnameorarray  go to state 107


state 82

   56 expr: '(' . expression ')'
   90     | '(' . arraytype ')' expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    arraytype        go to state 108
    expression       go to state 109
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 83

   30 variable: IDENT '=' expression .

    $default  reduce using rule 30 (variable)


state 84

   47 expression: expr .
   62 expr: expr . EQ expression
   64     | expr . NE expression
   66     | expr . '<' expression
   68     | expr . SE expression
   70     | expr . '>' expression
   72     | expr . LE expression
   74     | expr . '+' expression
   76     | expr . '-' expression
   78     | expr . '*' expression
   80     | expr . '/' expression
   82     | expr . '%' expression
   84     | expr . AND expression
   86     | expr . OR expression
   88     | expr . IS type
  101 qualifiedname: expr . '.' IDENT
  105 qualnameorarray: expr . '.' IDENT
  107                | expr . '.' IDENT arrayindex

    IS   shift, and go to state 110
    OR   shift, and go to state 111
    AND  shift, and go to state 112
    NE   shift, and go to state 113
    EQ   shift, and go to state 114
    '>'  shift, and go to state 115
    '<'  shift, and go to state 116
    SE   shift, and go to state 117
    LE   shift, and go to state 118
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124

    $default  reduce using rule 47 (expression)


state 85

   58 expr: qualifiedname . '(' expr_list_e ')'
   59     | qualifiedname . '(' expr_list_e ')' arrayindex

    '('  shift, and go to state 125


state 86

   48 expression: qualnameorarray .
   51 expr: qualnameorarray . INCREMENT
   52     | qualnameorarray . DECREMENT
   57     | qualnameorarray . '=' expression
   63     | qualnameorarray . EQ expression
   65     | qualnameorarray . NE expression
   67     | qualnameorarray . '<' expression
   69     | qualnameorarray . SE expression
   71     | qualnameorarray . '>' expression
   73     | qualnameorarray . LE expression
   75     | qualnameorarray . '+' expression
   77     | qualnameorarray . '-' expression
   79     | qualnameorarray . '*' expression
   81     | qualnameorarray . '/' expression
   83     | qualnameorarray . '%' expression
   85     | qualnameorarray . AND expression
   87     | qualnameorarray . OR expression
   89     | qualnameorarray . IS type
  102 qualifiedname: qualnameorarray . '.' IDENT
  106 qualnameorarray: qualnameorarray . '.' IDENT
  108                | qualnameorarray . '.' IDENT arrayindex

    IS         shift, and go to state 126
    '='        shift, and go to state 127
    OR         shift, and go to state 128
    AND        shift, and go to state 129
    NE         shift, and go to state 130
    EQ         shift, and go to state 131
    '>'        shift, and go to state 132
    '<'        shift, and go to state 133
    SE         shift, and go to state 134
    LE         shift, and go to state 135
    '+'        shift, and go to state 136
    '-'        shift, and go to state 137
    '*'        shift, and go to state 138
    '/'        shift, and go to state 139
    '%'        shift, and go to state 140
    DECREMENT  shift, and go to state 141
    INCREMENT  shift, and go to state 142
    '.'        shift, and go to state 143

    $default  reduce using rule 48 (expression)


state 87

   19 function: type IDENT '(' @3 . arg_e ')' '{' statements '}'

    IDENT    shift, and go to state 40
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13

    $default  reduce using rule 25 (arg_e)

    args         go to state 41
    arg          go to state 42
    arg_e        go to state 144
    type         go to state 44
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 88

   29 variable: IDENT .
   30         | IDENT . '=' expression

    '='  shift, and go to state 52

    $default  reduce using rule 29 (variable)


state 89

   28 variables: variables ',' variable .

    $default  reduce using rule 28 (variables)


state 90

   46 arr_type: arraytype '[' ',' ',' . ']'

    ']'  shift, and go to state 145


state 91

   45 arr_type: arraytype '[' ',' ']' .

    $default  reduce using rule 45 (arr_type)


state 92

   24 arg: arg ',' args .

    $default  reduce using rule 24 (arg)


state 93

   12 constructor: IDENT '(' arg_e ')' '{' . statements '}'

    $default  reduce using rule 122 (statements)

    statements  go to state 146


state 94

   43 arr_type: IDENT '[' ',' ',' ']' .

    $default  reduce using rule 43 (arr_type)


state 95

   21 function: VOID IDENT '(' @4 arg_e . ')' '{' statements '}'

    ')'  shift, and go to state 147


state 96

   13 constructor: accessmodif IDENT '(' arg_e ')' . '{' statements '}'

    '{'  shift, and go to state 148


state 97

   17 function: accessmodif VOID IDENT '(' @2 . arg_e ')' '{' statements '}'

    IDENT    shift, and go to state 40
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13

    $default  reduce using rule 25 (arg_e)

    args         go to state 41
    arg          go to state 42
    arg_e        go to state 149
    type         go to state 44
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 98

   15 function: accessmodif type IDENT '(' @1 . arg_e ')' '{' statements '}'

    IDENT    shift, and go to state 40
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13

    $default  reduce using rule 25 (arg_e)

    args         go to state 41
    arg          go to state 42
    arg_e        go to state 150
    type         go to state 44
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 99

   97 arrayindex: '[' . expression ']'
   98           | '[' . expression ',' expression ']'
   99           | '[' . expression ',' expression ',' expression ']'

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 151
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 100

  104 qualnameorarray: IDENT arrayindex .

    $default  reduce using rule 104 (qualnameorarray)


state 101

   60 expr: NEW IDENT . '(' expr_list_e ')'
   61     | NEW IDENT . arrayindex

    '('  shift, and go to state 152
    '['  shift, and go to state 99

    arrayindex  go to state 153


state 102

   55 expr: '+' expression .

    $default  reduce using rule 55 (expr)


state 103

   54 expr: '-' expression .

    $default  reduce using rule 54 (expr)


state 104

   53 expr: '!' expression .

    $default  reduce using rule 53 (expr)


state 105

   62 expr: expr . EQ expression
   64     | expr . NE expression
   66     | expr . '<' expression
   68     | expr . SE expression
   70     | expr . '>' expression
   72     | expr . LE expression
   74     | expr . '+' expression
   76     | expr . '-' expression
   78     | expr . '*' expression
   80     | expr . '/' expression
   82     | expr . '%' expression
   84     | expr . AND expression
   86     | expr . OR expression
   88     | expr . IS type
  101 qualifiedname: expr . '.' IDENT
  105 qualnameorarray: expr . '.' IDENT
  107                | expr . '.' IDENT arrayindex

    IS   shift, and go to state 110
    OR   shift, and go to state 111
    AND  shift, and go to state 112
    NE   shift, and go to state 113
    EQ   shift, and go to state 114
    '>'  shift, and go to state 115
    '<'  shift, and go to state 116
    SE   shift, and go to state 117
    LE   shift, and go to state 118
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124


state 106

   50 expr: DECREMENT qualnameorarray .
   51     | qualnameorarray . INCREMENT
   52     | qualnameorarray . DECREMENT
   57     | qualnameorarray . '=' expression
   63     | qualnameorarray . EQ expression
   65     | qualnameorarray . NE expression
   67     | qualnameorarray . '<' expression
   69     | qualnameorarray . SE expression
   71     | qualnameorarray . '>' expression
   73     | qualnameorarray . LE expression
   75     | qualnameorarray . '+' expression
   77     | qualnameorarray . '-' expression
   79     | qualnameorarray . '*' expression
   81     | qualnameorarray . '/' expression
   83     | qualnameorarray . '%' expression
   85     | qualnameorarray . AND expression
   87     | qualnameorarray . OR expression
   89     | qualnameorarray . IS type
  102 qualifiedname: qualnameorarray . '.' IDENT
  106 qualnameorarray: qualnameorarray . '.' IDENT
  108                | qualnameorarray . '.' IDENT arrayindex

    '='        shift, and go to state 127
    DECREMENT  shift, and go to state 141
    INCREMENT  shift, and go to state 142
    '.'        shift, and go to state 143

    $default  reduce using rule 50 (expr)


state 107

   49 expr: INCREMENT qualnameorarray .
   51     | qualnameorarray . INCREMENT
   52     | qualnameorarray . DECREMENT
   57     | qualnameorarray . '=' expression
   63     | qualnameorarray . EQ expression
   65     | qualnameorarray . NE expression
   67     | qualnameorarray . '<' expression
   69     | qualnameorarray . SE expression
   71     | qualnameorarray . '>' expression
   73     | qualnameorarray . LE expression
   75     | qualnameorarray . '+' expression
   77     | qualnameorarray . '-' expression
   79     | qualnameorarray . '*' expression
   81     | qualnameorarray . '/' expression
   83     | qualnameorarray . '%' expression
   85     | qualnameorarray . AND expression
   87     | qualnameorarray . OR expression
   89     | qualnameorarray . IS type
  102 qualifiedname: qualnameorarray . '.' IDENT
  106 qualnameorarray: qualnameorarray . '.' IDENT
  108                | qualnameorarray . '.' IDENT arrayindex

    '='        shift, and go to state 127
    DECREMENT  shift, and go to state 141
    INCREMENT  shift, and go to state 142
    '.'        shift, and go to state 143

    $default  reduce using rule 49 (expr)


state 108

   90 expr: '(' arraytype . ')' expression

    ')'  shift, and go to state 154


state 109

   56 expr: '(' expression . ')'

    ')'  shift, and go to state 155


state 110

   88 expr: expr IS . type

    IDENT    shift, and go to state 40
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13

    type         go to state 156
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 111

   86 expr: expr OR . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 157
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 112

   84 expr: expr AND . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 158
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 113

   64 expr: expr NE . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 159
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 114

   62 expr: expr EQ . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 160
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 115

   70 expr: expr '>' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 161
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 116

   66 expr: expr '<' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 162
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 117

   68 expr: expr SE . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 163
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 118

   72 expr: expr LE . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 164
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 119

   74 expr: expr '+' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 165
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 120

   76 expr: expr '-' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 166
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 121

   78 expr: expr '*' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 167
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 122

   80 expr: expr '/' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 168
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 123

   82 expr: expr '%' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 169
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 124

  101 qualifiedname: expr '.' . IDENT
  105 qualnameorarray: expr '.' . IDENT
  107                | expr '.' . IDENT arrayindex

    IDENT  shift, and go to state 170


state 125

   58 expr: qualifiedname '(' . expr_list_e ')'
   59     | qualifiedname '(' . expr_list_e ')' arrayindex

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    $default  reduce using rule 111 (expr_list_e)

    expression       go to state 171
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    expr_list        go to state 172
    expr_list_e      go to state 173


state 126

   89 expr: qualnameorarray IS . type

    IDENT    shift, and go to state 40
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13

    type         go to state 174
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 127

   57 expr: qualnameorarray '=' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 175
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 128

   87 expr: qualnameorarray OR . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 176
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 129

   85 expr: qualnameorarray AND . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 177
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 130

   65 expr: qualnameorarray NE . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 178
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 131

   63 expr: qualnameorarray EQ . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 179
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 132

   71 expr: qualnameorarray '>' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 180
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 133

   67 expr: qualnameorarray '<' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 181
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 134

   69 expr: qualnameorarray SE . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 182
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 135

   73 expr: qualnameorarray LE . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 183
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 136

   75 expr: qualnameorarray '+' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 184
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 137

   77 expr: qualnameorarray '-' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 185
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 138

   79 expr: qualnameorarray '*' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 186
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 139

   81 expr: qualnameorarray '/' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 187
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 140

   83 expr: qualnameorarray '%' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 188
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 141

   52 expr: qualnameorarray DECREMENT .

    $default  reduce using rule 52 (expr)


state 142

   51 expr: qualnameorarray INCREMENT .

    $default  reduce using rule 51 (expr)


state 143

  102 qualifiedname: qualnameorarray '.' . IDENT
  106 qualnameorarray: qualnameorarray '.' . IDENT
  108                | qualnameorarray '.' . IDENT arrayindex

    IDENT  shift, and go to state 189


state 144

   19 function: type IDENT '(' @3 arg_e . ')' '{' statements '}'

    ')'  shift, and go to state 190


state 145

   46 arr_type: arraytype '[' ',' ',' ']' .

    $default  reduce using rule 46 (arr_type)


state 146

   12 constructor: IDENT '(' arg_e ')' '{' statements . '}'
  123 statements: statements . statement

    IDENT      shift, and go to state 191
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 192
    WHILE      shift, and go to state 193
    FOR        shift, and go to state 194
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 195
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 196
    '}'        shift, and go to state 197

    type             go to state 198
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 199
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    statement        go to state 200


state 147

   21 function: VOID IDENT '(' @4 arg_e ')' . '{' statements '}'

    '{'  shift, and go to state 201


state 148

   13 constructor: accessmodif IDENT '(' arg_e ')' '{' . statements '}'

    $default  reduce using rule 122 (statements)

    statements  go to state 202


state 149

   17 function: accessmodif VOID IDENT '(' @2 arg_e . ')' '{' statements '}'

    ')'  shift, and go to state 203


state 150

   15 function: accessmodif type IDENT '(' @1 arg_e . ')' '{' statements '}'

    ')'  shift, and go to state 204


state 151

   97 arrayindex: '[' expression . ']'
   98           | '[' expression . ',' expression ']'
   99           | '[' expression . ',' expression ',' expression ']'

    ','  shift, and go to state 205
    ']'  shift, and go to state 206


state 152

   60 expr: NEW IDENT '(' . expr_list_e ')'

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    $default  reduce using rule 111 (expr_list_e)

    expression       go to state 171
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    expr_list        go to state 172
    expr_list_e      go to state 207


state 153

   61 expr: NEW IDENT arrayindex .

    $default  reduce using rule 61 (expr)


state 154

   90 expr: '(' arraytype ')' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 208
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 155

   56 expr: '(' expression ')' .

    $default  reduce using rule 56 (expr)


state 156

   88 expr: expr IS type .

    $default  reduce using rule 88 (expr)


state 157

   86 expr: expr OR expression .

    $default  reduce using rule 86 (expr)


state 158

   84 expr: expr AND expression .

    $default  reduce using rule 84 (expr)


state 159

   64 expr: expr NE expression .

    $default  reduce using rule 64 (expr)


state 160

   62 expr: expr EQ expression .

    $default  reduce using rule 62 (expr)


state 161

   70 expr: expr '>' expression .

    $default  reduce using rule 70 (expr)


state 162

   66 expr: expr '<' expression .

    $default  reduce using rule 66 (expr)


state 163

   68 expr: expr SE expression .

    $default  reduce using rule 68 (expr)


state 164

   72 expr: expr LE expression .

    $default  reduce using rule 72 (expr)


state 165

   74 expr: expr '+' expression .

    $default  reduce using rule 74 (expr)


state 166

   76 expr: expr '-' expression .

    $default  reduce using rule 76 (expr)


state 167

   78 expr: expr '*' expression .

    $default  reduce using rule 78 (expr)


state 168

   80 expr: expr '/' expression .

    $default  reduce using rule 80 (expr)


state 169

   82 expr: expr '%' expression .

    $default  reduce using rule 82 (expr)


state 170

  101 qualifiedname: expr '.' IDENT .
  105 qualnameorarray: expr '.' IDENT .
  107                | expr '.' IDENT . arrayindex

    '['  shift, and go to state 99

    '('       reduce using rule 101 (qualifiedname)
    $default  reduce using rule 105 (qualnameorarray)

    arrayindex  go to state 209


state 171

  109 expr_list: expression .

    $default  reduce using rule 109 (expr_list)


state 172

  110 expr_list: expr_list . ',' expression
  112 expr_list_e: expr_list .

    ','  shift, and go to state 210

    $default  reduce using rule 112 (expr_list_e)


state 173

   58 expr: qualifiedname '(' expr_list_e . ')'
   59     | qualifiedname '(' expr_list_e . ')' arrayindex

    ')'  shift, and go to state 211


state 174

   89 expr: qualnameorarray IS type .

    $default  reduce using rule 89 (expr)


state 175

   57 expr: qualnameorarray '=' expression .

    $default  reduce using rule 57 (expr)


state 176

   87 expr: qualnameorarray OR expression .

    $default  reduce using rule 87 (expr)


state 177

   85 expr: qualnameorarray AND expression .

    $default  reduce using rule 85 (expr)


state 178

   65 expr: qualnameorarray NE expression .

    $default  reduce using rule 65 (expr)


state 179

   63 expr: qualnameorarray EQ expression .

    $default  reduce using rule 63 (expr)


state 180

   71 expr: qualnameorarray '>' expression .

    $default  reduce using rule 71 (expr)


state 181

   67 expr: qualnameorarray '<' expression .

    $default  reduce using rule 67 (expr)


state 182

   69 expr: qualnameorarray SE expression .

    $default  reduce using rule 69 (expr)


state 183

   73 expr: qualnameorarray LE expression .

    $default  reduce using rule 73 (expr)


state 184

   75 expr: qualnameorarray '+' expression .

    $default  reduce using rule 75 (expr)


state 185

   77 expr: qualnameorarray '-' expression .

    $default  reduce using rule 77 (expr)


state 186

   79 expr: qualnameorarray '*' expression .

    $default  reduce using rule 79 (expr)


state 187

   81 expr: qualnameorarray '/' expression .

    $default  reduce using rule 81 (expr)


state 188

   83 expr: qualnameorarray '%' expression .

    $default  reduce using rule 83 (expr)


state 189

  102 qualifiedname: qualnameorarray '.' IDENT .
  106 qualnameorarray: qualnameorarray '.' IDENT .
  108                | qualnameorarray '.' IDENT . arrayindex

    '['  shift, and go to state 99

    '('       reduce using rule 102 (qualifiedname)
    $default  reduce using rule 106 (qualnameorarray)

    arrayindex  go to state 212


state 190

   19 function: type IDENT '(' @3 arg_e ')' . '{' statements '}'

    '{'  shift, and go to state 213


state 191

   36 noarraytype: IDENT .
   41 arr_type: IDENT . '[' ']'
   42         | IDENT . '[' ',' ']'
   43         | IDENT . '[' ',' ',' ']'
  100 qualifiedname: IDENT .
  103 qualnameorarray: IDENT .
  104                | IDENT . arrayindex

    '['  shift, and go to state 214

    IDENT     reduce using rule 36 (noarraytype)
    '('       reduce using rule 100 (qualifiedname)
    $default  reduce using rule 103 (qualnameorarray)

    arrayindex  go to state 100


state 192

  113 statement: IF . '(' expression ')' statement
  114          | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 215


state 193

  115 statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 216


state 194

  116 statement: FOR . '(' vars_decl_e ';' expr_e ';' expr_e ')' statement

    '('  shift, and go to state 217


state 195

  121 statement: RETURN . expr_e ';'

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    $default  reduce using rule 126 (expr_e)

    expression       go to state 218
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    expr_e           go to state 219


state 196

  120 statement: '{' . @5 statements '}'

    $default  reduce using rule 119 (@5)

    @5  go to state 220


state 197

   12 constructor: IDENT '(' arg_e ')' '{' statements '}' .

    $default  reduce using rule 12 (constructor)


state 198

  118 statement: type . variables ';'

    IDENT  shift, and go to state 88

    variables  go to state 221
    variable   go to state 37


state 199

  117 statement: expression . ';'

    ';'  shift, and go to state 222


state 200

  123 statements: statements statement .

    $default  reduce using rule 123 (statements)


state 201

   21 function: VOID IDENT '(' @4 arg_e ')' '{' . statements '}'

    $default  reduce using rule 122 (statements)

    statements  go to state 223


state 202

   13 constructor: accessmodif IDENT '(' arg_e ')' '{' statements . '}'
  123 statements: statements . statement

    IDENT      shift, and go to state 191
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 192
    WHILE      shift, and go to state 193
    FOR        shift, and go to state 194
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 195
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 196
    '}'        shift, and go to state 224

    type             go to state 198
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 199
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    statement        go to state 200


state 203

   17 function: accessmodif VOID IDENT '(' @2 arg_e ')' . '{' statements '}'

    '{'  shift, and go to state 225


state 204

   15 function: accessmodif type IDENT '(' @1 arg_e ')' . '{' statements '}'

    '{'  shift, and go to state 226


state 205

   98 arrayindex: '[' expression ',' . expression ']'
   99           | '[' expression ',' . expression ',' expression ']'

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 227
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 206

   97 arrayindex: '[' expression ']' .

    $default  reduce using rule 97 (arrayindex)


state 207

   60 expr: NEW IDENT '(' expr_list_e . ')'

    ')'  shift, and go to state 228


state 208

   90 expr: '(' arraytype ')' expression .

    $default  reduce using rule 90 (expr)


state 209

  107 qualnameorarray: expr '.' IDENT arrayindex .

    $default  reduce using rule 107 (qualnameorarray)


state 210

  110 expr_list: expr_list ',' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 229
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 211

   58 expr: qualifiedname '(' expr_list_e ')' .
   59     | qualifiedname '(' expr_list_e ')' . arrayindex

    '['  shift, and go to state 99

    $default  reduce using rule 58 (expr)

    arrayindex  go to state 230


state 212

  108 qualnameorarray: qualnameorarray '.' IDENT arrayindex .

    $default  reduce using rule 108 (qualnameorarray)


state 213

   19 function: type IDENT '(' @3 arg_e ')' '{' . statements '}'

    $default  reduce using rule 122 (statements)

    statements  go to state 231


state 214

   41 arr_type: IDENT '[' . ']'
   42         | IDENT '[' . ',' ']'
   43         | IDENT '[' . ',' ',' ']'
   97 arrayindex: '[' . expression ']'
   98           | '[' . expression ',' expression ']'
   99           | '[' . expression ',' expression ',' expression ']'

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    ','        shift, and go to state 45
    ']'        shift, and go to state 46

    expression       go to state 151
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 215

  113 statement: IF '(' . expression ')' statement
  114          | IF '(' . expression ')' statement ELSE statement

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 232
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 216

  115 statement: WHILE '(' . expression ')' statement

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 233
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 217

  116 statement: FOR '(' . vars_decl_e ';' expr_e ';' expr_e ')' statement

    IDENT    shift, and go to state 40
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13

    $default  reduce using rule 124 (vars_decl_e)

    type         go to state 234
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26
    vars_decl_e  go to state 235


state 218

  127 expr_e: expression .

    $default  reduce using rule 127 (expr_e)


state 219

  121 statement: RETURN expr_e . ';'

    ';'  shift, and go to state 236


state 220

  120 statement: '{' @5 . statements '}'

    $default  reduce using rule 122 (statements)

    statements  go to state 237


state 221

   28 variables: variables . ',' variable
  118 statement: type variables . ';'

    ';'  shift, and go to state 238
    ','  shift, and go to state 55


state 222

  117 statement: expression ';' .

    $default  reduce using rule 117 (statement)


state 223

   21 function: VOID IDENT '(' @4 arg_e ')' '{' statements . '}'
  123 statements: statements . statement

    IDENT      shift, and go to state 191
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 192
    WHILE      shift, and go to state 193
    FOR        shift, and go to state 194
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 195
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 196
    '}'        shift, and go to state 239

    type             go to state 198
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 199
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    statement        go to state 200


state 224

   13 constructor: accessmodif IDENT '(' arg_e ')' '{' statements '}' .

    $default  reduce using rule 13 (constructor)


state 225

   17 function: accessmodif VOID IDENT '(' @2 arg_e ')' '{' . statements '}'

    $default  reduce using rule 122 (statements)

    statements  go to state 240


state 226

   15 function: accessmodif type IDENT '(' @1 arg_e ')' '{' . statements '}'

    $default  reduce using rule 122 (statements)

    statements  go to state 241


state 227

   98 arrayindex: '[' expression ',' expression . ']'
   99           | '[' expression ',' expression . ',' expression ']'

    ','  shift, and go to state 242
    ']'  shift, and go to state 243


state 228

   60 expr: NEW IDENT '(' expr_list_e ')' .

    $default  reduce using rule 60 (expr)


state 229

  110 expr_list: expr_list ',' expression .

    $default  reduce using rule 110 (expr_list)


state 230

   59 expr: qualifiedname '(' expr_list_e ')' arrayindex .

    $default  reduce using rule 59 (expr)


state 231

   19 function: type IDENT '(' @3 arg_e ')' '{' statements . '}'
  123 statements: statements . statement

    IDENT      shift, and go to state 191
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 192
    WHILE      shift, and go to state 193
    FOR        shift, and go to state 194
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 195
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 196
    '}'        shift, and go to state 244

    type             go to state 198
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 199
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    statement        go to state 200


state 232

  113 statement: IF '(' expression . ')' statement
  114          | IF '(' expression . ')' statement ELSE statement

    ')'  shift, and go to state 245


state 233

  115 statement: WHILE '(' expression . ')' statement

    ')'  shift, and go to state 246


state 234

  125 vars_decl_e: type . variables

    IDENT  shift, and go to state 88

    variables  go to state 247
    variable   go to state 37


state 235

  116 statement: FOR '(' vars_decl_e . ';' expr_e ';' expr_e ')' statement

    ';'  shift, and go to state 248


state 236

  121 statement: RETURN expr_e ';' .

    $default  reduce using rule 121 (statement)


state 237

  120 statement: '{' @5 statements . '}'
  123 statements: statements . statement

    IDENT      shift, and go to state 191
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 192
    WHILE      shift, and go to state 193
    FOR        shift, and go to state 194
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 195
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 196
    '}'        shift, and go to state 249

    type             go to state 198
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 199
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    statement        go to state 200


state 238

  118 statement: type variables ';' .

    $default  reduce using rule 118 (statement)


state 239

   21 function: VOID IDENT '(' @4 arg_e ')' '{' statements '}' .

    $default  reduce using rule 21 (function)


state 240

   17 function: accessmodif VOID IDENT '(' @2 arg_e ')' '{' statements . '}'
  123 statements: statements . statement

    IDENT      shift, and go to state 191
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 192
    WHILE      shift, and go to state 193
    FOR        shift, and go to state 194
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 195
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 196
    '}'        shift, and go to state 250

    type             go to state 198
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 199
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    statement        go to state 200


state 241

   15 function: accessmodif type IDENT '(' @1 arg_e ')' '{' statements . '}'
  123 statements: statements . statement

    IDENT      shift, and go to state 191
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 192
    WHILE      shift, and go to state 193
    FOR        shift, and go to state 194
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 195
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 196
    '}'        shift, and go to state 251

    type             go to state 198
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 199
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    statement        go to state 200


state 242

   99 arrayindex: '[' expression ',' expression ',' . expression ']'

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 252
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86


state 243

   98 arrayindex: '[' expression ',' expression ']' .

    $default  reduce using rule 98 (arrayindex)


state 244

   19 function: type IDENT '(' @3 arg_e ')' '{' statements '}' .

    $default  reduce using rule 19 (function)


state 245

  113 statement: IF '(' expression ')' . statement
  114          | IF '(' expression ')' . statement ELSE statement

    IDENT      shift, and go to state 191
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 192
    WHILE      shift, and go to state 193
    FOR        shift, and go to state 194
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 195
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 196

    type             go to state 198
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 199
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    statement        go to state 253


state 246

  115 statement: WHILE '(' expression ')' . statement

    IDENT      shift, and go to state 191
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 192
    WHILE      shift, and go to state 193
    FOR        shift, and go to state 194
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 195
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 196

    type             go to state 198
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 199
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    statement        go to state 254


state 247

   28 variables: variables . ',' variable
  125 vars_decl_e: type variables .

    ','  shift, and go to state 55

    $default  reduce using rule 125 (vars_decl_e)


state 248

  116 statement: FOR '(' vars_decl_e ';' . expr_e ';' expr_e ')' statement

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    $default  reduce using rule 126 (expr_e)

    expression       go to state 218
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    expr_e           go to state 255


state 249

  120 statement: '{' @5 statements '}' .

    $default  reduce using rule 120 (statement)


state 250

   17 function: accessmodif VOID IDENT '(' @2 arg_e ')' '{' statements '}' .

    $default  reduce using rule 17 (function)


state 251

   15 function: accessmodif type IDENT '(' @1 arg_e ')' '{' statements '}' .

    $default  reduce using rule 15 (function)


state 252

   99 arrayindex: '[' expression ',' expression ',' expression . ']'

    ']'  shift, and go to state 256


state 253

  113 statement: IF '(' expression ')' statement .
  114          | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 257

    $default  reduce using rule 113 (statement)


state 254

  115 statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 115 (statement)


state 255

  116 statement: FOR '(' vars_decl_e ';' expr_e . ';' expr_e ')' statement

    ';'  shift, and go to state 258


state 256

   99 arrayindex: '[' expression ',' expression ',' expression ']' .

    $default  reduce using rule 99 (arrayindex)


state 257

  114 statement: IF '(' expression ')' statement ELSE . statement

    IDENT      shift, and go to state 191
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 192
    WHILE      shift, and go to state 193
    FOR        shift, and go to state 194
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 195
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 196

    type             go to state 198
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 199
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    statement        go to state 259


state 258

  116 statement: FOR '(' vars_decl_e ';' expr_e ';' . expr_e ')' statement

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    $default  reduce using rule 126 (expr_e)

    expression       go to state 218
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    expr_e           go to state 260


state 259

  114 statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 114 (statement)


state 260

  116 statement: FOR '(' vars_decl_e ';' expr_e ';' expr_e . ')' statement

    ')'  shift, and go to state 261


state 261

  116 statement: FOR '(' vars_decl_e ';' expr_e ';' expr_e ')' . statement

    IDENT      shift, and go to state 191
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 192
    WHILE      shift, and go to state 193
    FOR        shift, and go to state 194
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 195
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 196

    type             go to state 198
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 199
    expr             go to state 84
    qualifiedname    go to state 85
    qualnameorarray  go to state 86
    statement        go to state 262


state 262

  116 statement: FOR '(' vars_decl_e ';' expr_e ';' expr_e ')' statement .

    $default  reduce using rule 116 (statement)
