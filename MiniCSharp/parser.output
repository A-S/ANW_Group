Grammar

    0 $accept: file $end

    1 file: root

    2 root: /* empty */
    3     | root class

    4 @1: /* empty */

    5 class: CLASS IDENT '{' @1 members '}'

    6 @2: /* empty */

    7 class: CLASS IDENT ':' IDENT '{' @2 members '}'

    8 members: /* empty */
    9        | members member

   10 member: global
   11       | constructor
   12       | function

   13 global: accessmodif type variables ';'

   14 constructor: accessmodif IDENT '(' args_e ')' '{' statements '}'

   15 @3: /* empty */

   16 function: accessmodif type IDENT '(' @3 args_e ')' '{' statements '}'

   17 @4: /* empty */

   18 function: accessmodif VOID IDENT '(' @4 args_e ')' '{' statements '}'

   19 arg: type IDENT

   20 args: arg
   21     | args ',' arg

   22 args_e: /* empty */
   23       | args

   24 variables: variable
   25          | variables ',' variable

   26 variable: IDENT
   27         | IDENT '=' expression

   28 accessmodif: /* empty */
   29            | PRIVATE
   30            | STATIC
   31            | PRIVATE STATIC

   32 type: noarraytype
   33     | arraytype

   34 noarraytype: IDENT
   35            | basictype

   36 basictype: OBJECT
   37          | BOOL
   38          | INT
   39          | DOUBLE

   40 arraytype: IDENT '[' ']'
   41          | IDENT '[' ',' ']'
   42          | IDENT '[' ',' ',' ']'
   43          | basictype '[' ']'
   44          | basictype '[' ',' ']'
   45          | basictype '[' ',' ',' ']'

   46 expression: expr
   47           | qualnameorarray

   48 expr: INCREMENT qualnameorarray
   49     | DECREMENT qualnameorarray
   50     | qualnameorarray INCREMENT
   51     | qualnameorarray DECREMENT
   52     | '!' expression
   53     | '-' expression
   54     | '+' expression
   55     | '(' expr ')'
   56     | '(' IDENT ')'
   57     | '(' qnora_without_id ')'
   58     | qualnameorarray '=' expression
   59     | qualifiedname '(' expr_list_e ')'
   60     | qualifiedname '(' expr_list_e ')' arrayindex
   61     | NEW IDENT '(' expr_list_e ')'
   62     | NEW IDENT arrayindex
   63     | expr EQ expression
   64     | qualnameorarray EQ expression
   65     | expr NE expression
   66     | qualnameorarray NE expression
   67     | expr '<' expression
   68     | qualnameorarray '<' expression
   69     | expr SE expression
   70     | qualnameorarray SE expression
   71     | expr '>' expression
   72     | qualnameorarray '>' expression
   73     | expr LE expression
   74     | qualnameorarray LE expression
   75     | expr '+' expression
   76     | qualnameorarray '+' expression
   77     | expr '-' expression
   78     | qualnameorarray '-' expression
   79     | expr '*' expression
   80     | qualnameorarray '*' expression
   81     | expr '/' expression
   82     | qualnameorarray '/' expression
   83     | expr '%' expression
   84     | qualnameorarray '%' expression
   85     | expr AND expression
   86     | qualnameorarray AND expression
   87     | expr OR expression
   88     | qualnameorarray OR expression
   89     | expr IS type
   90     | qualnameorarray IS type
   91     | '(' basictype ')' expression
   92     | '(' IDENT ')' expression
   93     | INTEGER
   94     | REAL
   95     | TRUE
   96     | FALSE
   97     | THIS
   98     | NUL

   99 arrayindex: '[' expression ']'
  100           | '[' expression ',' expression ']'
  101           | '[' expression ',' expression ',' expression ']'

  102 qualifiedname: IDENT
  103              | expr '.' IDENT
  104              | qualnameorarray '.' IDENT

  105 qualnameorarray: IDENT
  106                | IDENT arrayindex
  107                | expr '.' IDENT
  108                | qualnameorarray '.' IDENT
  109                | expr '.' IDENT arrayindex
  110                | qualnameorarray '.' IDENT arrayindex

  111 qnora_without_id: IDENT arrayindex
  112                 | expr '.' IDENT
  113                 | qualnameorarray '.' IDENT
  114                 | expr '.' IDENT arrayindex
  115                 | qualnameorarray '.' IDENT arrayindex

  116 expr_list: expression
  117          | expr_list ',' expression

  118 expr_list_e: /* empty */
  119            | expr_list

  120 statement: IF '(' expression ')' statement
  121          | IF '(' expression ')' statement ELSE statement
  122          | WHILE '(' expression ')' statement
  123          | FOR '(' variables_e ';' expr_e ';' expr_e ')' statement
  124          | expression ';'
  125          | type variables ';'

  126 @5: /* empty */

  127 statement: '{' @5 statements '}'
  128          | RETURN expression ';'

  129 statements: /* empty */
  130           | statements statement

  131 variables_e: /* empty */
  132            | type variables
  133            | variable

  134 expr_e: /* empty */
  135       | expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 52
'%' (37) 83 84
'(' (40) 14 16 18 55 56 57 59 60 61 91 92 120 121 122 123
')' (41) 14 16 18 55 56 57 59 60 61 91 92 120 121 122 123
'*' (42) 79 80
'+' (43) 54 75 76
',' (44) 21 25 41 42 44 45 100 101 117
'-' (45) 53 77 78
'.' (46) 103 104 107 108 109 110 112 113 114 115
'/' (47) 81 82
':' (58) 7
';' (59) 13 123 124 125 128
'<' (60) 67 68
'=' (61) 27 58
'>' (62) 71 72
'[' (91) 40 41 42 43 44 45 99 100 101
']' (93) 40 41 42 43 44 45 99 100 101
'{' (123) 5 7 14 16 18 127
'}' (125) 5 7 14 16 18 127
error (256)
IDENT (258) 5 7 14 16 18 19 26 27 34 40 41 42 56 61 62 92 102 103 104
    105 106 107 108 109 110 111 112 113 114 115
INTEGER (259) 93
REAL (260) 94
CLASS (261) 5 7
BOOL (262) 37
DOUBLE (263) 39
INT (264) 38
IS (265) 89 90
OBJECT (266) 36
IF (267) 120 121
ELSE (268) 121
WHILE (269) 122
FOR (270) 123
FALSE (271) 96
TRUE (272) 95
NEW (273) 61 62
THIS (274) 97
NUL (275) 98
PRIVATE (276) 29 31
STATIC (277) 30 31
VOID (278) 18
RETURN (279) 128
EXPRESSION (280)
IF_PREC (281)
OR (282) 87 88
AND (283) 85 86
NE (284) 65 66
EQ (285) 63 64
SE (286) 69 70
LE (287) 73 74
CAST (288)
UNARY_OP (289)
DECREMENT (290) 49 51
INCREMENT (291) 48 50


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
file (57)
    on left: 1, on right: 0
root (58)
    on left: 2 3, on right: 1 3
class (59)
    on left: 5 7, on right: 3
@1 (60)
    on left: 4, on right: 5
@2 (61)
    on left: 6, on right: 7
members (62)
    on left: 8 9, on right: 5 7 9
member (63)
    on left: 10 11 12, on right: 9
global (64)
    on left: 13, on right: 10
constructor (65)
    on left: 14, on right: 11
function (66)
    on left: 16 18, on right: 12
@3 (67)
    on left: 15, on right: 16
@4 (68)
    on left: 17, on right: 18
arg (69)
    on left: 19, on right: 20 21
args (70)
    on left: 20 21, on right: 21 23
args_e (71)
    on left: 22 23, on right: 14 16 18
variables (72)
    on left: 24 25, on right: 13 25 125 132
variable (73)
    on left: 26 27, on right: 24 25 133
accessmodif (74)
    on left: 28 29 30 31, on right: 13 14 16 18
type (75)
    on left: 32 33, on right: 13 16 19 89 90 125 132
noarraytype (76)
    on left: 34 35, on right: 32
basictype (77)
    on left: 36 37 38 39, on right: 35 43 44 45 91
arraytype (78)
    on left: 40 41 42 43 44 45, on right: 33
expression (79)
    on left: 46 47, on right: 27 52 53 54 58 63 64 65 66 67 68 69 70
    71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 91 92 99
    100 101 116 117 120 121 122 124 128 135
expr (80)
    on left: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65
    66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86
    87 88 89 90 91 92 93 94 95 96 97 98, on right: 46 55 63 65 67 69
    71 73 75 77 79 81 83 85 87 89 103 107 109 112 114
arrayindex (81)
    on left: 99 100 101, on right: 60 62 106 109 110 111 114 115
qualifiedname (82)
    on left: 102 103 104, on right: 59 60
qualnameorarray (83)
    on left: 105 106 107 108 109 110, on right: 47 48 49 50 51 58 64
    66 68 70 72 74 76 78 80 82 84 86 88 90 104 108 110 113 115
qnora_without_id (84)
    on left: 111 112 113 114 115, on right: 57
expr_list (85)
    on left: 116 117, on right: 117 119
expr_list_e (86)
    on left: 118 119, on right: 59 60 61
statement (87)
    on left: 120 121 122 123 124 125 127 128, on right: 120 121 122
    123 130
@5 (88)
    on left: 126, on right: 127
statements (89)
    on left: 129 130, on right: 14 16 18 127 130
variables_e (90)
    on left: 131 132 133, on right: 123
expr_e (91)
    on left: 134 135, on right: 123


state 0

    0 $accept: . file $end

    $default  reduce using rule 2 (root)

    file  go to state 1
    root  go to state 2


state 1

    0 $accept: file . $end

    $end  shift, and go to state 3


state 2

    1 file: root .
    3 root: root . class

    CLASS  shift, and go to state 4

    $default  reduce using rule 1 (file)

    class  go to state 5


state 3

    0 $accept: file $end .

    $default  accept


state 4

    5 class: CLASS . IDENT '{' @1 members '}'
    7      | CLASS . IDENT ':' IDENT '{' @2 members '}'

    IDENT  shift, and go to state 6


state 5

    3 root: root class .

    $default  reduce using rule 3 (root)


state 6

    5 class: CLASS IDENT . '{' @1 members '}'
    7      | CLASS IDENT . ':' IDENT '{' @2 members '}'

    '{'  shift, and go to state 7
    ':'  shift, and go to state 8


state 7

    5 class: CLASS IDENT '{' . @1 members '}'

    $default  reduce using rule 4 (@1)

    @1  go to state 9


state 8

    7 class: CLASS IDENT ':' . IDENT '{' @2 members '}'

    IDENT  shift, and go to state 10


state 9

    5 class: CLASS IDENT '{' @1 . members '}'

    $default  reduce using rule 8 (members)

    members  go to state 11


state 10

    7 class: CLASS IDENT ':' IDENT . '{' @2 members '}'

    '{'  shift, and go to state 12


state 11

    5 class: CLASS IDENT '{' @1 members . '}'
    9 members: members . member

    PRIVATE  shift, and go to state 13
    STATIC   shift, and go to state 14
    '}'      shift, and go to state 15

    $default  reduce using rule 28 (accessmodif)

    member       go to state 16
    global       go to state 17
    constructor  go to state 18
    function     go to state 19
    accessmodif  go to state 20


state 12

    7 class: CLASS IDENT ':' IDENT '{' . @2 members '}'

    $default  reduce using rule 6 (@2)

    @2  go to state 21


state 13

   29 accessmodif: PRIVATE .
   31            | PRIVATE . STATIC

    STATIC  shift, and go to state 22

    $default  reduce using rule 29 (accessmodif)


state 14

   30 accessmodif: STATIC .

    $default  reduce using rule 30 (accessmodif)


state 15

    5 class: CLASS IDENT '{' @1 members '}' .

    $default  reduce using rule 5 (class)


state 16

    9 members: members member .

    $default  reduce using rule 9 (members)


state 17

   10 member: global .

    $default  reduce using rule 10 (member)


state 18

   11 member: constructor .

    $default  reduce using rule 11 (member)


state 19

   12 member: function .

    $default  reduce using rule 12 (member)


state 20

   13 global: accessmodif . type variables ';'
   14 constructor: accessmodif . IDENT '(' args_e ')' '{' statements '}'
   16 function: accessmodif . type IDENT '(' @3 args_e ')' '{' statements '}'
   18         | accessmodif . VOID IDENT '(' @4 args_e ')' '{' statements '}'

    IDENT   shift, and go to state 23
    BOOL    shift, and go to state 24
    DOUBLE  shift, and go to state 25
    INT     shift, and go to state 26
    OBJECT  shift, and go to state 27
    VOID    shift, and go to state 28

    type         go to state 29
    noarraytype  go to state 30
    basictype    go to state 31
    arraytype    go to state 32


state 21

    7 class: CLASS IDENT ':' IDENT '{' @2 . members '}'

    $default  reduce using rule 8 (members)

    members  go to state 33


state 22

   31 accessmodif: PRIVATE STATIC .

    $default  reduce using rule 31 (accessmodif)


state 23

   14 constructor: accessmodif IDENT . '(' args_e ')' '{' statements '}'
   34 noarraytype: IDENT .
   40 arraytype: IDENT . '[' ']'
   41          | IDENT . '[' ',' ']'
   42          | IDENT . '[' ',' ',' ']'

    '('  shift, and go to state 34
    '['  shift, and go to state 35

    $default  reduce using rule 34 (noarraytype)


state 24

   37 basictype: BOOL .

    $default  reduce using rule 37 (basictype)


state 25

   39 basictype: DOUBLE .

    $default  reduce using rule 39 (basictype)


state 26

   38 basictype: INT .

    $default  reduce using rule 38 (basictype)


state 27

   36 basictype: OBJECT .

    $default  reduce using rule 36 (basictype)


state 28

   18 function: accessmodif VOID . IDENT '(' @4 args_e ')' '{' statements '}'

    IDENT  shift, and go to state 36


state 29

   13 global: accessmodif type . variables ';'
   16 function: accessmodif type . IDENT '(' @3 args_e ')' '{' statements '}'

    IDENT  shift, and go to state 37

    variables  go to state 38
    variable   go to state 39


state 30

   32 type: noarraytype .

    $default  reduce using rule 32 (type)


state 31

   35 noarraytype: basictype .
   43 arraytype: basictype . '[' ']'
   44          | basictype . '[' ',' ']'
   45          | basictype . '[' ',' ',' ']'

    '['  shift, and go to state 40

    $default  reduce using rule 35 (noarraytype)


state 32

   33 type: arraytype .

    $default  reduce using rule 33 (type)


state 33

    7 class: CLASS IDENT ':' IDENT '{' @2 members . '}'
    9 members: members . member

    PRIVATE  shift, and go to state 13
    STATIC   shift, and go to state 14
    '}'      shift, and go to state 41

    $default  reduce using rule 28 (accessmodif)

    member       go to state 16
    global       go to state 17
    constructor  go to state 18
    function     go to state 19
    accessmodif  go to state 20


state 34

   14 constructor: accessmodif IDENT '(' . args_e ')' '{' statements '}'

    IDENT   shift, and go to state 42
    BOOL    shift, and go to state 24
    DOUBLE  shift, and go to state 25
    INT     shift, and go to state 26
    OBJECT  shift, and go to state 27

    $default  reduce using rule 22 (args_e)

    arg          go to state 43
    args         go to state 44
    args_e       go to state 45
    type         go to state 46
    noarraytype  go to state 30
    basictype    go to state 31
    arraytype    go to state 32


state 35

   40 arraytype: IDENT '[' . ']'
   41          | IDENT '[' . ',' ']'
   42          | IDENT '[' . ',' ',' ']'

    ','  shift, and go to state 47
    ']'  shift, and go to state 48


state 36

   18 function: accessmodif VOID IDENT . '(' @4 args_e ')' '{' statements '}'

    '('  shift, and go to state 49


state 37

   16 function: accessmodif type IDENT . '(' @3 args_e ')' '{' statements '}'
   26 variable: IDENT .
   27         | IDENT . '=' expression

    '='  shift, and go to state 50
    '('  shift, and go to state 51

    $default  reduce using rule 26 (variable)


state 38

   13 global: accessmodif type variables . ';'
   25 variables: variables . ',' variable

    ';'  shift, and go to state 52
    ','  shift, and go to state 53


state 39

   24 variables: variable .

    $default  reduce using rule 24 (variables)


state 40

   43 arraytype: basictype '[' . ']'
   44          | basictype '[' . ',' ']'
   45          | basictype '[' . ',' ',' ']'

    ','  shift, and go to state 54
    ']'  shift, and go to state 55


state 41

    7 class: CLASS IDENT ':' IDENT '{' @2 members '}' .

    $default  reduce using rule 7 (class)


state 42

   34 noarraytype: IDENT .
   40 arraytype: IDENT . '[' ']'
   41          | IDENT . '[' ',' ']'
   42          | IDENT . '[' ',' ',' ']'

    '['  shift, and go to state 35

    $default  reduce using rule 34 (noarraytype)


state 43

   20 args: arg .

    $default  reduce using rule 20 (args)


state 44

   21 args: args . ',' arg
   23 args_e: args .

    ','  shift, and go to state 56

    $default  reduce using rule 23 (args_e)


state 45

   14 constructor: accessmodif IDENT '(' args_e . ')' '{' statements '}'

    ')'  shift, and go to state 57


state 46

   19 arg: type . IDENT

    IDENT  shift, and go to state 58


state 47

   41 arraytype: IDENT '[' ',' . ']'
   42          | IDENT '[' ',' . ',' ']'

    ','  shift, and go to state 59
    ']'  shift, and go to state 60


state 48

   40 arraytype: IDENT '[' ']' .

    $default  reduce using rule 40 (arraytype)


state 49

   18 function: accessmodif VOID IDENT '(' . @4 args_e ')' '{' statements '}'

    $default  reduce using rule 17 (@4)

    @4  go to state 61


state 50

   27 variable: IDENT '=' . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 76
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 51

   16 function: accessmodif type IDENT '(' . @3 args_e ')' '{' statements '}'

    $default  reduce using rule 15 (@3)

    @3  go to state 80


state 52

   13 global: accessmodif type variables ';' .

    $default  reduce using rule 13 (global)


state 53

   25 variables: variables ',' . variable

    IDENT  shift, and go to state 81

    variable  go to state 82


state 54

   44 arraytype: basictype '[' ',' . ']'
   45          | basictype '[' ',' . ',' ']'

    ','  shift, and go to state 83
    ']'  shift, and go to state 84


state 55

   43 arraytype: basictype '[' ']' .

    $default  reduce using rule 43 (arraytype)


state 56

   21 args: args ',' . arg

    IDENT   shift, and go to state 42
    BOOL    shift, and go to state 24
    DOUBLE  shift, and go to state 25
    INT     shift, and go to state 26
    OBJECT  shift, and go to state 27

    arg          go to state 85
    type         go to state 46
    noarraytype  go to state 30
    basictype    go to state 31
    arraytype    go to state 32


state 57

   14 constructor: accessmodif IDENT '(' args_e ')' . '{' statements '}'

    '{'  shift, and go to state 86


state 58

   19 arg: type IDENT .

    $default  reduce using rule 19 (arg)


state 59

   42 arraytype: IDENT '[' ',' ',' . ']'

    ']'  shift, and go to state 87


state 60

   41 arraytype: IDENT '[' ',' ']' .

    $default  reduce using rule 41 (arraytype)


state 61

   18 function: accessmodif VOID IDENT '(' @4 . args_e ')' '{' statements '}'

    IDENT   shift, and go to state 42
    BOOL    shift, and go to state 24
    DOUBLE  shift, and go to state 25
    INT     shift, and go to state 26
    OBJECT  shift, and go to state 27

    $default  reduce using rule 22 (args_e)

    arg          go to state 43
    args         go to state 44
    args_e       go to state 88
    type         go to state 46
    noarraytype  go to state 30
    basictype    go to state 31
    arraytype    go to state 32


state 62

  102 qualifiedname: IDENT .
  105 qualnameorarray: IDENT .
  106                | IDENT . arrayindex

    '['  shift, and go to state 89

    '('       reduce using rule 102 (qualifiedname)
    $default  reduce using rule 105 (qualnameorarray)

    arrayindex  go to state 90


state 63

   93 expr: INTEGER .

    $default  reduce using rule 93 (expr)


state 64

   94 expr: REAL .

    $default  reduce using rule 94 (expr)


state 65

   96 expr: FALSE .

    $default  reduce using rule 96 (expr)


state 66

   95 expr: TRUE .

    $default  reduce using rule 95 (expr)


state 67

   61 expr: NEW . IDENT '(' expr_list_e ')'
   62     | NEW . IDENT arrayindex

    IDENT  shift, and go to state 91


state 68

   97 expr: THIS .

    $default  reduce using rule 97 (expr)


state 69

   98 expr: NUL .

    $default  reduce using rule 98 (expr)


state 70

   54 expr: '+' . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 92
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 71

   53 expr: '-' . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 93
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 72

   52 expr: '!' . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 94
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 73

   49 expr: DECREMENT . qualnameorarray

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expr             go to state 95
    qualifiedname    go to state 78
    qualnameorarray  go to state 96


state 74

   48 expr: INCREMENT . qualnameorarray

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expr             go to state 95
    qualifiedname    go to state 78
    qualnameorarray  go to state 97


state 75

   55 expr: '(' . expr ')'
   56     | '(' . IDENT ')'
   57     | '(' . qnora_without_id ')'
   91     | '(' . basictype ')' expression
   92     | '(' . IDENT ')' expression

    IDENT      shift, and go to state 98
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    BOOL       shift, and go to state 24
    DOUBLE     shift, and go to state 25
    INT        shift, and go to state 26
    OBJECT     shift, and go to state 27
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    basictype         go to state 99
    expr              go to state 100
    qualifiedname     go to state 78
    qualnameorarray   go to state 101
    qnora_without_id  go to state 102


state 76

   27 variable: IDENT '=' expression .

    $default  reduce using rule 27 (variable)


state 77

   46 expression: expr .
   63 expr: expr . EQ expression
   65     | expr . NE expression
   67     | expr . '<' expression
   69     | expr . SE expression
   71     | expr . '>' expression
   73     | expr . LE expression
   75     | expr . '+' expression
   77     | expr . '-' expression
   79     | expr . '*' expression
   81     | expr . '/' expression
   83     | expr . '%' expression
   85     | expr . AND expression
   87     | expr . OR expression
   89     | expr . IS type
  103 qualifiedname: expr . '.' IDENT
  107 qualnameorarray: expr . '.' IDENT
  109                | expr . '.' IDENT arrayindex

    IS   shift, and go to state 103
    OR   shift, and go to state 104
    AND  shift, and go to state 105
    NE   shift, and go to state 106
    EQ   shift, and go to state 107
    '>'  shift, and go to state 108
    '<'  shift, and go to state 109
    SE   shift, and go to state 110
    LE   shift, and go to state 111
    '+'  shift, and go to state 112
    '-'  shift, and go to state 113
    '*'  shift, and go to state 114
    '/'  shift, and go to state 115
    '%'  shift, and go to state 116
    '.'  shift, and go to state 117

    $default  reduce using rule 46 (expression)


state 78

   59 expr: qualifiedname . '(' expr_list_e ')'
   60     | qualifiedname . '(' expr_list_e ')' arrayindex

    '('  shift, and go to state 118


state 79

   47 expression: qualnameorarray .
   50 expr: qualnameorarray . INCREMENT
   51     | qualnameorarray . DECREMENT
   58     | qualnameorarray . '=' expression
   64     | qualnameorarray . EQ expression
   66     | qualnameorarray . NE expression
   68     | qualnameorarray . '<' expression
   70     | qualnameorarray . SE expression
   72     | qualnameorarray . '>' expression
   74     | qualnameorarray . LE expression
   76     | qualnameorarray . '+' expression
   78     | qualnameorarray . '-' expression
   80     | qualnameorarray . '*' expression
   82     | qualnameorarray . '/' expression
   84     | qualnameorarray . '%' expression
   86     | qualnameorarray . AND expression
   88     | qualnameorarray . OR expression
   90     | qualnameorarray . IS type
  104 qualifiedname: qualnameorarray . '.' IDENT
  108 qualnameorarray: qualnameorarray . '.' IDENT
  110                | qualnameorarray . '.' IDENT arrayindex

    IS         shift, and go to state 119
    '='        shift, and go to state 120
    OR         shift, and go to state 121
    AND        shift, and go to state 122
    NE         shift, and go to state 123
    EQ         shift, and go to state 124
    '>'        shift, and go to state 125
    '<'        shift, and go to state 126
    SE         shift, and go to state 127
    LE         shift, and go to state 128
    '+'        shift, and go to state 129
    '-'        shift, and go to state 130
    '*'        shift, and go to state 131
    '/'        shift, and go to state 132
    '%'        shift, and go to state 133
    DECREMENT  shift, and go to state 134
    INCREMENT  shift, and go to state 135
    '.'        shift, and go to state 136

    $default  reduce using rule 47 (expression)


state 80

   16 function: accessmodif type IDENT '(' @3 . args_e ')' '{' statements '}'

    IDENT   shift, and go to state 42
    BOOL    shift, and go to state 24
    DOUBLE  shift, and go to state 25
    INT     shift, and go to state 26
    OBJECT  shift, and go to state 27

    $default  reduce using rule 22 (args_e)

    arg          go to state 43
    args         go to state 44
    args_e       go to state 137
    type         go to state 46
    noarraytype  go to state 30
    basictype    go to state 31
    arraytype    go to state 32


state 81

   26 variable: IDENT .
   27         | IDENT . '=' expression

    '='  shift, and go to state 50

    $default  reduce using rule 26 (variable)


state 82

   25 variables: variables ',' variable .

    $default  reduce using rule 25 (variables)


state 83

   45 arraytype: basictype '[' ',' ',' . ']'

    ']'  shift, and go to state 138


state 84

   44 arraytype: basictype '[' ',' ']' .

    $default  reduce using rule 44 (arraytype)


state 85

   21 args: args ',' arg .

    $default  reduce using rule 21 (args)


state 86

   14 constructor: accessmodif IDENT '(' args_e ')' '{' . statements '}'

    $default  reduce using rule 129 (statements)

    statements  go to state 139


state 87

   42 arraytype: IDENT '[' ',' ',' ']' .

    $default  reduce using rule 42 (arraytype)


state 88

   18 function: accessmodif VOID IDENT '(' @4 args_e . ')' '{' statements '}'

    ')'  shift, and go to state 140


state 89

   99 arrayindex: '[' . expression ']'
  100           | '[' . expression ',' expression ']'
  101           | '[' . expression ',' expression ',' expression ']'

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 141
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 90

  106 qualnameorarray: IDENT arrayindex .

    $default  reduce using rule 106 (qualnameorarray)


state 91

   61 expr: NEW IDENT . '(' expr_list_e ')'
   62     | NEW IDENT . arrayindex

    '('  shift, and go to state 142
    '['  shift, and go to state 89

    arrayindex  go to state 143


state 92

   54 expr: '+' expression .

    $default  reduce using rule 54 (expr)


state 93

   53 expr: '-' expression .

    $default  reduce using rule 53 (expr)


state 94

   52 expr: '!' expression .

    $default  reduce using rule 52 (expr)


state 95

   63 expr: expr . EQ expression
   65     | expr . NE expression
   67     | expr . '<' expression
   69     | expr . SE expression
   71     | expr . '>' expression
   73     | expr . LE expression
   75     | expr . '+' expression
   77     | expr . '-' expression
   79     | expr . '*' expression
   81     | expr . '/' expression
   83     | expr . '%' expression
   85     | expr . AND expression
   87     | expr . OR expression
   89     | expr . IS type
  103 qualifiedname: expr . '.' IDENT
  107 qualnameorarray: expr . '.' IDENT
  109                | expr . '.' IDENT arrayindex

    IS   shift, and go to state 103
    OR   shift, and go to state 104
    AND  shift, and go to state 105
    NE   shift, and go to state 106
    EQ   shift, and go to state 107
    '>'  shift, and go to state 108
    '<'  shift, and go to state 109
    SE   shift, and go to state 110
    LE   shift, and go to state 111
    '+'  shift, and go to state 112
    '-'  shift, and go to state 113
    '*'  shift, and go to state 114
    '/'  shift, and go to state 115
    '%'  shift, and go to state 116
    '.'  shift, and go to state 117


state 96

   49 expr: DECREMENT qualnameorarray .
   50     | qualnameorarray . INCREMENT
   51     | qualnameorarray . DECREMENT
   58     | qualnameorarray . '=' expression
   64     | qualnameorarray . EQ expression
   66     | qualnameorarray . NE expression
   68     | qualnameorarray . '<' expression
   70     | qualnameorarray . SE expression
   72     | qualnameorarray . '>' expression
   74     | qualnameorarray . LE expression
   76     | qualnameorarray . '+' expression
   78     | qualnameorarray . '-' expression
   80     | qualnameorarray . '*' expression
   82     | qualnameorarray . '/' expression
   84     | qualnameorarray . '%' expression
   86     | qualnameorarray . AND expression
   88     | qualnameorarray . OR expression
   90     | qualnameorarray . IS type
  104 qualifiedname: qualnameorarray . '.' IDENT
  108 qualnameorarray: qualnameorarray . '.' IDENT
  110                | qualnameorarray . '.' IDENT arrayindex

    '='        shift, and go to state 120
    DECREMENT  shift, and go to state 134
    INCREMENT  shift, and go to state 135
    '.'        shift, and go to state 136

    $default  reduce using rule 49 (expr)


state 97

   48 expr: INCREMENT qualnameorarray .
   50     | qualnameorarray . INCREMENT
   51     | qualnameorarray . DECREMENT
   58     | qualnameorarray . '=' expression
   64     | qualnameorarray . EQ expression
   66     | qualnameorarray . NE expression
   68     | qualnameorarray . '<' expression
   70     | qualnameorarray . SE expression
   72     | qualnameorarray . '>' expression
   74     | qualnameorarray . LE expression
   76     | qualnameorarray . '+' expression
   78     | qualnameorarray . '-' expression
   80     | qualnameorarray . '*' expression
   82     | qualnameorarray . '/' expression
   84     | qualnameorarray . '%' expression
   86     | qualnameorarray . AND expression
   88     | qualnameorarray . OR expression
   90     | qualnameorarray . IS type
  104 qualifiedname: qualnameorarray . '.' IDENT
  108 qualnameorarray: qualnameorarray . '.' IDENT
  110                | qualnameorarray . '.' IDENT arrayindex

    '='        shift, and go to state 120
    DECREMENT  shift, and go to state 134
    INCREMENT  shift, and go to state 135
    '.'        shift, and go to state 136

    $default  reduce using rule 48 (expr)


state 98

   56 expr: '(' IDENT . ')'
   92     | '(' IDENT . ')' expression
  102 qualifiedname: IDENT .
  105 qualnameorarray: IDENT .
  106                | IDENT . arrayindex
  111 qnora_without_id: IDENT . arrayindex

    ')'  shift, and go to state 144
    '['  shift, and go to state 89

    '('       reduce using rule 102 (qualifiedname)
    $default  reduce using rule 105 (qualnameorarray)

    arrayindex  go to state 145


state 99

   91 expr: '(' basictype . ')' expression

    ')'  shift, and go to state 146


state 100

   55 expr: '(' expr . ')'
   63     | expr . EQ expression
   65     | expr . NE expression
   67     | expr . '<' expression
   69     | expr . SE expression
   71     | expr . '>' expression
   73     | expr . LE expression
   75     | expr . '+' expression
   77     | expr . '-' expression
   79     | expr . '*' expression
   81     | expr . '/' expression
   83     | expr . '%' expression
   85     | expr . AND expression
   87     | expr . OR expression
   89     | expr . IS type
  103 qualifiedname: expr . '.' IDENT
  107 qualnameorarray: expr . '.' IDENT
  109                | expr . '.' IDENT arrayindex
  112 qnora_without_id: expr . '.' IDENT
  114                 | expr . '.' IDENT arrayindex

    IS   shift, and go to state 103
    OR   shift, and go to state 104
    AND  shift, and go to state 105
    NE   shift, and go to state 106
    EQ   shift, and go to state 107
    '>'  shift, and go to state 108
    '<'  shift, and go to state 109
    SE   shift, and go to state 110
    LE   shift, and go to state 111
    '+'  shift, and go to state 112
    '-'  shift, and go to state 113
    '*'  shift, and go to state 114
    '/'  shift, and go to state 115
    '%'  shift, and go to state 116
    '.'  shift, and go to state 147
    ')'  shift, and go to state 148


state 101

   50 expr: qualnameorarray . INCREMENT
   51     | qualnameorarray . DECREMENT
   58     | qualnameorarray . '=' expression
   64     | qualnameorarray . EQ expression
   66     | qualnameorarray . NE expression
   68     | qualnameorarray . '<' expression
   70     | qualnameorarray . SE expression
   72     | qualnameorarray . '>' expression
   74     | qualnameorarray . LE expression
   76     | qualnameorarray . '+' expression
   78     | qualnameorarray . '-' expression
   80     | qualnameorarray . '*' expression
   82     | qualnameorarray . '/' expression
   84     | qualnameorarray . '%' expression
   86     | qualnameorarray . AND expression
   88     | qualnameorarray . OR expression
   90     | qualnameorarray . IS type
  104 qualifiedname: qualnameorarray . '.' IDENT
  108 qualnameorarray: qualnameorarray . '.' IDENT
  110                | qualnameorarray . '.' IDENT arrayindex
  113 qnora_without_id: qualnameorarray . '.' IDENT
  115                 | qualnameorarray . '.' IDENT arrayindex

    IS         shift, and go to state 119
    '='        shift, and go to state 120
    OR         shift, and go to state 121
    AND        shift, and go to state 122
    NE         shift, and go to state 123
    EQ         shift, and go to state 124
    '>'        shift, and go to state 125
    '<'        shift, and go to state 126
    SE         shift, and go to state 127
    LE         shift, and go to state 128
    '+'        shift, and go to state 129
    '-'        shift, and go to state 130
    '*'        shift, and go to state 131
    '/'        shift, and go to state 132
    '%'        shift, and go to state 133
    DECREMENT  shift, and go to state 134
    INCREMENT  shift, and go to state 135
    '.'        shift, and go to state 149


state 102

   57 expr: '(' qnora_without_id . ')'

    ')'  shift, and go to state 150


state 103

   89 expr: expr IS . type

    IDENT   shift, and go to state 42
    BOOL    shift, and go to state 24
    DOUBLE  shift, and go to state 25
    INT     shift, and go to state 26
    OBJECT  shift, and go to state 27

    type         go to state 151
    noarraytype  go to state 30
    basictype    go to state 31
    arraytype    go to state 32


state 104

   87 expr: expr OR . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 152
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 105

   85 expr: expr AND . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 153
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 106

   65 expr: expr NE . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 154
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 107

   63 expr: expr EQ . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 155
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 108

   71 expr: expr '>' . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 156
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 109

   67 expr: expr '<' . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 157
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 110

   69 expr: expr SE . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 158
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 111

   73 expr: expr LE . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 159
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 112

   75 expr: expr '+' . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 160
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 113

   77 expr: expr '-' . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 161
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 114

   79 expr: expr '*' . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 162
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 115

   81 expr: expr '/' . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 163
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 116

   83 expr: expr '%' . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 164
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 117

  103 qualifiedname: expr '.' . IDENT
  107 qualnameorarray: expr '.' . IDENT
  109                | expr '.' . IDENT arrayindex

    IDENT  shift, and go to state 165


state 118

   59 expr: qualifiedname '(' . expr_list_e ')'
   60     | qualifiedname '(' . expr_list_e ')' arrayindex

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    $default  reduce using rule 118 (expr_list_e)

    expression       go to state 166
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79
    expr_list        go to state 167
    expr_list_e      go to state 168


state 119

   90 expr: qualnameorarray IS . type

    IDENT   shift, and go to state 42
    BOOL    shift, and go to state 24
    DOUBLE  shift, and go to state 25
    INT     shift, and go to state 26
    OBJECT  shift, and go to state 27

    type         go to state 169
    noarraytype  go to state 30
    basictype    go to state 31
    arraytype    go to state 32


state 120

   58 expr: qualnameorarray '=' . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 170
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 121

   88 expr: qualnameorarray OR . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 171
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 122

   86 expr: qualnameorarray AND . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 172
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 123

   66 expr: qualnameorarray NE . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 173
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 124

   64 expr: qualnameorarray EQ . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 174
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 125

   72 expr: qualnameorarray '>' . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 175
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 126

   68 expr: qualnameorarray '<' . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 176
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 127

   70 expr: qualnameorarray SE . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 177
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 128

   74 expr: qualnameorarray LE . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 178
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 129

   76 expr: qualnameorarray '+' . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 179
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 130

   78 expr: qualnameorarray '-' . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 180
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 131

   80 expr: qualnameorarray '*' . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 181
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 132

   82 expr: qualnameorarray '/' . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 182
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 133

   84 expr: qualnameorarray '%' . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 183
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 134

   51 expr: qualnameorarray DECREMENT .

    $default  reduce using rule 51 (expr)


state 135

   50 expr: qualnameorarray INCREMENT .

    $default  reduce using rule 50 (expr)


state 136

  104 qualifiedname: qualnameorarray '.' . IDENT
  108 qualnameorarray: qualnameorarray '.' . IDENT
  110                | qualnameorarray '.' . IDENT arrayindex

    IDENT  shift, and go to state 184


state 137

   16 function: accessmodif type IDENT '(' @3 args_e . ')' '{' statements '}'

    ')'  shift, and go to state 185


state 138

   45 arraytype: basictype '[' ',' ',' ']' .

    $default  reduce using rule 45 (arraytype)


state 139

   14 constructor: accessmodif IDENT '(' args_e ')' '{' statements . '}'
  130 statements: statements . statement

    IDENT      shift, and go to state 186
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    BOOL       shift, and go to state 24
    DOUBLE     shift, and go to state 25
    INT        shift, and go to state 26
    OBJECT     shift, and go to state 27
    IF         shift, and go to state 187
    WHILE      shift, and go to state 188
    FOR        shift, and go to state 189
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    RETURN     shift, and go to state 190
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75
    '{'        shift, and go to state 191
    '}'        shift, and go to state 192

    type             go to state 193
    noarraytype      go to state 30
    basictype        go to state 31
    arraytype        go to state 32
    expression       go to state 194
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79
    statement        go to state 195


state 140

   18 function: accessmodif VOID IDENT '(' @4 args_e ')' . '{' statements '}'

    '{'  shift, and go to state 196


state 141

   99 arrayindex: '[' expression . ']'
  100           | '[' expression . ',' expression ']'
  101           | '[' expression . ',' expression ',' expression ']'

    ','  shift, and go to state 197
    ']'  shift, and go to state 198


state 142

   61 expr: NEW IDENT '(' . expr_list_e ')'

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    $default  reduce using rule 118 (expr_list_e)

    expression       go to state 166
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79
    expr_list        go to state 167
    expr_list_e      go to state 199


state 143

   62 expr: NEW IDENT arrayindex .

    $default  reduce using rule 62 (expr)


state 144

   56 expr: '(' IDENT ')' .
   92     | '(' IDENT ')' . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    $default  reduce using rule 56 (expr)

    expression       go to state 200
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 145

  106 qualnameorarray: IDENT arrayindex .
  111 qnora_without_id: IDENT arrayindex .

    ')'       reduce using rule 111 (qnora_without_id)
    $default  reduce using rule 106 (qualnameorarray)


state 146

   91 expr: '(' basictype ')' . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 201
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 147

  103 qualifiedname: expr '.' . IDENT
  107 qualnameorarray: expr '.' . IDENT
  109                | expr '.' . IDENT arrayindex
  112 qnora_without_id: expr '.' . IDENT
  114                 | expr '.' . IDENT arrayindex

    IDENT  shift, and go to state 202


state 148

   55 expr: '(' expr ')' .

    $default  reduce using rule 55 (expr)


state 149

  104 qualifiedname: qualnameorarray '.' . IDENT
  108 qualnameorarray: qualnameorarray '.' . IDENT
  110                | qualnameorarray '.' . IDENT arrayindex
  113 qnora_without_id: qualnameorarray '.' . IDENT
  115                 | qualnameorarray '.' . IDENT arrayindex

    IDENT  shift, and go to state 203


state 150

   57 expr: '(' qnora_without_id ')' .

    $default  reduce using rule 57 (expr)


state 151

   89 expr: expr IS type .

    $default  reduce using rule 89 (expr)


state 152

   87 expr: expr OR expression .

    $default  reduce using rule 87 (expr)


state 153

   85 expr: expr AND expression .

    $default  reduce using rule 85 (expr)


state 154

   65 expr: expr NE expression .

    $default  reduce using rule 65 (expr)


state 155

   63 expr: expr EQ expression .

    $default  reduce using rule 63 (expr)


state 156

   71 expr: expr '>' expression .

    $default  reduce using rule 71 (expr)


state 157

   67 expr: expr '<' expression .

    $default  reduce using rule 67 (expr)


state 158

   69 expr: expr SE expression .

    $default  reduce using rule 69 (expr)


state 159

   73 expr: expr LE expression .

    $default  reduce using rule 73 (expr)


state 160

   75 expr: expr '+' expression .

    $default  reduce using rule 75 (expr)


state 161

   77 expr: expr '-' expression .

    $default  reduce using rule 77 (expr)


state 162

   79 expr: expr '*' expression .

    $default  reduce using rule 79 (expr)


state 163

   81 expr: expr '/' expression .

    $default  reduce using rule 81 (expr)


state 164

   83 expr: expr '%' expression .

    $default  reduce using rule 83 (expr)


state 165

  103 qualifiedname: expr '.' IDENT .
  107 qualnameorarray: expr '.' IDENT .
  109                | expr '.' IDENT . arrayindex

    '['  shift, and go to state 89

    '('       reduce using rule 103 (qualifiedname)
    $default  reduce using rule 107 (qualnameorarray)

    arrayindex  go to state 204


state 166

  116 expr_list: expression .

    $default  reduce using rule 116 (expr_list)


state 167

  117 expr_list: expr_list . ',' expression
  119 expr_list_e: expr_list .

    ','  shift, and go to state 205

    $default  reduce using rule 119 (expr_list_e)


state 168

   59 expr: qualifiedname '(' expr_list_e . ')'
   60     | qualifiedname '(' expr_list_e . ')' arrayindex

    ')'  shift, and go to state 206


state 169

   90 expr: qualnameorarray IS type .

    $default  reduce using rule 90 (expr)


state 170

   58 expr: qualnameorarray '=' expression .

    $default  reduce using rule 58 (expr)


state 171

   88 expr: qualnameorarray OR expression .

    $default  reduce using rule 88 (expr)


state 172

   86 expr: qualnameorarray AND expression .

    $default  reduce using rule 86 (expr)


state 173

   66 expr: qualnameorarray NE expression .

    $default  reduce using rule 66 (expr)


state 174

   64 expr: qualnameorarray EQ expression .

    $default  reduce using rule 64 (expr)


state 175

   72 expr: qualnameorarray '>' expression .

    $default  reduce using rule 72 (expr)


state 176

   68 expr: qualnameorarray '<' expression .

    $default  reduce using rule 68 (expr)


state 177

   70 expr: qualnameorarray SE expression .

    $default  reduce using rule 70 (expr)


state 178

   74 expr: qualnameorarray LE expression .

    $default  reduce using rule 74 (expr)


state 179

   76 expr: qualnameorarray '+' expression .

    $default  reduce using rule 76 (expr)


state 180

   78 expr: qualnameorarray '-' expression .

    $default  reduce using rule 78 (expr)


state 181

   80 expr: qualnameorarray '*' expression .

    $default  reduce using rule 80 (expr)


state 182

   82 expr: qualnameorarray '/' expression .

    $default  reduce using rule 82 (expr)


state 183

   84 expr: qualnameorarray '%' expression .

    $default  reduce using rule 84 (expr)


state 184

  104 qualifiedname: qualnameorarray '.' IDENT .
  108 qualnameorarray: qualnameorarray '.' IDENT .
  110                | qualnameorarray '.' IDENT . arrayindex

    '['  shift, and go to state 89

    '('       reduce using rule 104 (qualifiedname)
    $default  reduce using rule 108 (qualnameorarray)

    arrayindex  go to state 207


state 185

   16 function: accessmodif type IDENT '(' @3 args_e ')' . '{' statements '}'

    '{'  shift, and go to state 208


state 186

   34 noarraytype: IDENT .
   40 arraytype: IDENT . '[' ']'
   41          | IDENT . '[' ',' ']'
   42          | IDENT . '[' ',' ',' ']'
  102 qualifiedname: IDENT .
  105 qualnameorarray: IDENT .
  106                | IDENT . arrayindex

    '['  shift, and go to state 209

    IDENT     reduce using rule 34 (noarraytype)
    '('       reduce using rule 102 (qualifiedname)
    $default  reduce using rule 105 (qualnameorarray)

    arrayindex  go to state 90


state 187

  120 statement: IF . '(' expression ')' statement
  121          | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 210


state 188

  122 statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 211


state 189

  123 statement: FOR . '(' variables_e ';' expr_e ';' expr_e ')' statement

    '('  shift, and go to state 212


state 190

  128 statement: RETURN . expression ';'

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 213
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 191

  127 statement: '{' . @5 statements '}'

    $default  reduce using rule 126 (@5)

    @5  go to state 214


state 192

   14 constructor: accessmodif IDENT '(' args_e ')' '{' statements '}' .

    $default  reduce using rule 14 (constructor)


state 193

  125 statement: type . variables ';'

    IDENT  shift, and go to state 81

    variables  go to state 215
    variable   go to state 39


state 194

  124 statement: expression . ';'

    ';'  shift, and go to state 216


state 195

  130 statements: statements statement .

    $default  reduce using rule 130 (statements)


state 196

   18 function: accessmodif VOID IDENT '(' @4 args_e ')' '{' . statements '}'

    $default  reduce using rule 129 (statements)

    statements  go to state 217


state 197

  100 arrayindex: '[' expression ',' . expression ']'
  101           | '[' expression ',' . expression ',' expression ']'

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 218
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 198

   99 arrayindex: '[' expression ']' .

    $default  reduce using rule 99 (arrayindex)


state 199

   61 expr: NEW IDENT '(' expr_list_e . ')'

    ')'  shift, and go to state 219


state 200

   92 expr: '(' IDENT ')' expression .

    $default  reduce using rule 92 (expr)


state 201

   91 expr: '(' basictype ')' expression .

    $default  reduce using rule 91 (expr)


state 202

  103 qualifiedname: expr '.' IDENT .
  107 qualnameorarray: expr '.' IDENT .
  109                | expr '.' IDENT . arrayindex
  112 qnora_without_id: expr '.' IDENT .
  114                 | expr '.' IDENT . arrayindex

    '['  shift, and go to state 89

    '('       reduce using rule 103 (qualifiedname)
    ')'       reduce using rule 112 (qnora_without_id)
    $default  reduce using rule 107 (qualnameorarray)

    arrayindex  go to state 220


state 203

  104 qualifiedname: qualnameorarray '.' IDENT .
  108 qualnameorarray: qualnameorarray '.' IDENT .
  110                | qualnameorarray '.' IDENT . arrayindex
  113 qnora_without_id: qualnameorarray '.' IDENT .
  115                 | qualnameorarray '.' IDENT . arrayindex

    '['  shift, and go to state 89

    '('       reduce using rule 104 (qualifiedname)
    ')'       reduce using rule 113 (qnora_without_id)
    $default  reduce using rule 108 (qualnameorarray)

    arrayindex  go to state 221


state 204

  109 qualnameorarray: expr '.' IDENT arrayindex .

    $default  reduce using rule 109 (qualnameorarray)


state 205

  117 expr_list: expr_list ',' . expression

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 222
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 206

   59 expr: qualifiedname '(' expr_list_e ')' .
   60     | qualifiedname '(' expr_list_e ')' . arrayindex

    '['  shift, and go to state 89

    $default  reduce using rule 59 (expr)

    arrayindex  go to state 223


state 207

  110 qualnameorarray: qualnameorarray '.' IDENT arrayindex .

    $default  reduce using rule 110 (qualnameorarray)


state 208

   16 function: accessmodif type IDENT '(' @3 args_e ')' '{' . statements '}'

    $default  reduce using rule 129 (statements)

    statements  go to state 224


state 209

   40 arraytype: IDENT '[' . ']'
   41          | IDENT '[' . ',' ']'
   42          | IDENT '[' . ',' ',' ']'
   99 arrayindex: '[' . expression ']'
  100           | '[' . expression ',' expression ']'
  101           | '[' . expression ',' expression ',' expression ']'

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75
    ','        shift, and go to state 47
    ']'        shift, and go to state 48

    expression       go to state 141
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 210

  120 statement: IF '(' . expression ')' statement
  121          | IF '(' . expression ')' statement ELSE statement

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 225
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 211

  122 statement: WHILE '(' . expression ')' statement

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 226
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 212

  123 statement: FOR '(' . variables_e ';' expr_e ';' expr_e ')' statement

    IDENT   shift, and go to state 227
    BOOL    shift, and go to state 24
    DOUBLE  shift, and go to state 25
    INT     shift, and go to state 26
    OBJECT  shift, and go to state 27

    $default  reduce using rule 131 (variables_e)

    variable     go to state 228
    type         go to state 229
    noarraytype  go to state 30
    basictype    go to state 31
    arraytype    go to state 32
    variables_e  go to state 230


state 213

  128 statement: RETURN expression . ';'

    ';'  shift, and go to state 231


state 214

  127 statement: '{' @5 . statements '}'

    $default  reduce using rule 129 (statements)

    statements  go to state 232


state 215

   25 variables: variables . ',' variable
  125 statement: type variables . ';'

    ';'  shift, and go to state 233
    ','  shift, and go to state 53


state 216

  124 statement: expression ';' .

    $default  reduce using rule 124 (statement)


state 217

   18 function: accessmodif VOID IDENT '(' @4 args_e ')' '{' statements . '}'
  130 statements: statements . statement

    IDENT      shift, and go to state 186
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    BOOL       shift, and go to state 24
    DOUBLE     shift, and go to state 25
    INT        shift, and go to state 26
    OBJECT     shift, and go to state 27
    IF         shift, and go to state 187
    WHILE      shift, and go to state 188
    FOR        shift, and go to state 189
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    RETURN     shift, and go to state 190
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75
    '{'        shift, and go to state 191
    '}'        shift, and go to state 234

    type             go to state 193
    noarraytype      go to state 30
    basictype        go to state 31
    arraytype        go to state 32
    expression       go to state 194
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79
    statement        go to state 195


state 218

  100 arrayindex: '[' expression ',' expression . ']'
  101           | '[' expression ',' expression . ',' expression ']'

    ','  shift, and go to state 235
    ']'  shift, and go to state 236


state 219

   61 expr: NEW IDENT '(' expr_list_e ')' .

    $default  reduce using rule 61 (expr)


state 220

  109 qualnameorarray: expr '.' IDENT arrayindex .
  114 qnora_without_id: expr '.' IDENT arrayindex .

    ')'       reduce using rule 114 (qnora_without_id)
    $default  reduce using rule 109 (qualnameorarray)


state 221

  110 qualnameorarray: qualnameorarray '.' IDENT arrayindex .
  115 qnora_without_id: qualnameorarray '.' IDENT arrayindex .

    ')'       reduce using rule 115 (qnora_without_id)
    $default  reduce using rule 110 (qualnameorarray)


state 222

  117 expr_list: expr_list ',' expression .

    $default  reduce using rule 117 (expr_list)


state 223

   60 expr: qualifiedname '(' expr_list_e ')' arrayindex .

    $default  reduce using rule 60 (expr)


state 224

   16 function: accessmodif type IDENT '(' @3 args_e ')' '{' statements . '}'
  130 statements: statements . statement

    IDENT      shift, and go to state 186
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    BOOL       shift, and go to state 24
    DOUBLE     shift, and go to state 25
    INT        shift, and go to state 26
    OBJECT     shift, and go to state 27
    IF         shift, and go to state 187
    WHILE      shift, and go to state 188
    FOR        shift, and go to state 189
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    RETURN     shift, and go to state 190
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75
    '{'        shift, and go to state 191
    '}'        shift, and go to state 237

    type             go to state 193
    noarraytype      go to state 30
    basictype        go to state 31
    arraytype        go to state 32
    expression       go to state 194
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79
    statement        go to state 195


state 225

  120 statement: IF '(' expression . ')' statement
  121          | IF '(' expression . ')' statement ELSE statement

    ')'  shift, and go to state 238


state 226

  122 statement: WHILE '(' expression . ')' statement

    ')'  shift, and go to state 239


state 227

   26 variable: IDENT .
   27         | IDENT . '=' expression
   34 noarraytype: IDENT .
   40 arraytype: IDENT . '[' ']'
   41          | IDENT . '[' ',' ']'
   42          | IDENT . '[' ',' ',' ']'

    '='  shift, and go to state 50
    '['  shift, and go to state 35

    IDENT     reduce using rule 34 (noarraytype)
    $default  reduce using rule 26 (variable)


state 228

  133 variables_e: variable .

    $default  reduce using rule 133 (variables_e)


state 229

  132 variables_e: type . variables

    IDENT  shift, and go to state 81

    variables  go to state 240
    variable   go to state 39


state 230

  123 statement: FOR '(' variables_e . ';' expr_e ';' expr_e ')' statement

    ';'  shift, and go to state 241


state 231

  128 statement: RETURN expression ';' .

    $default  reduce using rule 128 (statement)


state 232

  127 statement: '{' @5 statements . '}'
  130 statements: statements . statement

    IDENT      shift, and go to state 186
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    BOOL       shift, and go to state 24
    DOUBLE     shift, and go to state 25
    INT        shift, and go to state 26
    OBJECT     shift, and go to state 27
    IF         shift, and go to state 187
    WHILE      shift, and go to state 188
    FOR        shift, and go to state 189
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    RETURN     shift, and go to state 190
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75
    '{'        shift, and go to state 191
    '}'        shift, and go to state 242

    type             go to state 193
    noarraytype      go to state 30
    basictype        go to state 31
    arraytype        go to state 32
    expression       go to state 194
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79
    statement        go to state 195


state 233

  125 statement: type variables ';' .

    $default  reduce using rule 125 (statement)


state 234

   18 function: accessmodif VOID IDENT '(' @4 args_e ')' '{' statements '}' .

    $default  reduce using rule 18 (function)


state 235

  101 arrayindex: '[' expression ',' expression ',' . expression ']'

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    expression       go to state 243
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79


state 236

  100 arrayindex: '[' expression ',' expression ']' .

    $default  reduce using rule 100 (arrayindex)


state 237

   16 function: accessmodif type IDENT '(' @3 args_e ')' '{' statements '}' .

    $default  reduce using rule 16 (function)


state 238

  120 statement: IF '(' expression ')' . statement
  121          | IF '(' expression ')' . statement ELSE statement

    IDENT      shift, and go to state 186
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    BOOL       shift, and go to state 24
    DOUBLE     shift, and go to state 25
    INT        shift, and go to state 26
    OBJECT     shift, and go to state 27
    IF         shift, and go to state 187
    WHILE      shift, and go to state 188
    FOR        shift, and go to state 189
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    RETURN     shift, and go to state 190
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75
    '{'        shift, and go to state 191

    type             go to state 193
    noarraytype      go to state 30
    basictype        go to state 31
    arraytype        go to state 32
    expression       go to state 194
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79
    statement        go to state 244


state 239

  122 statement: WHILE '(' expression ')' . statement

    IDENT      shift, and go to state 186
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    BOOL       shift, and go to state 24
    DOUBLE     shift, and go to state 25
    INT        shift, and go to state 26
    OBJECT     shift, and go to state 27
    IF         shift, and go to state 187
    WHILE      shift, and go to state 188
    FOR        shift, and go to state 189
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    RETURN     shift, and go to state 190
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75
    '{'        shift, and go to state 191

    type             go to state 193
    noarraytype      go to state 30
    basictype        go to state 31
    arraytype        go to state 32
    expression       go to state 194
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79
    statement        go to state 245


state 240

   25 variables: variables . ',' variable
  132 variables_e: type variables .

    ','  shift, and go to state 53

    $default  reduce using rule 132 (variables_e)


state 241

  123 statement: FOR '(' variables_e ';' . expr_e ';' expr_e ')' statement

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    $default  reduce using rule 134 (expr_e)

    expression       go to state 246
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79
    expr_e           go to state 247


state 242

  127 statement: '{' @5 statements '}' .

    $default  reduce using rule 127 (statement)


state 243

  101 arrayindex: '[' expression ',' expression ',' expression . ']'

    ']'  shift, and go to state 248


state 244

  120 statement: IF '(' expression ')' statement .
  121          | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 249

    $default  reduce using rule 120 (statement)


state 245

  122 statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 122 (statement)


state 246

  135 expr_e: expression .

    $default  reduce using rule 135 (expr_e)


state 247

  123 statement: FOR '(' variables_e ';' expr_e . ';' expr_e ')' statement

    ';'  shift, and go to state 250


state 248

  101 arrayindex: '[' expression ',' expression ',' expression ']' .

    $default  reduce using rule 101 (arrayindex)


state 249

  121 statement: IF '(' expression ')' statement ELSE . statement

    IDENT      shift, and go to state 186
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    BOOL       shift, and go to state 24
    DOUBLE     shift, and go to state 25
    INT        shift, and go to state 26
    OBJECT     shift, and go to state 27
    IF         shift, and go to state 187
    WHILE      shift, and go to state 188
    FOR        shift, and go to state 189
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    RETURN     shift, and go to state 190
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75
    '{'        shift, and go to state 191

    type             go to state 193
    noarraytype      go to state 30
    basictype        go to state 31
    arraytype        go to state 32
    expression       go to state 194
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79
    statement        go to state 251


state 250

  123 statement: FOR '(' variables_e ';' expr_e ';' . expr_e ')' statement

    IDENT      shift, and go to state 62
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75

    $default  reduce using rule 134 (expr_e)

    expression       go to state 246
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79
    expr_e           go to state 252


state 251

  121 statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 121 (statement)


state 252

  123 statement: FOR '(' variables_e ';' expr_e ';' expr_e . ')' statement

    ')'  shift, and go to state 253


state 253

  123 statement: FOR '(' variables_e ';' expr_e ';' expr_e ')' . statement

    IDENT      shift, and go to state 186
    INTEGER    shift, and go to state 63
    REAL       shift, and go to state 64
    BOOL       shift, and go to state 24
    DOUBLE     shift, and go to state 25
    INT        shift, and go to state 26
    OBJECT     shift, and go to state 27
    IF         shift, and go to state 187
    WHILE      shift, and go to state 188
    FOR        shift, and go to state 189
    FALSE      shift, and go to state 65
    TRUE       shift, and go to state 66
    NEW        shift, and go to state 67
    THIS       shift, and go to state 68
    NUL        shift, and go to state 69
    RETURN     shift, and go to state 190
    '+'        shift, and go to state 70
    '-'        shift, and go to state 71
    '!'        shift, and go to state 72
    DECREMENT  shift, and go to state 73
    INCREMENT  shift, and go to state 74
    '('        shift, and go to state 75
    '{'        shift, and go to state 191

    type             go to state 193
    noarraytype      go to state 30
    basictype        go to state 31
    arraytype        go to state 32
    expression       go to state 194
    expr             go to state 77
    qualifiedname    go to state 78
    qualnameorarray  go to state 79
    statement        go to state 254


state 254

  123 statement: FOR '(' variables_e ';' expr_e ';' expr_e ')' statement .

    $default  reduce using rule 123 (statement)
