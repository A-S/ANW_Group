Terminals which are not used

   EXTENDS
   INSTANCEOF


Grammar

    0 $accept: root $end

    1 root: /* empty */
    2     | root class

    3 class: CLASS IDENT '{' members '}'
    4      | CLASS IDENT ':' IDENT '{' members '}'

    5 members: /* empty */
    6        | members member

    7 member: global
    8       | constructor
    9       | function

   10 global: accessmodif type variables ';'
   11       | type variables ';'

   12 constructor: IDENT '(' arg_e ')' '{' statements '}'
   13            | accessmodif IDENT '(' arg_e ')' '{' statements '}'

   14 @1: /* empty */

   15 function: accessmodif type IDENT '(' @1 arg_e ')' '{' statements '}'

   16 @2: /* empty */

   17 function: accessmodif VOID IDENT '(' @2 arg_e ')' '{' statements '}'

   18 @3: /* empty */

   19 function: type IDENT '(' @3 arg_e ')' '{' statements '}'

   20 @4: /* empty */

   21 function: VOID IDENT '(' @4 arg_e ')' '{' statements '}'

   22 args: type IDENT

   23 arg: args
   24    | arg ',' args

   25 arg_e: /* empty */
   26      | arg

   27 variables: variable
   28          | variables ',' variable

   29 variable: IDENT
   30         | IDENT '=' expression

   31 accessmodif: PRIVATE
   32            | STATIC
   33            | PRIVATE STATIC

   34 type: noarraytype
   35     | arr_type

   36 noarraytype: IDENT
   37            | arraytype

   38 arraytype: BOOLEAN
   39          | INT
   40          | DOUBLE

   41 arr_type: IDENT '[' ']'
   42         | IDENT '[' ',' ']'
   43         | IDENT '[' ',' ',' ']'
   44         | arraytype '[' ']'
   45         | arraytype '[' ',' ']'
   46         | arraytype '[' ',' ',' ']'

   47 expression: INCREMENT IDENT
   48           | DECREMENT IDENT
   49           | IDENT INCREMENT
   50           | IDENT DECREMENT
   51           | '!' expression
   52           | '-' expression
   53           | '+' expression
   54           | '(' expression ')'
   55           | qualnameorarray
   56           | qualnameorarray '=' expression
   57           | qualifiedname '(' expr_list_e ')'
   58           | qualifiedname '(' expr_list_e ')' arrayindex
   59           | NEW IDENT '(' expr_list_e ')'
   60           | NEW IDENT arrayindex
   61           | expression EQ expression
   62           | expression NE expression
   63           | expression '<' expression
   64           | expression SE expression
   65           | expression '>' expression
   66           | expression LE expression
   67           | expression '+' expression
   68           | expression '-' expression
   69           | expression '*' expression
   70           | expression '/' expression
   71           | expression '%' expression
   72           | expression AND expression
   73           | expression OR expression
   74           | expression IS type
   75           | '(' arraytype ')' expression
   76           | INTEGER
   77           | REAL
   78           | TRUE
   79           | FALSE
   80           | THIS
   81           | NUL

   82 arrayindex: '[' expression ']'
   83           | '[' expression ',' expression ']'
   84           | '[' expression ',' expression ',' expression ']'

   85 qualifiedname: IDENT
   86              | expression '.' IDENT

   87 qualnameorarray: IDENT
   88                | IDENT arrayindex
   89                | expression '.' IDENT
   90                | expression '.' IDENT arrayindex

   91 expr_list: expression
   92          | expr_list ',' expression

   93 expr_list_e: /* empty */
   94            | expr_list

   95 statement: IF '(' expression ')' statement
   96          | IF '(' expression ')' statement ELSE statement
   97          | WHILE '(' expression ')' statement
   98          | FOR '(' vars_decl_e ';' expr_e ';' expr_e ')' statement
   99          | expression ';'
  100          | type variables ';'

  101 @5: /* empty */

  102 statement: '{' @5 statements '}'
  103          | RETURN expr_e ';'

  104 statements: /* empty */
  105           | statements statement

  106 vars_decl_e: /* empty */
  107            | type variables

  108 expr_e: /* empty */
  109       | expression


Terminals, with rules where they appear

$end (0) 0
'!' (33) 51
'%' (37) 71
'(' (40) 12 13 15 17 19 21 54 57 58 59 75 95 96 97 98
')' (41) 12 13 15 17 19 21 54 57 58 59 75 95 96 97 98
'*' (42) 69
'+' (43) 53 67
',' (44) 24 28 42 43 45 46 83 84 92
'-' (45) 52 68
'.' (46) 86 89 90
'/' (47) 70
':' (58) 4
';' (59) 10 11 98 99 100 103
'<' (60) 63
'=' (61) 30 56
'>' (62) 65
'[' (91) 41 42 43 44 45 46 82 83 84
']' (93) 41 42 43 44 45 46 82 83 84
'{' (123) 3 4 12 13 15 17 19 21 102
'}' (125) 3 4 12 13 15 17 19 21 102
error (256)
IDENT (258) 3 4 12 13 15 17 19 21 22 29 30 36 41 42 43 47 48 49 50
    59 60 85 86 87 88 89 90
INTEGER (259) 76
REAL (260) 77
CLASS (261) 3 4
BOOLEAN (262) 38
DOUBLE (263) 40
INT (264) 39
IS (265) 74
IF (266) 95 96
ELSE (267) 96
WHILE (268) 97
FOR (269) 98
FALSE (270) 79
TRUE (271) 78
EXTENDS (272)
INSTANCEOF (273)
NEW (274) 59 60
THIS (275) 80
NUL (276) 81
PRIVATE (277) 31 33
STATIC (278) 32 33
VOID (279) 17 21
RETURN (280) 103
IF_PREC (281)
OR (282) 73
AND (283) 72
NE (284) 62
EQ (285) 61
SE (286) 64
LE (287) 66
UNARY_OP (288)
DECREMENT (289) 48 50
INCREMENT (290) 47 49
change_type (291)


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
root (57)
    on left: 1 2, on right: 0 2
class (58)
    on left: 3 4, on right: 2
members (59)
    on left: 5 6, on right: 3 4 6
member (60)
    on left: 7 8 9, on right: 6
global (61)
    on left: 10 11, on right: 7
constructor (62)
    on left: 12 13, on right: 8
function (63)
    on left: 15 17 19 21, on right: 9
@1 (64)
    on left: 14, on right: 15
@2 (65)
    on left: 16, on right: 17
@3 (66)
    on left: 18, on right: 19
@4 (67)
    on left: 20, on right: 21
args (68)
    on left: 22, on right: 23 24
arg (69)
    on left: 23 24, on right: 24 26
arg_e (70)
    on left: 25 26, on right: 12 13 15 17 19 21
variables (71)
    on left: 27 28, on right: 10 11 28 100 107
variable (72)
    on left: 29 30, on right: 27 28
accessmodif (73)
    on left: 31 32 33, on right: 10 13 15 17
type (74)
    on left: 34 35, on right: 10 11 15 19 22 74 100 107
noarraytype (75)
    on left: 36 37, on right: 34
arraytype (76)
    on left: 38 39 40, on right: 37 44 45 46 75
arr_type (77)
    on left: 41 42 43 44 45 46, on right: 35
expression (78)
    on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
    65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81,
    on right: 30 51 52 53 54 56 61 62 63 64 65 66 67 68 69 70 71 72
    73 74 75 82 83 84 86 89 90 91 92 95 96 97 99 109
arrayindex (79)
    on left: 82 83 84, on right: 58 60 88 90
qualifiedname (80)
    on left: 85 86, on right: 57 58
qualnameorarray (81)
    on left: 87 88 89 90, on right: 55 56
expr_list (82)
    on left: 91 92, on right: 92 94
expr_list_e (83)
    on left: 93 94, on right: 57 58 59
statement (84)
    on left: 95 96 97 98 99 100 102 103, on right: 95 96 97 98 105
@5 (85)
    on left: 101, on right: 102
statements (86)
    on left: 104 105, on right: 12 13 15 17 19 21 102 105
vars_decl_e (87)
    on left: 106 107, on right: 98
expr_e (88)
    on left: 108 109, on right: 98 103


state 0

    0 $accept: . root $end

    $default  reduce using rule 1 (root)

    root  go to state 1


state 1

    0 $accept: root . $end
    2 root: root . class

    $end   shift, and go to state 2
    CLASS  shift, and go to state 3

    class  go to state 4


state 2

    0 $accept: root $end .

    $default  accept


state 3

    3 class: CLASS . IDENT '{' members '}'
    4      | CLASS . IDENT ':' IDENT '{' members '}'

    IDENT  shift, and go to state 5


state 4

    2 root: root class .

    $default  reduce using rule 2 (root)


state 5

    3 class: CLASS IDENT . '{' members '}'
    4      | CLASS IDENT . ':' IDENT '{' members '}'

    '{'  shift, and go to state 6
    ':'  shift, and go to state 7


state 6

    3 class: CLASS IDENT '{' . members '}'

    $default  reduce using rule 5 (members)

    members  go to state 8


state 7

    4 class: CLASS IDENT ':' . IDENT '{' members '}'

    IDENT  shift, and go to state 9


state 8

    3 class: CLASS IDENT '{' members . '}'
    6 members: members . member

    IDENT    shift, and go to state 10
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13
    PRIVATE  shift, and go to state 14
    STATIC   shift, and go to state 15
    VOID     shift, and go to state 16
    '}'      shift, and go to state 17

    member       go to state 18
    global       go to state 19
    constructor  go to state 20
    function     go to state 21
    accessmodif  go to state 22
    type         go to state 23
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 9

    4 class: CLASS IDENT ':' IDENT . '{' members '}'

    '{'  shift, and go to state 27


state 10

   12 constructor: IDENT . '(' arg_e ')' '{' statements '}'
   36 noarraytype: IDENT .
   41 arr_type: IDENT . '[' ']'
   42         | IDENT . '[' ',' ']'
   43         | IDENT . '[' ',' ',' ']'

    '('  shift, and go to state 28
    '['  shift, and go to state 29

    $default  reduce using rule 36 (noarraytype)


state 11

   38 arraytype: BOOLEAN .

    $default  reduce using rule 38 (arraytype)


state 12

   40 arraytype: DOUBLE .

    $default  reduce using rule 40 (arraytype)


state 13

   39 arraytype: INT .

    $default  reduce using rule 39 (arraytype)


state 14

   31 accessmodif: PRIVATE .
   33            | PRIVATE . STATIC

    STATIC  shift, and go to state 30

    $default  reduce using rule 31 (accessmodif)


state 15

   32 accessmodif: STATIC .

    $default  reduce using rule 32 (accessmodif)


state 16

   21 function: VOID . IDENT '(' @4 arg_e ')' '{' statements '}'

    IDENT  shift, and go to state 31


state 17

    3 class: CLASS IDENT '{' members '}' .

    $default  reduce using rule 3 (class)


state 18

    6 members: members member .

    $default  reduce using rule 6 (members)


state 19

    7 member: global .

    $default  reduce using rule 7 (member)


state 20

    8 member: constructor .

    $default  reduce using rule 8 (member)


state 21

    9 member: function .

    $default  reduce using rule 9 (member)


state 22

   10 global: accessmodif . type variables ';'
   13 constructor: accessmodif . IDENT '(' arg_e ')' '{' statements '}'
   15 function: accessmodif . type IDENT '(' @1 arg_e ')' '{' statements '}'
   17         | accessmodif . VOID IDENT '(' @2 arg_e ')' '{' statements '}'

    IDENT    shift, and go to state 32
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13
    VOID     shift, and go to state 33

    type         go to state 34
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 23

   11 global: type . variables ';'
   19 function: type . IDENT '(' @3 arg_e ')' '{' statements '}'

    IDENT  shift, and go to state 35

    variables  go to state 36
    variable   go to state 37


state 24

   34 type: noarraytype .

    $default  reduce using rule 34 (type)


state 25

   37 noarraytype: arraytype .
   44 arr_type: arraytype . '[' ']'
   45         | arraytype . '[' ',' ']'
   46         | arraytype . '[' ',' ',' ']'

    '['  shift, and go to state 38

    $default  reduce using rule 37 (noarraytype)


state 26

   35 type: arr_type .

    $default  reduce using rule 35 (type)


state 27

    4 class: CLASS IDENT ':' IDENT '{' . members '}'

    $default  reduce using rule 5 (members)

    members  go to state 39


state 28

   12 constructor: IDENT '(' . arg_e ')' '{' statements '}'

    IDENT    shift, and go to state 40
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13

    $default  reduce using rule 25 (arg_e)

    args         go to state 41
    arg          go to state 42
    arg_e        go to state 43
    type         go to state 44
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 29

   41 arr_type: IDENT '[' . ']'
   42         | IDENT '[' . ',' ']'
   43         | IDENT '[' . ',' ',' ']'

    ','  shift, and go to state 45
    ']'  shift, and go to state 46


state 30

   33 accessmodif: PRIVATE STATIC .

    $default  reduce using rule 33 (accessmodif)


state 31

   21 function: VOID IDENT . '(' @4 arg_e ')' '{' statements '}'

    '('  shift, and go to state 47


state 32

   13 constructor: accessmodif IDENT . '(' arg_e ')' '{' statements '}'
   36 noarraytype: IDENT .
   41 arr_type: IDENT . '[' ']'
   42         | IDENT . '[' ',' ']'
   43         | IDENT . '[' ',' ',' ']'

    '('  shift, and go to state 48
    '['  shift, and go to state 29

    $default  reduce using rule 36 (noarraytype)


state 33

   17 function: accessmodif VOID . IDENT '(' @2 arg_e ')' '{' statements '}'

    IDENT  shift, and go to state 49


state 34

   10 global: accessmodif type . variables ';'
   15 function: accessmodif type . IDENT '(' @1 arg_e ')' '{' statements '}'

    IDENT  shift, and go to state 50

    variables  go to state 51
    variable   go to state 37


state 35

   19 function: type IDENT . '(' @3 arg_e ')' '{' statements '}'
   29 variable: IDENT .
   30         | IDENT . '=' expression

    '='  shift, and go to state 52
    '('  shift, and go to state 53

    $default  reduce using rule 29 (variable)


state 36

   11 global: type variables . ';'
   28 variables: variables . ',' variable

    ';'  shift, and go to state 54
    ','  shift, and go to state 55


state 37

   27 variables: variable .

    $default  reduce using rule 27 (variables)


state 38

   44 arr_type: arraytype '[' . ']'
   45         | arraytype '[' . ',' ']'
   46         | arraytype '[' . ',' ',' ']'

    ','  shift, and go to state 56
    ']'  shift, and go to state 57


state 39

    4 class: CLASS IDENT ':' IDENT '{' members . '}'
    6 members: members . member

    IDENT    shift, and go to state 10
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13
    PRIVATE  shift, and go to state 14
    STATIC   shift, and go to state 15
    VOID     shift, and go to state 16
    '}'      shift, and go to state 58

    member       go to state 18
    global       go to state 19
    constructor  go to state 20
    function     go to state 21
    accessmodif  go to state 22
    type         go to state 23
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 40

   36 noarraytype: IDENT .
   41 arr_type: IDENT . '[' ']'
   42         | IDENT . '[' ',' ']'
   43         | IDENT . '[' ',' ',' ']'

    '['  shift, and go to state 29

    $default  reduce using rule 36 (noarraytype)


state 41

   23 arg: args .

    $default  reduce using rule 23 (arg)


state 42

   24 arg: arg . ',' args
   26 arg_e: arg .

    ','  shift, and go to state 59

    $default  reduce using rule 26 (arg_e)


state 43

   12 constructor: IDENT '(' arg_e . ')' '{' statements '}'

    ')'  shift, and go to state 60


state 44

   22 args: type . IDENT

    IDENT  shift, and go to state 61


state 45

   42 arr_type: IDENT '[' ',' . ']'
   43         | IDENT '[' ',' . ',' ']'

    ','  shift, and go to state 62
    ']'  shift, and go to state 63


state 46

   41 arr_type: IDENT '[' ']' .

    $default  reduce using rule 41 (arr_type)


state 47

   21 function: VOID IDENT '(' . @4 arg_e ')' '{' statements '}'

    $default  reduce using rule 20 (@4)

    @4  go to state 64


state 48

   13 constructor: accessmodif IDENT '(' . arg_e ')' '{' statements '}'

    IDENT    shift, and go to state 40
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13

    $default  reduce using rule 25 (arg_e)

    args         go to state 41
    arg          go to state 42
    arg_e        go to state 65
    type         go to state 44
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 49

   17 function: accessmodif VOID IDENT . '(' @2 arg_e ')' '{' statements '}'

    '('  shift, and go to state 66


state 50

   15 function: accessmodif type IDENT . '(' @1 arg_e ')' '{' statements '}'
   29 variable: IDENT .
   30         | IDENT . '=' expression

    '='  shift, and go to state 52
    '('  shift, and go to state 67

    $default  reduce using rule 29 (variable)


state 51

   10 global: accessmodif type variables . ';'
   28 variables: variables . ',' variable

    ';'  shift, and go to state 68
    ','  shift, and go to state 55


state 52

   30 variable: IDENT '=' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 83
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 53

   19 function: type IDENT '(' . @3 arg_e ')' '{' statements '}'

    $default  reduce using rule 18 (@3)

    @3  go to state 86


state 54

   11 global: type variables ';' .

    $default  reduce using rule 11 (global)


state 55

   28 variables: variables ',' . variable

    IDENT  shift, and go to state 87

    variable  go to state 88


state 56

   45 arr_type: arraytype '[' ',' . ']'
   46         | arraytype '[' ',' . ',' ']'

    ','  shift, and go to state 89
    ']'  shift, and go to state 90


state 57

   44 arr_type: arraytype '[' ']' .

    $default  reduce using rule 44 (arr_type)


state 58

    4 class: CLASS IDENT ':' IDENT '{' members '}' .

    $default  reduce using rule 4 (class)


state 59

   24 arg: arg ',' . args

    IDENT    shift, and go to state 40
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13

    args         go to state 91
    type         go to state 44
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 60

   12 constructor: IDENT '(' arg_e ')' . '{' statements '}'

    '{'  shift, and go to state 92


state 61

   22 args: type IDENT .

    $default  reduce using rule 22 (args)


state 62

   43 arr_type: IDENT '[' ',' ',' . ']'

    ']'  shift, and go to state 93


state 63

   42 arr_type: IDENT '[' ',' ']' .

    $default  reduce using rule 42 (arr_type)


state 64

   21 function: VOID IDENT '(' @4 . arg_e ')' '{' statements '}'

    IDENT    shift, and go to state 40
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13

    $default  reduce using rule 25 (arg_e)

    args         go to state 41
    arg          go to state 42
    arg_e        go to state 94
    type         go to state 44
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 65

   13 constructor: accessmodif IDENT '(' arg_e . ')' '{' statements '}'

    ')'  shift, and go to state 95


state 66

   17 function: accessmodif VOID IDENT '(' . @2 arg_e ')' '{' statements '}'

    $default  reduce using rule 16 (@2)

    @2  go to state 96


state 67

   15 function: accessmodif type IDENT '(' . @1 arg_e ')' '{' statements '}'

    $default  reduce using rule 14 (@1)

    @1  go to state 97


state 68

   10 global: accessmodif type variables ';' .

    $default  reduce using rule 10 (global)


state 69

   49 expression: IDENT . INCREMENT
   50           | IDENT . DECREMENT
   85 qualifiedname: IDENT .
   87 qualnameorarray: IDENT .
   88                | IDENT . arrayindex

    DECREMENT  shift, and go to state 98
    INCREMENT  shift, and go to state 99
    '['        shift, and go to state 100

    '('       reduce using rule 85 (qualifiedname)
    $default  reduce using rule 87 (qualnameorarray)

    arrayindex  go to state 101


state 70

   76 expression: INTEGER .

    $default  reduce using rule 76 (expression)


state 71

   77 expression: REAL .

    $default  reduce using rule 77 (expression)


state 72

   79 expression: FALSE .

    $default  reduce using rule 79 (expression)


state 73

   78 expression: TRUE .

    $default  reduce using rule 78 (expression)


state 74

   59 expression: NEW . IDENT '(' expr_list_e ')'
   60           | NEW . IDENT arrayindex

    IDENT  shift, and go to state 102


state 75

   80 expression: THIS .

    $default  reduce using rule 80 (expression)


state 76

   81 expression: NUL .

    $default  reduce using rule 81 (expression)


state 77

   53 expression: '+' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 103
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 78

   52 expression: '-' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 104
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 79

   51 expression: '!' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 105
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 80

   48 expression: DECREMENT . IDENT

    IDENT  shift, and go to state 106


state 81

   47 expression: INCREMENT . IDENT

    IDENT  shift, and go to state 107


state 82

   54 expression: '(' . expression ')'
   75           | '(' . arraytype ')' expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    arraytype        go to state 108
    expression       go to state 109
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 83

   30 variable: IDENT '=' expression .
   61 expression: expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex

    IS   shift, and go to state 110
    OR   shift, and go to state 111
    AND  shift, and go to state 112
    NE   shift, and go to state 113
    EQ   shift, and go to state 114
    '>'  shift, and go to state 115
    '<'  shift, and go to state 116
    SE   shift, and go to state 117
    LE   shift, and go to state 118
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124

    $default  reduce using rule 30 (variable)


state 84

   57 expression: qualifiedname . '(' expr_list_e ')'
   58           | qualifiedname . '(' expr_list_e ')' arrayindex

    '('  shift, and go to state 125


state 85

   55 expression: qualnameorarray .
   56           | qualnameorarray . '=' expression

    '='  shift, and go to state 126

    $default  reduce using rule 55 (expression)


state 86

   19 function: type IDENT '(' @3 . arg_e ')' '{' statements '}'

    IDENT    shift, and go to state 40
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13

    $default  reduce using rule 25 (arg_e)

    args         go to state 41
    arg          go to state 42
    arg_e        go to state 127
    type         go to state 44
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 87

   29 variable: IDENT .
   30         | IDENT . '=' expression

    '='  shift, and go to state 52

    $default  reduce using rule 29 (variable)


state 88

   28 variables: variables ',' variable .

    $default  reduce using rule 28 (variables)


state 89

   46 arr_type: arraytype '[' ',' ',' . ']'

    ']'  shift, and go to state 128


state 90

   45 arr_type: arraytype '[' ',' ']' .

    $default  reduce using rule 45 (arr_type)


state 91

   24 arg: arg ',' args .

    $default  reduce using rule 24 (arg)


state 92

   12 constructor: IDENT '(' arg_e ')' '{' . statements '}'

    $default  reduce using rule 104 (statements)

    statements  go to state 129


state 93

   43 arr_type: IDENT '[' ',' ',' ']' .

    $default  reduce using rule 43 (arr_type)


state 94

   21 function: VOID IDENT '(' @4 arg_e . ')' '{' statements '}'

    ')'  shift, and go to state 130


state 95

   13 constructor: accessmodif IDENT '(' arg_e ')' . '{' statements '}'

    '{'  shift, and go to state 131


state 96

   17 function: accessmodif VOID IDENT '(' @2 . arg_e ')' '{' statements '}'

    IDENT    shift, and go to state 40
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13

    $default  reduce using rule 25 (arg_e)

    args         go to state 41
    arg          go to state 42
    arg_e        go to state 132
    type         go to state 44
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 97

   15 function: accessmodif type IDENT '(' @1 . arg_e ')' '{' statements '}'

    IDENT    shift, and go to state 40
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13

    $default  reduce using rule 25 (arg_e)

    args         go to state 41
    arg          go to state 42
    arg_e        go to state 133
    type         go to state 44
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 98

   50 expression: IDENT DECREMENT .

    $default  reduce using rule 50 (expression)


state 99

   49 expression: IDENT INCREMENT .

    $default  reduce using rule 49 (expression)


state 100

   82 arrayindex: '[' . expression ']'
   83           | '[' . expression ',' expression ']'
   84           | '[' . expression ',' expression ',' expression ']'

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 134
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 101

   88 qualnameorarray: IDENT arrayindex .

    $default  reduce using rule 88 (qualnameorarray)


state 102

   59 expression: NEW IDENT . '(' expr_list_e ')'
   60           | NEW IDENT . arrayindex

    '('  shift, and go to state 135
    '['  shift, and go to state 100

    arrayindex  go to state 136


state 103

   53 expression: '+' expression .
   61           | expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex

    '.'  shift, and go to state 124

    $default  reduce using rule 53 (expression)


state 104

   52 expression: '-' expression .
   61           | expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex

    '.'  shift, and go to state 124

    $default  reduce using rule 52 (expression)


state 105

   51 expression: '!' expression .
   61           | expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex

    '.'  shift, and go to state 124

    $default  reduce using rule 51 (expression)


state 106

   48 expression: DECREMENT IDENT .

    $default  reduce using rule 48 (expression)


state 107

   47 expression: INCREMENT IDENT .

    $default  reduce using rule 47 (expression)


state 108

   75 expression: '(' arraytype . ')' expression

    ')'  shift, and go to state 137


state 109

   54 expression: '(' expression . ')'
   61           | expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex

    IS   shift, and go to state 110
    OR   shift, and go to state 111
    AND  shift, and go to state 112
    NE   shift, and go to state 113
    EQ   shift, and go to state 114
    '>'  shift, and go to state 115
    '<'  shift, and go to state 116
    SE   shift, and go to state 117
    LE   shift, and go to state 118
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124
    ')'  shift, and go to state 138


state 110

   74 expression: expression IS . type

    IDENT    shift, and go to state 40
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13

    type         go to state 139
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26


state 111

   73 expression: expression OR . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 140
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 112

   72 expression: expression AND . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 141
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 113

   62 expression: expression NE . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 142
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 114

   61 expression: expression EQ . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 143
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 115

   65 expression: expression '>' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 144
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 116

   63 expression: expression '<' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 145
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 117

   64 expression: expression SE . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 146
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 118

   66 expression: expression LE . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 147
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 119

   67 expression: expression '+' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 148
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 120

   68 expression: expression '-' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 149
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 121

   69 expression: expression '*' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 150
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 122

   70 expression: expression '/' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 151
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 123

   71 expression: expression '%' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 152
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 124

   86 qualifiedname: expression '.' . IDENT
   89 qualnameorarray: expression '.' . IDENT
   90                | expression '.' . IDENT arrayindex

    IDENT  shift, and go to state 153


state 125

   57 expression: qualifiedname '(' . expr_list_e ')'
   58           | qualifiedname '(' . expr_list_e ')' arrayindex

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    $default  reduce using rule 93 (expr_list_e)

    expression       go to state 154
    qualifiedname    go to state 84
    qualnameorarray  go to state 85
    expr_list        go to state 155
    expr_list_e      go to state 156


state 126

   56 expression: qualnameorarray '=' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 157
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 127

   19 function: type IDENT '(' @3 arg_e . ')' '{' statements '}'

    ')'  shift, and go to state 158


state 128

   46 arr_type: arraytype '[' ',' ',' ']' .

    $default  reduce using rule 46 (arr_type)


state 129

   12 constructor: IDENT '(' arg_e ')' '{' statements . '}'
  105 statements: statements . statement

    IDENT      shift, and go to state 159
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 160
    WHILE      shift, and go to state 161
    FOR        shift, and go to state 162
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 163
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 164
    '}'        shift, and go to state 165

    type             go to state 166
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 167
    qualifiedname    go to state 84
    qualnameorarray  go to state 85
    statement        go to state 168


state 130

   21 function: VOID IDENT '(' @4 arg_e ')' . '{' statements '}'

    '{'  shift, and go to state 169


state 131

   13 constructor: accessmodif IDENT '(' arg_e ')' '{' . statements '}'

    $default  reduce using rule 104 (statements)

    statements  go to state 170


state 132

   17 function: accessmodif VOID IDENT '(' @2 arg_e . ')' '{' statements '}'

    ')'  shift, and go to state 171


state 133

   15 function: accessmodif type IDENT '(' @1 arg_e . ')' '{' statements '}'

    ')'  shift, and go to state 172


state 134

   61 expression: expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   82 arrayindex: '[' expression . ']'
   83           | '[' expression . ',' expression ']'
   84           | '[' expression . ',' expression ',' expression ']'
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex

    IS   shift, and go to state 110
    OR   shift, and go to state 111
    AND  shift, and go to state 112
    NE   shift, and go to state 113
    EQ   shift, and go to state 114
    '>'  shift, and go to state 115
    '<'  shift, and go to state 116
    SE   shift, and go to state 117
    LE   shift, and go to state 118
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124
    ','  shift, and go to state 173
    ']'  shift, and go to state 174


state 135

   59 expression: NEW IDENT '(' . expr_list_e ')'

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    $default  reduce using rule 93 (expr_list_e)

    expression       go to state 154
    qualifiedname    go to state 84
    qualnameorarray  go to state 85
    expr_list        go to state 155
    expr_list_e      go to state 175


state 136

   60 expression: NEW IDENT arrayindex .

    $default  reduce using rule 60 (expression)


state 137

   75 expression: '(' arraytype ')' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 176
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 138

   54 expression: '(' expression ')' .

    $default  reduce using rule 54 (expression)


state 139

   74 expression: expression IS type .

    $default  reduce using rule 74 (expression)


state 140

   61 expression: expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   73           | expression OR expression .
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex

    IS   shift, and go to state 110
    AND  shift, and go to state 112
    NE   shift, and go to state 113
    EQ   shift, and go to state 114
    '>'  shift, and go to state 115
    '<'  shift, and go to state 116
    SE   shift, and go to state 117
    LE   shift, and go to state 118
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124

    $default  reduce using rule 73 (expression)


state 141

   61 expression: expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   72           | expression AND expression .
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex

    IS   shift, and go to state 110
    NE   shift, and go to state 113
    EQ   shift, and go to state 114
    '>'  shift, and go to state 115
    '<'  shift, and go to state 116
    SE   shift, and go to state 117
    LE   shift, and go to state 118
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124

    $default  reduce using rule 72 (expression)


state 142

   61 expression: expression . EQ expression
   62           | expression . NE expression
   62           | expression NE expression .
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex

    '>'  shift, and go to state 115
    '<'  shift, and go to state 116
    SE   shift, and go to state 117
    LE   shift, and go to state 118
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124

    $default  reduce using rule 62 (expression)


state 143

   61 expression: expression . EQ expression
   61           | expression EQ expression .
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex

    '>'  shift, and go to state 115
    '<'  shift, and go to state 116
    SE   shift, and go to state 117
    LE   shift, and go to state 118
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124

    $default  reduce using rule 61 (expression)


state 144

   61 expression: expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   65           | expression '>' expression .
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex

    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124

    $default  reduce using rule 65 (expression)


state 145

   61 expression: expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   63           | expression '<' expression .
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex

    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124

    $default  reduce using rule 63 (expression)


state 146

   61 expression: expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   64           | expression SE expression .
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex

    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124

    $default  reduce using rule 64 (expression)


state 147

   61 expression: expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   66           | expression LE expression .
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex

    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124

    $default  reduce using rule 66 (expression)


state 148

   61 expression: expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   67           | expression '+' expression .
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex

    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124

    $default  reduce using rule 67 (expression)


state 149

   61 expression: expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   68           | expression '-' expression .
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex

    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124

    $default  reduce using rule 68 (expression)


state 150

   61 expression: expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   69           | expression '*' expression .
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex

    '.'  shift, and go to state 124

    $default  reduce using rule 69 (expression)


state 151

   61 expression: expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   70           | expression '/' expression .
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex

    '.'  shift, and go to state 124

    $default  reduce using rule 70 (expression)


state 152

   61 expression: expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   71           | expression '%' expression .
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex

    '.'  shift, and go to state 124

    $default  reduce using rule 71 (expression)


state 153

   86 qualifiedname: expression '.' IDENT .
   89 qualnameorarray: expression '.' IDENT .
   90                | expression '.' IDENT . arrayindex

    '['  shift, and go to state 100

    '('       reduce using rule 86 (qualifiedname)
    $default  reduce using rule 89 (qualnameorarray)

    arrayindex  go to state 177


state 154

   61 expression: expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex
   91 expr_list: expression .

    IS   shift, and go to state 110
    OR   shift, and go to state 111
    AND  shift, and go to state 112
    NE   shift, and go to state 113
    EQ   shift, and go to state 114
    '>'  shift, and go to state 115
    '<'  shift, and go to state 116
    SE   shift, and go to state 117
    LE   shift, and go to state 118
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124

    $default  reduce using rule 91 (expr_list)


state 155

   92 expr_list: expr_list . ',' expression
   94 expr_list_e: expr_list .

    ','  shift, and go to state 178

    $default  reduce using rule 94 (expr_list_e)


state 156

   57 expression: qualifiedname '(' expr_list_e . ')'
   58           | qualifiedname '(' expr_list_e . ')' arrayindex

    ')'  shift, and go to state 179


state 157

   56 expression: qualnameorarray '=' expression .
   61           | expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex

    IS   shift, and go to state 110
    OR   shift, and go to state 111
    AND  shift, and go to state 112
    NE   shift, and go to state 113
    EQ   shift, and go to state 114
    '>'  shift, and go to state 115
    '<'  shift, and go to state 116
    SE   shift, and go to state 117
    LE   shift, and go to state 118
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124

    $default  reduce using rule 56 (expression)


state 158

   19 function: type IDENT '(' @3 arg_e ')' . '{' statements '}'

    '{'  shift, and go to state 180


state 159

   36 noarraytype: IDENT .
   41 arr_type: IDENT . '[' ']'
   42         | IDENT . '[' ',' ']'
   43         | IDENT . '[' ',' ',' ']'
   49 expression: IDENT . INCREMENT
   50           | IDENT . DECREMENT
   85 qualifiedname: IDENT .
   87 qualnameorarray: IDENT .
   88                | IDENT . arrayindex

    DECREMENT  shift, and go to state 98
    INCREMENT  shift, and go to state 99
    '['        shift, and go to state 181

    IDENT     reduce using rule 36 (noarraytype)
    '('       reduce using rule 85 (qualifiedname)
    $default  reduce using rule 87 (qualnameorarray)

    arrayindex  go to state 101


state 160

   95 statement: IF . '(' expression ')' statement
   96          | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 182


state 161

   97 statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 183


state 162

   98 statement: FOR . '(' vars_decl_e ';' expr_e ';' expr_e ')' statement

    '('  shift, and go to state 184


state 163

  103 statement: RETURN . expr_e ';'

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    $default  reduce using rule 108 (expr_e)

    expression       go to state 185
    qualifiedname    go to state 84
    qualnameorarray  go to state 85
    expr_e           go to state 186


state 164

  102 statement: '{' . @5 statements '}'

    $default  reduce using rule 101 (@5)

    @5  go to state 187


state 165

   12 constructor: IDENT '(' arg_e ')' '{' statements '}' .

    $default  reduce using rule 12 (constructor)


state 166

  100 statement: type . variables ';'

    IDENT  shift, and go to state 87

    variables  go to state 188
    variable   go to state 37


state 167

   61 expression: expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex
   99 statement: expression . ';'

    IS   shift, and go to state 110
    OR   shift, and go to state 111
    AND  shift, and go to state 112
    NE   shift, and go to state 113
    EQ   shift, and go to state 114
    '>'  shift, and go to state 115
    '<'  shift, and go to state 116
    SE   shift, and go to state 117
    LE   shift, and go to state 118
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124
    ';'  shift, and go to state 189


state 168

  105 statements: statements statement .

    $default  reduce using rule 105 (statements)


state 169

   21 function: VOID IDENT '(' @4 arg_e ')' '{' . statements '}'

    $default  reduce using rule 104 (statements)

    statements  go to state 190


state 170

   13 constructor: accessmodif IDENT '(' arg_e ')' '{' statements . '}'
  105 statements: statements . statement

    IDENT      shift, and go to state 159
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 160
    WHILE      shift, and go to state 161
    FOR        shift, and go to state 162
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 163
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 164
    '}'        shift, and go to state 191

    type             go to state 166
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 167
    qualifiedname    go to state 84
    qualnameorarray  go to state 85
    statement        go to state 168


state 171

   17 function: accessmodif VOID IDENT '(' @2 arg_e ')' . '{' statements '}'

    '{'  shift, and go to state 192


state 172

   15 function: accessmodif type IDENT '(' @1 arg_e ')' . '{' statements '}'

    '{'  shift, and go to state 193


state 173

   83 arrayindex: '[' expression ',' . expression ']'
   84           | '[' expression ',' . expression ',' expression ']'

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 194
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 174

   82 arrayindex: '[' expression ']' .

    $default  reduce using rule 82 (arrayindex)


state 175

   59 expression: NEW IDENT '(' expr_list_e . ')'

    ')'  shift, and go to state 195


state 176

   61 expression: expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   75           | '(' arraytype ')' expression .
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex

    '.'  shift, and go to state 124

    $default  reduce using rule 75 (expression)


state 177

   90 qualnameorarray: expression '.' IDENT arrayindex .

    $default  reduce using rule 90 (qualnameorarray)


state 178

   92 expr_list: expr_list ',' . expression

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 196
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 179

   57 expression: qualifiedname '(' expr_list_e ')' .
   58           | qualifiedname '(' expr_list_e ')' . arrayindex

    '['  shift, and go to state 100

    $default  reduce using rule 57 (expression)

    arrayindex  go to state 197


state 180

   19 function: type IDENT '(' @3 arg_e ')' '{' . statements '}'

    $default  reduce using rule 104 (statements)

    statements  go to state 198


state 181

   41 arr_type: IDENT '[' . ']'
   42         | IDENT '[' . ',' ']'
   43         | IDENT '[' . ',' ',' ']'
   82 arrayindex: '[' . expression ']'
   83           | '[' . expression ',' expression ']'
   84           | '[' . expression ',' expression ',' expression ']'

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    ','        shift, and go to state 45
    ']'        shift, and go to state 46

    expression       go to state 134
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 182

   95 statement: IF '(' . expression ')' statement
   96          | IF '(' . expression ')' statement ELSE statement

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 199
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 183

   97 statement: WHILE '(' . expression ')' statement

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 200
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 184

   98 statement: FOR '(' . vars_decl_e ';' expr_e ';' expr_e ')' statement

    IDENT    shift, and go to state 40
    BOOLEAN  shift, and go to state 11
    DOUBLE   shift, and go to state 12
    INT      shift, and go to state 13

    $default  reduce using rule 106 (vars_decl_e)

    type         go to state 201
    noarraytype  go to state 24
    arraytype    go to state 25
    arr_type     go to state 26
    vars_decl_e  go to state 202


state 185

   61 expression: expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex
  109 expr_e: expression .

    IS   shift, and go to state 110
    OR   shift, and go to state 111
    AND  shift, and go to state 112
    NE   shift, and go to state 113
    EQ   shift, and go to state 114
    '>'  shift, and go to state 115
    '<'  shift, and go to state 116
    SE   shift, and go to state 117
    LE   shift, and go to state 118
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124

    $default  reduce using rule 109 (expr_e)


state 186

  103 statement: RETURN expr_e . ';'

    ';'  shift, and go to state 203


state 187

  102 statement: '{' @5 . statements '}'

    $default  reduce using rule 104 (statements)

    statements  go to state 204


state 188

   28 variables: variables . ',' variable
  100 statement: type variables . ';'

    ';'  shift, and go to state 205
    ','  shift, and go to state 55


state 189

   99 statement: expression ';' .

    $default  reduce using rule 99 (statement)


state 190

   21 function: VOID IDENT '(' @4 arg_e ')' '{' statements . '}'
  105 statements: statements . statement

    IDENT      shift, and go to state 159
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 160
    WHILE      shift, and go to state 161
    FOR        shift, and go to state 162
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 163
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 164
    '}'        shift, and go to state 206

    type             go to state 166
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 167
    qualifiedname    go to state 84
    qualnameorarray  go to state 85
    statement        go to state 168


state 191

   13 constructor: accessmodif IDENT '(' arg_e ')' '{' statements '}' .

    $default  reduce using rule 13 (constructor)


state 192

   17 function: accessmodif VOID IDENT '(' @2 arg_e ')' '{' . statements '}'

    $default  reduce using rule 104 (statements)

    statements  go to state 207


state 193

   15 function: accessmodif type IDENT '(' @1 arg_e ')' '{' . statements '}'

    $default  reduce using rule 104 (statements)

    statements  go to state 208


state 194

   61 expression: expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   83 arrayindex: '[' expression ',' expression . ']'
   84           | '[' expression ',' expression . ',' expression ']'
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex

    IS   shift, and go to state 110
    OR   shift, and go to state 111
    AND  shift, and go to state 112
    NE   shift, and go to state 113
    EQ   shift, and go to state 114
    '>'  shift, and go to state 115
    '<'  shift, and go to state 116
    SE   shift, and go to state 117
    LE   shift, and go to state 118
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124
    ','  shift, and go to state 209
    ']'  shift, and go to state 210


state 195

   59 expression: NEW IDENT '(' expr_list_e ')' .

    $default  reduce using rule 59 (expression)


state 196

   61 expression: expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex
   92 expr_list: expr_list ',' expression .

    IS   shift, and go to state 110
    OR   shift, and go to state 111
    AND  shift, and go to state 112
    NE   shift, and go to state 113
    EQ   shift, and go to state 114
    '>'  shift, and go to state 115
    '<'  shift, and go to state 116
    SE   shift, and go to state 117
    LE   shift, and go to state 118
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124

    $default  reduce using rule 92 (expr_list)


state 197

   58 expression: qualifiedname '(' expr_list_e ')' arrayindex .

    $default  reduce using rule 58 (expression)


state 198

   19 function: type IDENT '(' @3 arg_e ')' '{' statements . '}'
  105 statements: statements . statement

    IDENT      shift, and go to state 159
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 160
    WHILE      shift, and go to state 161
    FOR        shift, and go to state 162
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 163
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 164
    '}'        shift, and go to state 211

    type             go to state 166
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 167
    qualifiedname    go to state 84
    qualnameorarray  go to state 85
    statement        go to state 168


state 199

   61 expression: expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex
   95 statement: IF '(' expression . ')' statement
   96          | IF '(' expression . ')' statement ELSE statement

    IS   shift, and go to state 110
    OR   shift, and go to state 111
    AND  shift, and go to state 112
    NE   shift, and go to state 113
    EQ   shift, and go to state 114
    '>'  shift, and go to state 115
    '<'  shift, and go to state 116
    SE   shift, and go to state 117
    LE   shift, and go to state 118
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124
    ')'  shift, and go to state 212


state 200

   61 expression: expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex
   97 statement: WHILE '(' expression . ')' statement

    IS   shift, and go to state 110
    OR   shift, and go to state 111
    AND  shift, and go to state 112
    NE   shift, and go to state 113
    EQ   shift, and go to state 114
    '>'  shift, and go to state 115
    '<'  shift, and go to state 116
    SE   shift, and go to state 117
    LE   shift, and go to state 118
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124
    ')'  shift, and go to state 213


state 201

  107 vars_decl_e: type . variables

    IDENT  shift, and go to state 87

    variables  go to state 214
    variable   go to state 37


state 202

   98 statement: FOR '(' vars_decl_e . ';' expr_e ';' expr_e ')' statement

    ';'  shift, and go to state 215


state 203

  103 statement: RETURN expr_e ';' .

    $default  reduce using rule 103 (statement)


state 204

  102 statement: '{' @5 statements . '}'
  105 statements: statements . statement

    IDENT      shift, and go to state 159
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 160
    WHILE      shift, and go to state 161
    FOR        shift, and go to state 162
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 163
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 164
    '}'        shift, and go to state 216

    type             go to state 166
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 167
    qualifiedname    go to state 84
    qualnameorarray  go to state 85
    statement        go to state 168


state 205

  100 statement: type variables ';' .

    $default  reduce using rule 100 (statement)


state 206

   21 function: VOID IDENT '(' @4 arg_e ')' '{' statements '}' .

    $default  reduce using rule 21 (function)


state 207

   17 function: accessmodif VOID IDENT '(' @2 arg_e ')' '{' statements . '}'
  105 statements: statements . statement

    IDENT      shift, and go to state 159
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 160
    WHILE      shift, and go to state 161
    FOR        shift, and go to state 162
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 163
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 164
    '}'        shift, and go to state 217

    type             go to state 166
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 167
    qualifiedname    go to state 84
    qualnameorarray  go to state 85
    statement        go to state 168


state 208

   15 function: accessmodif type IDENT '(' @1 arg_e ')' '{' statements . '}'
  105 statements: statements . statement

    IDENT      shift, and go to state 159
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 160
    WHILE      shift, and go to state 161
    FOR        shift, and go to state 162
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 163
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 164
    '}'        shift, and go to state 218

    type             go to state 166
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 167
    qualifiedname    go to state 84
    qualnameorarray  go to state 85
    statement        go to state 168


state 209

   84 arrayindex: '[' expression ',' expression ',' . expression ']'

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    expression       go to state 219
    qualifiedname    go to state 84
    qualnameorarray  go to state 85


state 210

   83 arrayindex: '[' expression ',' expression ']' .

    $default  reduce using rule 83 (arrayindex)


state 211

   19 function: type IDENT '(' @3 arg_e ')' '{' statements '}' .

    $default  reduce using rule 19 (function)


state 212

   95 statement: IF '(' expression ')' . statement
   96          | IF '(' expression ')' . statement ELSE statement

    IDENT      shift, and go to state 159
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 160
    WHILE      shift, and go to state 161
    FOR        shift, and go to state 162
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 163
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 164

    type             go to state 166
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 167
    qualifiedname    go to state 84
    qualnameorarray  go to state 85
    statement        go to state 220


state 213

   97 statement: WHILE '(' expression ')' . statement

    IDENT      shift, and go to state 159
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 160
    WHILE      shift, and go to state 161
    FOR        shift, and go to state 162
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 163
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 164

    type             go to state 166
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 167
    qualifiedname    go to state 84
    qualnameorarray  go to state 85
    statement        go to state 221


state 214

   28 variables: variables . ',' variable
  107 vars_decl_e: type variables .

    ','  shift, and go to state 55

    $default  reduce using rule 107 (vars_decl_e)


state 215

   98 statement: FOR '(' vars_decl_e ';' . expr_e ';' expr_e ')' statement

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    $default  reduce using rule 108 (expr_e)

    expression       go to state 185
    qualifiedname    go to state 84
    qualnameorarray  go to state 85
    expr_e           go to state 222


state 216

  102 statement: '{' @5 statements '}' .

    $default  reduce using rule 102 (statement)


state 217

   17 function: accessmodif VOID IDENT '(' @2 arg_e ')' '{' statements '}' .

    $default  reduce using rule 17 (function)


state 218

   15 function: accessmodif type IDENT '(' @1 arg_e ')' '{' statements '}' .

    $default  reduce using rule 15 (function)


state 219

   61 expression: expression . EQ expression
   62           | expression . NE expression
   63           | expression . '<' expression
   64           | expression . SE expression
   65           | expression . '>' expression
   66           | expression . LE expression
   67           | expression . '+' expression
   68           | expression . '-' expression
   69           | expression . '*' expression
   70           | expression . '/' expression
   71           | expression . '%' expression
   72           | expression . AND expression
   73           | expression . OR expression
   74           | expression . IS type
   84 arrayindex: '[' expression ',' expression ',' expression . ']'
   86 qualifiedname: expression . '.' IDENT
   89 qualnameorarray: expression . '.' IDENT
   90                | expression . '.' IDENT arrayindex

    IS   shift, and go to state 110
    OR   shift, and go to state 111
    AND  shift, and go to state 112
    NE   shift, and go to state 113
    EQ   shift, and go to state 114
    '>'  shift, and go to state 115
    '<'  shift, and go to state 116
    SE   shift, and go to state 117
    LE   shift, and go to state 118
    '+'  shift, and go to state 119
    '-'  shift, and go to state 120
    '*'  shift, and go to state 121
    '/'  shift, and go to state 122
    '%'  shift, and go to state 123
    '.'  shift, and go to state 124
    ']'  shift, and go to state 223


state 220

   95 statement: IF '(' expression ')' statement .
   96          | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 224

    $default  reduce using rule 95 (statement)


state 221

   97 statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 97 (statement)


state 222

   98 statement: FOR '(' vars_decl_e ';' expr_e . ';' expr_e ')' statement

    ';'  shift, and go to state 225


state 223

   84 arrayindex: '[' expression ',' expression ',' expression ']' .

    $default  reduce using rule 84 (arrayindex)


state 224

   96 statement: IF '(' expression ')' statement ELSE . statement

    IDENT      shift, and go to state 159
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 160
    WHILE      shift, and go to state 161
    FOR        shift, and go to state 162
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 163
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 164

    type             go to state 166
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 167
    qualifiedname    go to state 84
    qualnameorarray  go to state 85
    statement        go to state 226


state 225

   98 statement: FOR '(' vars_decl_e ';' expr_e ';' . expr_e ')' statement

    IDENT      shift, and go to state 69
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82

    $default  reduce using rule 108 (expr_e)

    expression       go to state 185
    qualifiedname    go to state 84
    qualnameorarray  go to state 85
    expr_e           go to state 227


state 226

   96 statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 96 (statement)


state 227

   98 statement: FOR '(' vars_decl_e ';' expr_e ';' expr_e . ')' statement

    ')'  shift, and go to state 228


state 228

   98 statement: FOR '(' vars_decl_e ';' expr_e ';' expr_e ')' . statement

    IDENT      shift, and go to state 159
    INTEGER    shift, and go to state 70
    REAL       shift, and go to state 71
    BOOLEAN    shift, and go to state 11
    DOUBLE     shift, and go to state 12
    INT        shift, and go to state 13
    IF         shift, and go to state 160
    WHILE      shift, and go to state 161
    FOR        shift, and go to state 162
    FALSE      shift, and go to state 72
    TRUE       shift, and go to state 73
    NEW        shift, and go to state 74
    THIS       shift, and go to state 75
    NUL        shift, and go to state 76
    RETURN     shift, and go to state 163
    '+'        shift, and go to state 77
    '-'        shift, and go to state 78
    '!'        shift, and go to state 79
    DECREMENT  shift, and go to state 80
    INCREMENT  shift, and go to state 81
    '('        shift, and go to state 82
    '{'        shift, and go to state 164

    type             go to state 166
    noarraytype      go to state 24
    arraytype        go to state 25
    arr_type         go to state 26
    expression       go to state 167
    qualifiedname    go to state 84
    qualnameorarray  go to state 85
    statement        go to state 229


state 229

   98 statement: FOR '(' vars_decl_e ';' expr_e ';' expr_e ')' statement .

    $default  reduce using rule 98 (statement)
